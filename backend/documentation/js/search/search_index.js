var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.276,1,3.139]],["body/controllers/AppController.html",[0,2.083,1,5.125,2,1.685,3,0.127,4,0.112,5,0.112,6,4.944,7,0.636,8,1.702,9,6.931,10,1.338,11,0.011,12,0.706,13,5.639,14,1.377,15,1.165,16,0.177,17,0.806,18,4.892,19,4.944,20,0.127,21,0.282,22,2.464,23,1.685,24,1.377,25,5.639,26,0.009,27,0.009]],["title/modules/AppModule.html",[28,1.314,29,3.139]],["body/modules/AppModule.html",[1,4.203,2,1.44,3,0.074,4,0.065,5,0.065,11,0.011,16,0.212,17,0.468,18,4.545,19,2.87,20,0.074,21,0.164,26,0.006,27,0.006,28,1.483,29,6.332,30,1.381,31,2.033,32,2.87,33,2.87,34,2.87,35,4.829,36,4.829,37,4.829,38,4.829,39,4.829,40,4.829,41,4.829,42,4.829,43,4.829,44,4.829,45,4.829,46,4.829,47,2.183,48,1.483,49,1.483,50,3.273,51,2.266,52,2.803,53,3.273,54,3.273,55,3.273,56,1.6,57,0.822,58,3.273,59,3.273,60,3.273,61,3.273,62,3.273,63,3.273,64,3.273,65,3.273,66,2.604,67,2.248,68,3.273,69,3.273,70,2.87,71,2.87,72,3.542,73,2.406,74,2.87,75,2.87,76,3.273,77,3.273,78,3.273]],["title/injectables/AppService.html",[18,2.76,79,0.61]],["body/injectables/AppService.html",[3,0.133,4,0.117,5,0.117,7,0.664,8,1.747,9,7.034,11,0.011,12,0.737,14,1.437,15,1.195,16,0.149,17,0.841,18,4.626,20,0.133,21,0.294,24,1.437,26,0.009,27,0.009,79,1.023,80,1.811,81,5.159,82,5.884,83,5.159,84,5.884]],["title/classes/Articles.html",[21,0.214,85,2.008]],["body/classes/Articles.html",[3,0.113,4,0.099,5,0.099,7,0.563,10,1.795,11,0.011,12,0.947,15,1.264,16,0.127,20,0.113,21,0.323,26,0.008,27,0.008,85,3.037,86,1.152,87,6.867,88,3.975,89,2.109,90,4.626,91,5.693,92,7.155,93,5.26,94,0.947,95,3.557,96,4.996,97,4.401,98,5.379,99,4.996,100,3.23,101,4.996,102,4.996,103,3.952,104,2.264]],["title/classes/Articles-1.html",[21,0.179,85,1.679,105,2.077]],["body/classes/Articles-1.html",[3,0.121,4,0.106,5,0.106,7,0.604,10,1.754,11,0.011,12,0.926,15,0.895,16,0.136,20,0.121,21,0.338,26,0.009,27,0.009,85,3.175,86,1.235,89,2.205,90,4.364,91,5.371,94,0.926,95,3.476,97,3.927,98,5.076,104,2.426,106,4.695,107,5.918,108,5.355,109,5.918,110,5.355,111,5.355,112,5.882,113,5.355,114,5.355,115,5.355]],["title/classes/CreateCustomerDto.html",[21,0.214,116,2.76]],["body/classes/CreateCustomerDto.html",[3,0.099,4,0.087,5,0.087,7,0.495,10,1.877,11,0.011,12,0.991,15,1.416,16,0.112,20,0.099,21,0.297,26,0.008,27,0.008,86,1.013,89,1.937,94,0.991,95,3.986,100,2.839,103,3.629,104,1.99,116,3.834,117,7.052,118,3.495,119,4.109,120,3.907,121,4.611,122,0.87,123,2.934,124,3.907,125,2.563,126,4.392,127,4.392,128,4.392,129,4.392,130,4.392,131,4.392,132,4.392]],["title/classes/CreateDriverDto.html",[21,0.214,133,2.76]],["body/classes/CreateDriverDto.html",[3,0.1,4,0.088,5,0.088,7,0.498,10,1.879,11,0.011,12,0.992,15,1.417,16,0.112,20,0.1,21,0.298,26,0.008,27,0.008,86,1.019,89,1.945,94,0.992,95,4.008,104,2.002,119,4.122,120,3.918,122,0.873,123,2.943,125,2.57,133,3.849,134,7.062,135,3.248,136,5.905,137,5.905,138,4.418,139,3.874,140,4.418,141,3.874,142,4.418,143,4.418,144,4.418]],["title/classes/CreateExpenseDto.html",[21,0.214,145,2.76]],["body/classes/CreateExpenseDto.html",[3,0.118,4,0.104,5,0.104,7,0.589,10,1.734,11,0.011,12,0.915,15,0.873,16,0.133,20,0.118,21,0.333,26,0.008,27,0.008,86,1.204,89,2.171,94,0.915,95,3.437,97,3.039,98,4.563,103,4.066,104,2.367,109,4.58,112,5.287,122,0.861,145,4.296,146,6.743,147,4.157,148,5.826,149,4.041,150,5.223,151,4.157,152,5.223,153,5.223,154,5.287,155,3.587,156,4.58]],["title/classes/CreateManagerDto.html",[21,0.214,157,2.76]],["body/classes/CreateManagerDto.html",[3,0.114,4,0.1,5,0.1,7,0.569,10,1.801,11,0.011,12,0.951,15,1.385,16,0.128,20,0.114,21,0.325,26,0.008,27,0.008,86,1.164,89,2.123,94,0.951,95,3.939,104,2.287,120,4.183,122,0.931,123,3.142,125,2.744,157,4.202,158,6.889,159,3.71,160,5.046,161,5.046,162,5.046,163,5.046]],["title/classes/CreateOrderDto.html",[21,0.214,164,2.613]],["body/classes/CreateOrderDto.html",[3,0.104,4,0.091,5,0.091,7,0.52,10,1.739,11,0.011,12,0.918,15,1.225,16,0.186,20,0.104,21,0.367,26,0.008,27,0.008,85,3.824,86,1.063,89,2.001,94,0.983,95,3.448,100,2.98,103,4.21,104,2.775,124,4.003,149,3.884,151,3.668,154,4.874,164,3.749,165,6.072,166,3.668,167,4.725,168,4.609,169,4.042,170,4.609,171,4.609,172,4.609,173,4.609,174,5.371,175,3.668,176,2.558,177,4.042,178,2.089]],["title/classes/CreateProductDto.html",[21,0.214,179,2.76]],["body/classes/CreateProductDto.html",[3,0.104,4,0.091,5,0.091,7,0.52,10,1.862,11,0.011,12,0.983,15,1.275,16,0.117,20,0.104,21,0.307,26,0.008,27,0.008,86,1.063,89,2.001,93,4.503,94,0.983,95,3.824,97,2.682,98,4.207,100,3.96,103,4.21,104,2.089,112,4.874,122,0.794,155,3.166,179,3.96,180,7.02,181,4.042,182,4.503,183,4.503,184,3.564,185,3.96,186,4.609,187,4.609,188,4.609,189,4.609,190,4.609,191,4.609,192,4.609,193,4.609,194,3.668,195,4.042,196,4.042,197,4.042,198,4.042]],["title/classes/CreatePurchaseDto.html",[21,0.214,199,2.76]],["body/classes/CreatePurchaseDto.html",[3,0.106,4,0.093,5,0.093,7,0.53,10,1.752,11,0.011,12,0.925,15,0.785,16,0.176,20,0.106,21,0.348,26,0.008,27,0.008,85,3.783,86,1.083,89,2.026,94,0.988,95,2.917,97,3.608,98,3.226,100,3.036,103,4.699,104,2.128,149,3.157,151,3.737,154,4.935,169,4.118,174,4.118,175,3.737,177,4.118,178,2.128,185,4.01,194,3.737,199,4.01,200,6.733,201,3.737,202,5.105,203,5.525,204,4.696,205,4.696,206,4.696,207,4.696,208,4.696,209,4.696,210,4.696,211,4.696]],["title/classes/CreateStoreDto.html",[21,0.214,212,2.76]],["body/classes/CreateStoreDto.html",[3,0.112,4,0.099,5,0.099,7,0.562,10,1.792,11,0.011,12,0.946,15,1.381,16,0.126,20,0.112,21,0.322,26,0.008,27,0.008,86,1.148,89,2.105,94,0.946,95,3.769,100,4.166,103,4.623,104,2.256,119,4.372,120,4.156,122,0.926,184,4.156,212,4.166,213,6.86,214,3.962,215,4.979,216,4.979,217,4.979,218,4.979,219,4.979]],["title/classes/Customer.html",[21,0.214,220,2.008]],["body/classes/Customer.html",[3,0.091,4,0.08,5,0.08,7,0.454,10,1.869,11,0.011,12,0.987,15,1.413,16,0.142,20,0.126,21,0.201,26,0.007,27,0.007,57,1.011,86,0.928,89,1.825,94,0.987,119,3.926,120,3.733,121,4.406,122,0.831,123,2.804,124,3.733,125,2.449,178,2.531,220,2.627,221,3.202,222,1.444,223,3.561,224,5.105,225,4.671,226,4.024,227,4.024,228,4.024,229,4.024,230,4.024,231,4.024,232,4.024,233,2.602,234,4.445,235,4.024,236,4.024,237,2.132,238,2.234,239,1.441,240,2.764,241,2.764,242,2.764,243,4.024,244,2.602,245,1.238,246,2.602,247,3.529]],["title/controllers/CustomerController.html",[0,1.276,248,3.139]],["body/controllers/CustomerController.html",[0,0.8,2,0.8,3,0.061,4,0.053,5,0.053,7,0.302,8,1.011,10,1.611,11,0.011,12,0.851,14,1.658,15,1.27,16,0.183,17,0.383,20,0.061,21,0.134,22,1.171,23,0.8,24,1.504,26,0.005,27,0.005,94,0.816,116,4.211,121,2.844,122,0.844,176,1.487,220,1.26,234,2.131,245,1.275,248,3.045,249,2.349,250,1.309,251,2.425,252,1.275,253,2.106,254,4.141,255,1.633,256,1.633,257,1.633,258,3.631,259,2.349,260,5.289,261,5.853,262,2.688,263,2.678,264,1.636,265,1.636,266,2.349,267,2.678,268,2.678,269,4.141,270,2.678,271,2.84,272,1.056,273,2.299,274,2.678,275,1.056,276,2.299,277,2.678,278,1.056,279,4.818,280,2.299,281,2.678,282,2.349,283,2.678,284,2.678,285,2.678,286,0.99,287,1.81,288,1.839,289,2.299,290,2.131,291,1.487,292,1.422,293,1.487,294,2.535,295,1.363,296,2.678,297,1.969,298,1.022,299,2.678,300,2.108,301,1.969,302,2.349,303,3.099,304,2.131,305,1.13,306,3.296,307,1.732,308,1.732,309,2.131,310,1.171,311,2.678,312,1.422,313,2.025,314,2.678,315,1.487,316,2.678,317,1.487,318,2.065,319,2.678,320,5.063,321,4.141,322,2.535,323,2.678,324,2.678,325,3.296,326,2.678,327,1.487,328,2.678,329,1.487,330,2.678,331,2.678,332,2.131,333,2.678,334,2.678,335,2.678,336,2.678,337,2.678,338,2.678,339,2.349,340,2.678,341,2.349,342,2.678,343,2.131,344,2.131,345,2.678,346,2.678,347,2.678]],["title/injectables/CustomerLocalAuthGuard.html",[79,0.61,301,3.139]],["body/injectables/CustomerLocalAuthGuard.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,17,0.876,20,0.138,21,0.307,26,0.009,27,0.009,79,1.048,80,1.885,222,1.584,301,5.389,348,5.371,349,3.4,350,4.503,351,3.564,352,2.338,353,4.503]],["title/injectables/CustomerLocalStrategy.html",[79,0.61,354,2.932]],["body/injectables/CustomerLocalStrategy.html",[3,0.104,4,0.091,5,0.091,7,0.518,8,1.492,11,0.011,12,0.766,14,1.122,16,0.194,17,0.657,20,0.104,21,0.23,22,2.008,23,1.373,24,1.492,26,0.008,27,0.008,79,0.874,80,1.414,94,0.576,122,0.792,123,2.008,125,2.333,222,1.188,245,1.414,251,2.313,264,1.536,265,1.536,303,4.481,304,3.657,307,2.971,309,3.657,318,1.874,322,4.204,352,1.754,354,4.198,355,4.029,356,3.741,357,1.646,358,4.595,359,4.595,360,6.113,361,4.864,362,5.826,363,4.595,364,3.952,365,2.812,366,2.812,367,2.674,368,3.378,369,3.657,370,2.812,371,2.812,372,4.595,373,3.657,374,2.247]],["title/modules/CustomerModule.html",[28,1.314,35,2.932]],["body/modules/CustomerModule.html",[2,1.498,3,0.078,4,0.068,5,0.068,11,0.011,16,0.206,17,0.494,20,0.078,21,0.173,26,0.006,27,0.006,28,1.543,30,1.458,31,2.115,35,5.514,47,2.271,48,1.565,49,1.565,51,2.357,52,2.01,56,1.689,57,0.868,71,3.029,72,3.685,73,2.54,74,4.395,75,3.029,122,0.448,178,2.932,220,1.625,237,1.319,246,3.241,248,4.336,303,4.914,304,2.749,322,2.114,352,1.319,354,4.921,362,2.749,375,3.029,376,3.029,377,3.029,378,6.482,379,4.633,380,3.455,381,2.661,382,3.029,383,2.749,384,3.685,385,2.234,386,3.989,387,1.918,388,2.114,389,1.977,390,3.455,391,2.373,392,3.455,393,3.029,394,3.029,395,2.114,396,2.54,397,2.749,398,2.373,399,2.114,400,2.749,401,2.54,402,3.029,403,3.455,404,3.455,405,3.455,406,3.455,407,3.455,408,3.455,409,3.455,410,3.029,411,3.455,412,3.455,413,3.455,414,3.455,415,3.455,416,3.455,417,5.012,418,3.455,419,3.455,420,3.455,421,2.326,422,3.455,423,3.455,424,3.455,425,3.455,426,3.029,427,3.029]],["title/injectables/CustomerService.html",[79,0.61,303,2.613]],["body/injectables/CustomerService.html",[3,0.045,4,0.04,5,0.04,7,0.226,8,0.803,11,0.011,12,0.82,14,1.543,15,1.177,16,0.166,17,0.287,20,0.045,21,0.1,24,1.478,26,0.004,27,0.004,57,0.504,79,0.47,80,0.617,94,0.758,105,1.166,116,3.706,121,2.87,122,0.894,123,1.826,124,1.166,125,2.412,178,0.908,220,2.696,224,3.325,239,0.718,245,2.346,251,2.628,252,1.012,253,1.787,255,1.296,256,1.296,257,1.296,258,2.882,259,2.882,264,1.588,265,1.588,271,2.581,272,1.296,275,1.296,278,1.296,279,4.34,282,2.882,285,1.296,286,1.972,287,0.876,303,2.012,305,0.846,306,2.616,307,1.296,308,1.296,309,1.595,310,0.876,313,1.607,318,2.871,322,3.265,336,2.125,339,1.758,357,1.177,362,3.325,364,2.125,374,0.98,379,3.125,393,1.758,394,1.758,398,1.377,401,1.474,421,2.656,428,1.758,429,3.287,430,3.287,431,2.004,432,2.46,433,4.178,434,2.004,435,2.616,436,2.004,437,2.004,438,2.004,439,3.287,440,2.004,441,3.287,442,2.004,443,2.004,444,2.004,445,2.004,446,1.377,447,1.377,448,1.758,449,1.02,450,1.02,451,2.416,452,1.595,453,1.965,454,2.004,455,2.004,456,1.913,457,2.616,458,1.595,459,2.004,460,1.166,461,2.127,462,5.732,463,1.824,464,1.824,465,3.09,466,3.287,467,1.824,468,1.595,469,2.616,470,1.595,471,2.616,472,2.004,473,3.287,474,2.004,475,3.287,476,3.325,477,2.257,478,2.87,479,2.257,480,2.004,481,2.004,482,2.004,483,2.004,484,2.012,485,3.287,486,2.004,487,2.004,488,2.004,489,2.004,490,2.004,491,1.595,492,2.004,493,2.616,494,2.004,495,1.595,496,2.616,497,1.745,498,1.474,499,1.758,500,2.004,501,1.166,502,1.064,503,2.004,504,2.616,505,2.616,506,1.595,507,1.595,508,2.004,509,0.846,510,1.113,511,1.474,512,1.595,513,1.595,514,1.595,515,1.595]],["title/classes/Delivery.html",[21,0.214,516,2.76]],["body/classes/Delivery.html",[3,0.111,4,0.098,5,0.098,7,0.556,10,1.687,11,0.011,12,0.89,15,1.335,16,0.163,20,0.145,21,0.247,26,0.008,27,0.008,57,1.239,86,1.137,89,2.091,94,0.89,124,4.136,222,1.655,223,3.946,225,4.436,233,3.187,237,2.443,238,2.736,239,1.766,240,3.386,241,3.386,242,3.386,244,3.187,245,1.517,516,4.139,517,3.923,518,6.234,519,6.234,520,4.93,521,4.93,522,6.401,523,4.93,524,3.624,525,4.323]],["title/controllers/DeliveryController.html",[0,1.276,526,3.139]],["body/controllers/DeliveryController.html",[0,1.007,2,1.007,3,0.076,4,0.067,5,0.067,7,0.38,8,1.202,10,1.741,11,0.011,12,0.919,14,1.791,15,1.335,16,0.162,17,0.482,20,0.076,21,0.169,23,1.007,24,1.791,26,0.006,27,0.006,94,0.852,122,0.881,176,1.87,250,1.647,252,1.515,253,2.364,255,1.941,256,1.941,257,1.941,262,3.087,264,1.709,265,1.709,271,2.966,272,1.329,273,2.732,275,1.329,276,2.732,278,1.329,280,2.732,287,2.151,288,2.314,289,2.732,291,1.87,292,1.789,293,1.87,294,3.012,295,1.715,298,1.286,300,1.715,312,1.789,313,2.406,315,1.87,317,1.87,327,1.87,329,1.87,357,1.207,453,1.585,516,2.178,526,3.618,527,2.954,528,4.315,529,5.607,530,2.954,531,4.627,532,3.369,533,4.315,534,3.369,535,3.369,536,4.921,537,3.369,538,4.921,539,3.369,540,3.369,541,3.369,542,5.607,543,3.369,544,3.369,545,3.759,546,2.954,547,3.369,548,3.369,549,3.369,550,3.369,551,3.369,552,3.369,553,3.369,554,3.369,555,3.369]],["title/modules/DeliveryModule.html",[28,1.314,36,2.932]],["body/modules/DeliveryModule.html",[2,1.741,3,0.097,4,0.085,5,0.085,11,0.011,16,0.206,17,0.612,20,0.097,21,0.214,26,0.007,27,0.007,28,1.793,30,1.805,31,2.458,36,5.395,47,2.64,48,1.939,49,1.939,51,2.74,52,2.489,56,2.092,57,1.075,122,0.921,220,2.012,237,2.715,246,3.766,381,3.093,389,2.298,395,4.353,396,3.145,516,2.766,524,4.283,526,4.87,545,5.391,546,3.752,556,3.752,557,3.752,558,3.752,559,4.278,560,2.489,561,3.145,562,2.375,563,4.001,564,3.752,565,2.092,566,3.566,567,2.766,568,4.278,569,3.752,570,4.278,571,3.145,572,3.404]],["title/injectables/DeliveryService.html",[79,0.61,545,2.76]],["body/injectables/DeliveryService.html",[3,0.049,4,0.043,5,0.043,7,0.245,8,0.855,11,0.011,12,0.816,14,1.528,15,1.124,16,0.159,17,0.31,20,0.049,21,0.109,23,1.513,24,1.452,26,0.004,27,0.004,57,0.545,79,0.501,80,0.667,94,0.696,122,0.77,149,1.103,167,2.406,178,0.982,220,1.648,239,0.776,245,2.52,251,2.608,252,1.078,253,1.872,255,1.382,256,1.382,257,1.382,264,1.494,265,1.494,271,2.468,272,1.382,275,1.382,278,1.382,286,2.055,287,0.947,313,1.06,318,2.881,357,0.776,374,2.155,396,1.594,421,1.997,432,3.725,435,3.508,449,1.103,450,1.103,452,1.725,453,2.381,456,2.565,460,2.565,461,1.103,463,3.085,464,1.945,465,1.713,467,1.945,497,1.151,501,1.261,502,1.151,509,0.915,510,1.203,511,1.594,516,3.593,518,6.195,519,4.874,528,3.072,529,4.44,530,3.072,531,3.508,533,1.901,542,4.44,545,2.265,561,1.594,562,2.81,564,1.901,565,1.713,567,1.402,569,1.901,572,3.508,573,1.901,574,2.168,575,3.866,576,3.241,577,2.168,578,3.503,579,2.168,580,2.168,581,3.503,582,2.168,583,2.168,584,2.168,585,2.168,586,2.168,587,2.168,588,1.901,589,1.594,590,5.946,591,3.503,592,5.946,593,4.409,594,5.946,595,4.409,596,5.946,597,4.409,598,5.063,599,4.409,600,2.168,601,3.503,602,1.203,603,2.168,604,1.901,605,1.901,606,2.168,607,2.168,608,2.168,609,2.168,610,1.901,611,1.901,612,2.168,613,2.168,614,2.168,615,2.168]],["title/classes/Driver.html",[21,0.214,562,2.37]],["body/classes/Driver.html",[3,0.096,4,0.084,5,0.084,7,0.48,10,1.861,11,0.011,12,0.982,15,1.41,16,0.147,20,0.131,21,0.213,26,0.007,27,0.007,57,1.069,86,0.981,89,1.896,94,0.982,119,4.042,120,3.843,122,0.856,123,2.887,125,2.521,136,5.791,137,5.791,222,1.5,223,3.666,225,4.706,237,2.215,238,2.361,239,1.524,240,2.922,241,2.922,242,2.922,245,1.309,562,3.221,563,2.922,616,3.385,617,4.254,618,4.254,619,4.254,620,4.254,621,4.254,622,4.254,623,4.254,624,3.73]],["title/controllers/DriverController.html",[0,1.276,625,3.139]],["body/controllers/DriverController.html",[0,0.933,2,0.933,3,0.071,4,0.062,5,0.062,7,0.352,8,1.136,10,1.64,11,0.011,12,0.866,14,1.687,15,1.256,16,0.187,17,0.446,20,0.071,21,0.156,22,1.364,23,0.933,24,1.748,26,0.006,27,0.006,94,0.772,122,0.854,124,1.816,133,4.468,176,1.733,250,1.526,251,1.873,252,1.432,253,2.278,255,1.835,256,1.835,257,1.835,262,1.657,264,1.656,265,1.656,266,2.737,271,2.824,272,1.231,273,2.582,275,1.231,276,2.582,278,1.231,280,2.582,285,3.008,286,1.154,287,2.033,288,2.144,289,2.582,291,1.733,292,1.657,293,1.733,294,2.847,295,1.589,298,1.192,300,1.589,305,1.317,308,2.018,310,1.364,312,1.657,313,2.274,315,1.733,317,1.733,318,1.897,327,1.733,329,1.733,332,2.484,336,2.018,391,2.144,562,1.733,625,3.42,626,2.737,627,3.702,628,2.737,629,2.144,630,3.122,631,3.122,632,3.122,633,3.122,634,5.053,635,3.122,636,2.484,637,3.122,638,3.122,639,2.144,640,4.425,641,3.404,642,2.484,643,1.816,644,2.018,645,3.122,646,3.122,647,3.122,648,2.737,649,3.122,650,3.122,651,3.122,652,3.122,653,2.737,654,3.122,655,2.737,656,1.816,657,2.737,658,2.737,659,2.737,660,2.737,661,2.737]],["title/modules/DriverModule.html",[28,1.314,37,2.932]],["body/modules/DriverModule.html",[2,1.755,3,0.098,4,0.086,5,0.086,11,0.011,16,0.209,17,0.619,20,0.098,21,0.217,26,0.007,27,0.007,28,1.807,30,1.826,31,2.478,37,5.581,47,2.661,48,1.961,49,1.961,51,2.762,52,2.518,56,2.116,57,1.087,122,0.561,237,1.652,352,1.652,381,3.117,383,3.444,385,2.798,386,4.672,387,2.402,388,2.649,389,2.316,391,2.973,395,2.649,397,3.444,398,2.973,399,2.649,400,3.444,401,3.182,560,2.518,562,2.402,563,4.033,572,3.444,625,4.899,641,5.113,642,3.444,644,4.98,662,3.795,663,3.795,664,3.795,665,4.328,666,4.328,667,3.795,668,4.328]],["title/injectables/DriverService.html",[79,0.61,641,2.613]],["body/injectables/DriverService.html",[3,0.052,4,0.045,5,0.045,7,0.257,8,0.891,11,0.011,12,0.831,14,1.56,15,1.144,16,0.174,17,0.326,20,0.052,21,0.114,23,0.682,24,1.62,26,0.005,27,0.005,57,0.573,79,0.522,80,0.702,94,0.762,105,1.327,122,0.828,123,1.994,125,1.741,133,3.933,178,1.033,220,1.073,239,0.817,245,2.313,251,2.634,252,1.123,253,1.927,255,1.439,256,1.439,257,1.439,264,1.605,265,1.605,271,2.519,272,1.439,275,1.439,278,1.439,285,1.474,286,2.108,287,0.997,305,0.962,308,1.474,310,0.997,313,1.784,318,2.791,322,3.191,336,2.359,343,1.815,344,1.815,357,1.307,364,2.359,374,1.115,384,4.696,385,1.474,421,2.617,432,2.654,446,1.566,447,1.566,449,1.161,450,1.161,451,2.683,453,1.716,456,2.123,457,2.904,458,1.815,460,1.327,461,2.322,463,2.026,464,2.026,465,2.974,467,1.266,469,2.904,470,1.815,471,2.904,476,3.63,477,1.566,478,2.506,479,1.566,484,1.396,491,1.815,493,2.904,495,1.815,496,2.904,497,2.422,498,1.677,502,1.211,504,2.904,505,2.904,506,1.815,507,1.815,509,0.962,510,1.266,511,1.677,512,1.815,513,1.815,514,1.815,515,1.815,562,3.165,575,3.2,588,2,602,2.026,628,3.2,634,4.558,639,1.566,640,3.63,641,2.234,667,2,669,2,670,3.2,671,3.649,672,2.281,673,2.281,674,2.281,675,2.281,676,2.281,677,3.2,678,2.281,679,2.281,680,2.281,681,3.649,682,2.281,683,2.281,684,4.562,685,2.281,686,2.281,687,2.281,688,2.281,689,2.281,690,2.281,691,2.281,692,2,693,2,694,2,695,2.281]],["title/classes/Expense.html",[21,0.214,696,2.484]],["body/classes/Expense.html",[3,0.115,4,0.101,5,0.101,7,0.573,10,1.711,11,0.011,12,0.903,15,0.849,16,0.166,20,0.147,21,0.254,26,0.008,27,0.008,57,1.277,86,1.172,89,2.132,94,0.903,97,2.956,122,0.846,148,5.724,149,3.874,155,3.49,156,4.455,222,1.688,223,4.003,225,4.37,233,4.22,237,2.492,238,2.82,239,1.82,245,1.564,421,2.004,696,3.798,697,4.043,698,5.081,699,3.735,700,5.081,701,5.081,702,5.081,703,3.49,704,4.455]],["title/controllers/ExpenseController.html",[0,1.276,705,3.139]],["body/controllers/ExpenseController.html",[0,1.085,2,1.085,3,0.082,4,0.072,5,0.072,7,0.41,8,1.269,10,1.662,11,0.011,12,0.878,14,1.711,15,1.305,16,0.185,17,0.519,20,0.082,21,0.182,22,1.587,23,1.085,24,1.711,26,0.007,27,0.007,79,0.519,94,0.829,122,0.858,145,4.712,164,2.223,165,2.89,250,1.776,252,1.599,253,2.243,255,2.049,256,2.049,257,2.049,262,1.928,264,1.664,265,1.664,271,2.875,272,1.432,273,2.884,275,1.432,276,2.884,278,1.432,280,2.884,287,1.587,289,2.884,291,2.016,292,1.928,293,2.016,295,1.849,298,1.386,300,1.849,305,1.532,310,1.587,312,1.928,313,2.54,315,2.016,317,2.016,327,2.016,329,2.016,629,2.494,643,2.113,648,3.184,696,2.113,705,3.82,706,3.184,707,3.184,708,3.632,709,3.632,710,3.632,711,3.632,712,5.271,713,3.632,714,4.135,715,2.348,716,3.184,717,2.67,718,3.632,719,3.632,720,3.632,721,3.632,722,3.632,723,3.632,724,3.632,725,3.632]],["title/modules/ExpenseModule.html",[28,1.314,38,2.932]],["body/modules/ExpenseModule.html",[2,1.473,3,0.111,4,0.098,5,0.098,11,0.011,16,0.203,17,0.705,20,0.111,21,0.247,26,0.008,27,0.008,28,1.97,30,2.08,31,2.701,38,5.588,47,2.901,48,2.234,49,2.234,51,2.319,56,2.41,57,1.239,122,0.639,237,1.882,381,2.617,389,2.525,560,2.868,696,2.868,703,4.397,705,4.706,715,5.438,716,4.323,726,4.323,727,4.323,728,4.323,729,4.93,730,4.93,731,4.323,732,3.624,733,4.93,734,4.93,735,4.93,736,4.93]],["title/injectables/ExpenseService.html",[79,0.61,715,2.76]],["body/injectables/ExpenseService.html",[3,0.071,4,0.062,5,0.062,7,0.355,8,1.143,11,0.011,12,0.868,14,1.615,15,1.259,16,0.176,17,0.45,20,0.071,21,0.158,23,0.941,24,1.511,26,0.006,27,0.006,57,0.791,79,0.669,80,0.969,94,0.829,122,0.857,145,4.276,178,1.426,239,1.128,245,1.905,251,2.728,252,1.441,253,2.288,255,1.846,256,1.846,257,1.846,264,1.662,265,1.662,271,2.909,272,1.846,275,1.846,278,1.846,286,2.288,287,1.376,305,1.328,310,1.376,313,1.539,318,2.927,357,1.677,421,2.204,432,2.845,449,1.602,450,1.602,453,1.481,456,1.832,460,1.832,461,1.602,463,3.102,464,3.102,465,2.289,467,2.598,497,1.671,501,1.832,502,1.671,510,2.598,602,1.747,696,4.034,707,4.105,712,5.066,714,3.725,715,3.027,731,2.76,737,2.76,738,3.148,739,3.148,740,2.76,741,3.148,742,3.148,743,3.148,744,3.148,745,3.148,746,2.76,747,3.148,748,4.681,749,2.76,750,4.681,751,4.681,752,3.148,753,3.148,754,3.148,755,3.148]],["title/controllers/IncomeStatementController.html",[0,1.276,756,3.139]],["body/controllers/IncomeStatementController.html",[0,1.431,2,1.431,3,0.108,4,0.095,5,0.095,7,0.54,8,1.533,10,1.136,11,0.011,12,0.6,14,1.169,15,1.291,16,0.178,17,0.684,20,0.108,21,0.24,22,2.092,23,1.431,24,1.169,26,0.008,27,0.008,66,4.997,67,4.313,94,0.6,122,0.62,250,2.34,251,2.36,253,2.321,264,1.203,265,1.203,286,1.77,294,2.93,295,2.437,298,1.827,300,2.437,312,2.542,421,1.888,449,2.437,461,2.437,465,2.34,497,2.542,602,2.657,643,2.785,756,4.617,757,4.617,758,4.198,759,4.787,760,4.198,761,5.47,762,4.787,763,5.153,764,3.095,765,4.198,766,4.787,767,4.787,768,4.787,769,4.198,770,4.787,771,4.198,772,4.787,773,4.198]],["title/modules/IncomeStatementModule.html",[28,1.314,39,2.932]],["body/modules/IncomeStatementModule.html",[2,1.309,3,0.099,4,0.087,5,0.087,11,0.011,16,0.207,17,0.626,20,0.099,21,0.219,26,0.008,27,0.008,28,1.821,30,1.848,31,2.497,39,5.427,47,2.682,48,1.984,49,1.984,51,2.06,52,2.548,56,2.141,57,1.1,66,4.709,67,3.007,122,0.767,237,2.259,381,2.325,389,2.334,395,2.68,509,1.848,560,2.548,565,2.141,566,3.622,567,2.831,571,3.219,696,2.548,703,3.007,756,4.351,757,3.219,764,5.323,765,3.84,774,3.84,775,3.84,776,3.84,777,4.379,778,4.379,779,2.229,780,3.622,781,3.007,782,3.84,783,2.68,784,2.68,785,3.84,786,3.84,787,4.379,788,4.379,789,3.485,790,4.379,791,4.379,792,4.379]],["title/injectables/IncomeStatementService.html",[79,0.61,764,2.76]],["body/injectables/IncomeStatementService.html",[3,0.067,4,0.058,5,0.058,7,0.333,8,1.088,11,0.011,12,0.558,14,0.72,15,1.001,16,0.178,17,0.422,20,0.067,21,0.148,23,1.606,24,1.312,26,0.006,27,0.006,57,0.741,67,3.691,79,0.637,80,0.908,85,2.528,90,1.906,94,0.558,122,0.578,149,2.269,167,2.025,202,2.168,220,2.096,239,1.056,244,1.906,245,2.419,251,1.809,253,1.648,264,1.12,265,1.12,286,1.09,318,2.623,357,1.596,374,1.442,432,3.841,450,1.501,453,2.528,565,3.144,567,1.906,576,3.951,589,2.168,696,1.716,740,4.712,746,2.586,749,2.586,757,3.951,760,2.586,761,3.277,763,2.168,764,2.882,779,3.049,781,2.025,782,2.586,793,2.586,794,2.586,795,2.949,796,3.547,797,2.949,798,2.346,799,2.586,800,3.908,801,2.949,802,2.346,803,2.949,804,2.586,805,3.547,806,2.346,807,5.252,808,5.252,809,2.586,810,2.586,811,2.586,812,2.949,813,2.346,814,2.346,815,2.586,816,4.457,817,2.949,818,2.949,819,2.949,820,2.586,821,2.586,822,2.586,823,3.908,824,3.547,825,2.586,826,2.949,827,4.457,828,5.374,829,5.932,830,2.949,831,2.949,832,2.949,833,2.949,834,2.949,835,5.374,836,2.949,837,2.949,838,5.374,839,2.949,840,2.949,841,2.949,842,2.949,843,2.949]],["title/injectables/JwtAuthGuard.html",[79,0.61,298,1.63]],["body/injectables/JwtAuthGuard.html",[3,0.163,4,0.101,5,0.101,11,0.011,16,0.166,17,0.729,20,0.115,21,0.255,24,1.597,26,0.008,27,0.008,79,0.935,80,1.569,222,1.318,245,1.569,260,3.501,298,2.497,322,4.421,349,2.83,350,4.81,351,2.967,352,1.946,421,2.011,465,3.198,498,5.311,844,4.47,845,6.542,846,3.748,847,5.098,848,5.098,849,5.098,850,5.098,851,5.098,852,5.098,853,5.098,854,5.098]],["title/injectables/JwtAuthGuard-1.html",[79,0.51,105,2.077,298,1.363]],["body/injectables/JwtAuthGuard-1.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,17,0.879,20,0.139,21,0.308,26,0.009,27,0.009,79,1.051,80,1.893,222,1.59,298,2.805,349,3.414,351,3.579,352,2.348,846,4.522,855,5.393]],["title/injectables/JwtAuthGuard-2.html",[79,0.51,298,1.363,856,2.841]],["body/injectables/JwtAuthGuard-2.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,17,0.879,20,0.139,21,0.308,26,0.009,27,0.009,79,1.051,80,1.893,222,1.59,298,2.805,349,3.414,351,3.579,352,2.348,846,4.522,857,5.393]],["title/injectables/JwtAuthGuard-3.html",[79,0.51,298,1.363,858,3.13]],["body/injectables/JwtAuthGuard-3.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,17,0.879,20,0.139,21,0.308,26,0.009,27,0.009,79,1.051,80,1.893,222,1.59,298,2.805,349,3.414,351,3.579,352,2.348,846,4.522,859,5.393]],["title/classes/JwtStrategy.html",[21,0.214,389,1.684]],["body/classes/JwtStrategy.html",[3,0.116,4,0.101,5,0.101,7,0.577,8,1.601,11,0.011,12,0.821,14,1.249,16,0.184,20,0.116,21,0.256,24,1.249,26,0.008,27,0.008,86,1.18,94,0.641,122,0.663,125,1.953,222,1.323,251,2.436,264,1.285,265,1.285,286,1.891,352,1.953,356,4.013,357,2.592,365,3.131,366,3.131,367,2.977,370,3.131,371,3.131,387,2.84,388,3.131,389,2.586,399,3.131,484,3.131,860,4.486,861,5.116,862,4.82,863,5.116,864,3.761,865,3.514,866,3.761,867,3.761,868,3.761,869,3.761,870,3.761,871,3.761,872,3.761,873,3.761]],["title/classes/JwtStrategy-1.html",[21,0.179,105,2.077,389,1.408]],["body/classes/JwtStrategy-1.html",[3,0.116,4,0.101,5,0.101,7,0.577,8,1.601,11,0.011,12,0.821,14,1.249,16,0.184,20,0.116,21,0.256,24,1.249,26,0.008,27,0.008,86,1.18,94,0.641,122,0.663,125,1.953,222,1.323,251,2.436,264,1.285,265,1.285,286,1.891,352,1.953,356,4.013,357,2.592,365,3.131,366,3.131,367,2.977,370,3.131,371,3.131,387,2.84,388,3.131,389,2.586,399,3.131,484,3.131,862,4.82,864,3.761,865,3.514,866,3.761,867,3.761,868,3.761,869,3.761,870,3.761,871,3.761,872,3.761,873,3.761,874,4.486,875,5.116,876,5.116]],["title/classes/JwtStrategy-2.html",[21,0.179,389,1.408,856,2.841]],["body/classes/JwtStrategy-2.html",[3,0.116,4,0.101,5,0.101,7,0.577,8,1.601,11,0.011,12,0.821,14,1.249,16,0.184,20,0.116,21,0.256,24,1.249,26,0.008,27,0.008,86,1.18,94,0.641,122,0.663,125,1.953,222,1.323,251,2.436,264,1.285,265,1.285,286,1.891,352,1.953,356,4.013,357,2.592,365,3.131,366,3.131,367,2.977,370,3.131,371,3.131,387,2.84,388,3.131,389,2.586,399,3.131,484,3.131,862,4.82,864,3.761,865,3.514,866,3.761,867,3.761,868,3.761,869,3.761,870,3.761,871,3.761,872,3.761,873,3.761,877,4.486,878,5.116,879,5.116]],["title/classes/JwtStrategy-3.html",[21,0.179,389,1.408,858,3.13]],["body/classes/JwtStrategy-3.html",[3,0.116,4,0.101,5,0.101,7,0.577,8,1.601,11,0.011,12,0.821,14,1.249,16,0.184,20,0.116,21,0.256,24,1.249,26,0.008,27,0.008,86,1.18,94,0.641,122,0.663,125,1.953,222,1.323,251,2.436,264,1.285,265,1.285,286,1.891,352,1.953,356,4.013,357,2.592,365,3.131,366,3.131,367,2.977,370,3.131,371,3.131,387,2.84,388,3.131,389,2.586,399,3.131,484,3.131,862,4.82,864,3.761,865,3.514,866,3.761,867,3.761,868,3.761,869,3.761,870,3.761,871,3.761,872,3.761,873,3.761,880,4.486,881,5.116,882,5.116]],["title/injectables/LocalAuthGuard.html",[79,0.61,883,2.484]],["body/injectables/LocalAuthGuard.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,17,0.879,20,0.139,21,0.308,26,0.009,27,0.009,79,1.051,80,1.893,222,1.59,349,3.414,351,3.579,352,2.348,353,4.522,883,4.276,884,5.393]],["title/injectables/LocalAuthGuard-1.html",[79,0.51,105,2.077,883,2.077]],["body/injectables/LocalAuthGuard-1.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,17,0.879,20,0.139,21,0.308,26,0.009,27,0.009,79,1.051,80,1.893,222,1.59,349,3.414,351,3.579,352,2.348,353,4.522,883,4.276,885,5.393]],["title/injectables/LocalAuthGuard-2.html",[79,0.51,856,2.841,883,2.077]],["body/injectables/LocalAuthGuard-2.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,17,0.879,20,0.139,21,0.308,26,0.009,27,0.009,79,1.051,80,1.893,222,1.59,349,3.414,351,3.579,352,2.348,353,4.522,883,4.276,886,5.393]],["title/injectables/LocalStrategy.html",[79,0.61,644,2.76]],["body/injectables/LocalStrategy.html",[3,0.106,4,0.093,5,0.093,7,0.53,8,1.514,11,0.011,12,0.777,14,1.147,16,0.188,17,0.671,20,0.106,21,0.235,22,2.053,23,1.403,24,1.514,26,0.008,27,0.008,79,0.887,80,1.445,94,0.588,122,0.804,123,2.053,125,2.65,222,1.214,245,1.445,251,2.338,264,1.558,265,1.558,318,1.915,350,3.453,352,1.793,356,4.25,357,1.682,361,3.737,364,4.01,365,2.874,366,2.874,367,2.733,368,3.453,370,2.874,371,2.874,373,3.737,374,2.296,562,4.099,641,4.827,642,3.737,644,4.01,887,4.118,888,4.696,889,4.696,890,4.696,891,4.696]],["title/classes/LoginCustomerDto.html",[21,0.214,307,2.76]],["body/classes/LoginCustomerDto.html",[3,0.126,4,0.111,5,0.111,7,0.629,10,1.642,11,0.011,12,0.867,15,1.315,16,0.142,20,0.126,21,0.346,26,0.009,27,0.009,86,1.286,89,2.261,94,0.867,95,3.808,104,2.526,123,3.29,125,2.874,307,4.475,369,5.991,892,4.889,893,5.575,894,5.575]],["title/classes/LoginDriveDto.html",[21,0.214,639,2.932]],["body/classes/LoginDriveDto.html",[3,0.126,4,0.111,5,0.111,7,0.629,10,1.642,11,0.011,12,0.867,15,1.315,16,0.142,20,0.126,21,0.346,26,0.009,27,0.009,86,1.286,89,2.261,94,0.867,95,3.808,104,2.526,123,3.29,125,2.874,135,4.099,139,4.889,141,4.889,639,4.754,895,6.601]],["title/classes/LoginManagerDto.html",[21,0.214,896,2.932]],["body/classes/LoginManagerDto.html",[3,0.126,4,0.111,5,0.111,7,0.629,10,1.642,11,0.011,12,0.867,15,1.315,16,0.142,20,0.126,21,0.346,26,0.009,27,0.009,86,1.286,89,2.261,94,0.867,95,3.808,104,2.526,123,3.29,125,2.874,159,4.099,896,4.754,897,6.601,898,5.575,899,5.575]],["title/injectables/MailService.html",[79,0.61,379,2.76]],["body/injectables/MailService.html",[3,0.108,4,0.095,5,0.095,7,0.54,8,1.533,11,0.011,12,0.787,14,1.169,16,0.159,17,0.684,20,0.108,21,0.24,22,2.092,23,1.431,26,0.008,27,0.008,72,3.519,73,3.519,79,0.898,80,1.473,83,4.198,94,0.6,121,5.445,122,0.964,224,5.577,264,1.578,265,1.578,325,4.997,341,4.198,357,1.715,379,4.06,382,6.952,468,3.809,499,4.198,900,4.198,901,7.009,902,6.28,903,4.787,904,4.787,905,6.28,906,4.787,907,6.28,908,4.787,909,4.787,910,4.787,911,6.28,912,4.787,913,4.787,914,4.787,915,4.787,916,4.787,917,4.787,918,4.198]],["title/classes/Manager.html",[21,0.214,656,2.484]],["body/classes/Manager.html",[3,0.104,4,0.091,5,0.091,7,0.518,10,1.809,11,0.011,12,0.955,15,1.388,16,0.155,20,0.138,21,0.23,26,0.008,27,0.008,57,1.155,86,1.06,89,1.997,94,0.955,119,4.204,120,3.997,122,0.89,123,3.002,125,2.622,222,1.58,223,3.812,225,4.649,237,2.333,238,2.55,239,1.646,240,3.156,241,3.156,242,3.156,245,1.414,656,3.557,919,3.657,920,4.595,921,4.595,922,4.595,923,4.595,924,4.595,925,3.378,926,4.029]],["title/controllers/ManagerController.html",[0,1.276,927,3.139]],["body/controllers/ManagerController.html",[0,0.876,2,0.876,3,0.066,4,0.058,5,0.058,7,0.331,8,1.083,10,1.601,11,0.011,12,0.845,14,1.648,15,1.235,16,0.188,17,0.419,20,0.066,21,0.147,22,1.281,23,0.876,24,1.648,26,0.006,27,0.006,94,0.804,122,0.831,124,1.706,157,4.364,176,1.627,178,2.426,245,1.366,250,1.433,251,1.803,252,1.366,253,2.207,255,1.75,256,1.75,257,1.75,260,3.048,261,5.578,262,2.843,264,1.612,265,1.612,271,2.765,272,1.156,273,2.463,275,1.156,276,2.463,278,1.156,280,2.463,285,2.869,286,1.084,287,1.939,288,2.013,289,2.463,291,1.627,292,1.556,293,1.627,294,2.716,295,1.492,297,2.155,300,1.492,302,2.57,305,1.237,308,1.895,310,1.281,313,2.169,315,1.627,317,1.627,318,1.81,327,1.627,329,1.627,332,2.333,336,2.869,374,2.169,391,2.013,410,2.57,627,3.531,636,2.333,653,2.57,655,3.891,656,2.582,657,2.57,658,2.57,659,2.57,660,2.57,661,2.57,883,1.706,896,2.013,927,3.262,928,2.57,929,2.57,930,2.931,931,2.931,932,2.931,933,2.931,934,4.958,935,2.931,936,2.931,937,2.931,938,4.261,939,3.277,940,2.333,941,1.895,942,2.931,943,2.931,944,2.931,945,2.931,946,2.931,947,2.931,948,2.931,949,2.931,950,2.931,951,4.437,952,2.931,953,2.931]],["title/injectables/ManagerLocalStrategy.html",[79,0.61,941,2.76]],["body/injectables/ManagerLocalStrategy.html",[3,0.106,4,0.093,5,0.093,7,0.53,8,1.514,11,0.011,12,0.777,14,1.147,16,0.188,17,0.671,20,0.106,21,0.235,22,2.053,23,1.403,24,1.514,26,0.008,27,0.008,79,0.887,80,1.445,94,0.588,122,0.804,123,2.053,125,2.65,222,1.214,245,1.445,251,2.338,264,1.558,265,1.558,318,1.915,350,3.453,352,1.793,356,4.25,357,1.682,361,3.737,364,4.01,365,2.874,366,2.874,367,2.733,368,3.453,370,2.874,371,2.874,373,3.737,374,2.296,656,4.297,939,4.827,940,3.737,941,4.01,954,4.118,955,4.696,956,4.696,957,4.696,958,4.696]],["title/modules/ManagerModule.html",[28,1.314,40,2.932]],["body/modules/ManagerModule.html",[2,1.721,3,0.095,4,0.083,5,0.083,11,0.011,16,0.205,17,0.601,20,0.095,21,0.211,26,0.007,27,0.007,28,1.772,30,1.775,31,2.43,40,5.612,47,2.609,48,1.906,49,1.906,51,2.708,52,2.447,56,2.056,57,1.057,122,0.545,237,1.605,352,1.605,381,3.057,383,3.347,384,4.233,385,2.719,386,4.582,387,2.334,388,2.574,391,2.889,395,2.574,397,3.347,398,2.889,399,2.574,400,3.347,401,3.092,402,3.688,426,3.688,427,3.688,656,2.447,925,4.233,927,4.827,939,5.09,940,3.347,941,4.938,959,3.688,960,3.688,961,3.688,962,6.857,963,4.206,964,3.688,965,4.206,966,4.206]],["title/injectables/ManagerService.html",[79,0.61,939,2.613]],["body/injectables/ManagerService.html",[3,0.051,4,0.045,5,0.045,7,0.256,8,0.887,11,0.011,12,0.829,14,1.556,15,1.141,16,0.173,17,0.324,20,0.051,21,0.113,23,0.677,24,1.556,26,0.005,27,0.005,57,0.57,79,0.519,80,0.698,94,0.76,105,1.319,122,0.826,123,1.986,125,1.734,157,3.922,178,1.027,220,1.066,239,0.812,245,2.31,251,2.631,252,1.118,253,1.921,255,1.432,256,1.432,257,1.432,264,1.601,265,1.601,271,2.612,272,1.432,275,1.432,278,1.432,285,1.466,286,2.102,287,0.991,305,0.957,308,1.466,310,0.991,313,1.775,318,2.785,322,3.18,336,2.348,343,1.804,344,1.804,357,1.301,364,2.348,374,1.108,384,1.666,385,1.466,421,2.694,432,2.645,446,1.557,447,1.557,448,1.988,449,1.154,450,1.154,451,2.67,453,1.708,456,2.113,457,2.89,458,1.804,460,1.319,461,2.313,463,2.016,464,2.522,465,3.115,467,2.016,469,2.89,470,1.804,471,2.89,476,3.615,477,1.557,478,3.12,479,1.557,484,1.387,491,1.804,493,2.89,495,1.804,496,2.89,497,2.412,498,1.666,501,1.319,502,1.203,504,2.89,505,2.89,506,1.804,507,1.804,509,0.957,510,1.258,511,1.666,512,1.804,513,1.804,514,1.804,515,1.804,602,1.258,627,2.89,636,2.89,656,3.308,670,3.184,677,3.184,692,1.988,693,1.988,694,1.988,896,1.557,929,3.184,934,4.548,938,3.615,939,2.223,964,1.988,967,1.988,968,2.267,969,4.543,970,2.267,971,3.632,972,2.267,973,2.267,974,2.267,975,2.267,976,2.267,977,2.267,978,2.267,979,2.267,980,2.267,981,2.267,982,4.543,983,3.632,984,2.267,985,2.267,986,2.267,987,2.267,988,2.267,989,2.267]],["title/classes/Order.html",[21,0.214,565,2.087]],["body/classes/Order.html",[3,0.104,4,0.091,5,0.091,7,0.517,10,1.735,11,0.011,12,0.916,15,1.222,16,0.174,20,0.138,21,0.229,26,0.008,27,0.008,57,1.151,85,3.683,86,1.056,89,1.993,94,0.916,124,3.99,149,3.876,167,4.71,176,2.543,222,1.577,223,3.807,225,4.347,233,4.434,234,4.854,237,2.328,238,2.543,239,1.641,240,3.146,241,3.146,242,3.146,244,2.962,245,1.41,421,1.807,565,2.982,566,2.804,699,3.368,990,3.645,991,4.581,992,4.581,993,4.581,994,4.581,995,4.581,996,4.581,997,4.017]],["title/controllers/OrderController.html",[0,1.276,998,3.139]],["body/controllers/OrderController.html",[0,0.951,2,0.951,3,0.072,4,0.063,5,0.063,7,0.359,8,1.152,10,1.709,11,0.011,12,0.902,14,1.759,15,1.356,16,0.177,17,0.455,20,0.072,21,0.159,22,1.391,23,0.951,24,1.759,26,0.006,27,0.006,94,0.872,122,0.902,164,4.259,176,1.766,250,1.556,252,1.452,253,2.079,255,1.861,256,1.861,257,1.861,260,2.185,262,2.986,264,1.749,265,1.749,271,3.033,272,1.255,273,2.619,275,1.255,276,2.619,278,1.255,280,2.619,287,2.062,288,2.185,289,2.619,290,3.755,291,1.766,292,1.689,293,1.766,294,2.888,295,1.62,298,1.214,300,1.62,305,1.343,310,1.391,312,1.689,313,2.307,315,1.766,317,1.766,327,1.766,329,1.766,565,1.556,643,1.851,717,3.469,813,3.755,998,3.469,999,2.79,1000,4.138,1001,2.79,1002,3.182,1003,2.79,1004,4.719,1005,3.182,1006,3.182,1007,3.182,1008,2.79,1009,4.719,1010,3.182,1011,3.182,1012,5.081,1013,3.182,1014,3.636,1015,2.79,1016,3.182,1017,3.182,1018,3.182,1019,3.182,1020,3.182,1021,3.182,1022,3.182,1023,3.182,1024,3.182,1025,3.182,1026,3.182]],["title/modules/OrderModule.html",[28,1.314,41,2.932]],["body/modules/OrderModule.html",[2,1.779,3,0.1,4,0.088,5,0.088,11,0.011,16,0.207,17,0.632,20,0.1,21,0.221,26,0.008,27,0.008,28,1.832,30,1.864,31,2.512,41,5.323,47,2.698,48,2.002,49,2.002,51,2.8,52,2.571,56,2.16,57,1.11,122,0.934,220,2.078,237,2.751,246,3.849,389,2.348,395,4.411,396,3.248,509,1.864,560,2.571,561,3.248,565,2.16,566,3.644,571,3.248,779,2.249,780,3.644,781,3.034,783,3.644,784,2.704,789,3.516,998,4.951,1014,5.011,1015,3.874,1027,3.874,1028,3.874,1029,4.418,1030,3.874,1031,4.418,1032,2.856]],["title/injectables/OrderService.html",[79,0.61,1014,2.76]],["body/injectables/OrderService.html",[3,0.046,4,0.04,5,0.04,7,0.228,8,0.807,11,0.011,12,0.794,14,1.482,15,1.235,16,0.167,17,0.288,20,0.046,21,0.101,23,1.45,24,1.404,26,0.004,27,0.004,57,0.507,79,0.473,80,0.621,85,0.949,90,2.137,94,0.761,105,1.174,122,0.821,164,3.277,167,3.677,178,0.914,220,2.283,239,0.723,245,2.388,251,2.632,252,1.017,253,1.794,255,1.304,256,1.304,257,1.304,264,1.525,265,1.525,271,2.832,272,1.304,275,1.304,278,1.304,286,2.126,287,0.882,305,0.852,310,0.882,313,0.987,318,2.877,357,1.184,374,2.052,421,2.112,432,3.655,435,3.34,449,1.027,450,1.027,452,1.606,453,2.283,456,1.174,460,1.174,461,1.682,463,3.192,464,2.972,465,2.373,467,2.694,497,1.755,501,1.174,502,1.071,509,2.259,510,1.12,561,1.484,565,3.3,576,2.43,589,1.484,602,1.835,604,2.898,605,2.898,610,1.77,611,1.77,717,2.43,779,1.027,781,1.386,784,1.235,796,3.34,802,1.606,805,3.862,806,2.63,813,4.576,814,1.606,821,1.77,1000,2.898,1001,2.898,1003,2.898,1008,2.898,1012,4.352,1014,2.137,1030,1.77,1033,1.77,1034,1.77,1035,3.086,1036,2.018,1037,2.018,1038,2.018,1039,2.018,1040,2.018,1041,2.018,1042,2.018,1043,2.018,1044,1.484,1045,3.305,1046,2.018,1047,2.018,1048,2.018,1049,2.018,1050,2.018,1051,2.018,1052,2.018,1053,2.898,1054,2.018,1055,3.305,1056,2.018,1057,2.018,1058,3.305,1059,2.018,1060,2.018,1061,3.305,1062,4.853,1063,2.018,1064,2.018,1065,2.018,1066,1.77,1067,2.018,1068,2.018,1069,2.018,1070,2.018,1071,2.018,1072,2.018,1073,1.77,1074,2.018,1075,2.018,1076,2.018,1077,2.018,1078,2.018,1079,2.018,1080,2.018]],["title/classes/PaginationDto.html",[21,0.214,287,1.866]],["body/classes/PaginationDto.html",[3,0.148,4,0.129,5,0.129,11,0.01,20,0.148,21,0.327,26,0.01,27,0.01,86,1.505,287,3.327,1081,5.724]],["title/classes/Product.html",[21,0.214,509,1.802]],["body/classes/Product.html",[3,0.104,4,0.091,5,0.091,7,0.517,10,1.858,11,0.011,12,0.981,15,1.272,16,0.155,20,0.138,21,0.229,26,0.008,27,0.008,57,1.151,86,1.056,89,1.993,93,4.485,94,0.981,97,2.665,122,0.79,155,3.146,182,4.485,183,4.485,184,3.549,185,3.944,194,3.645,195,4.017,196,4.017,197,4.017,198,4.017,222,1.577,223,3.807,225,4.706,237,2.328,238,2.543,239,1.641,245,1.41,509,2.574,783,2.804,1082,3.645,1083,4.581,1084,4.581,1085,4.581,1086,4.581,1087,4.581,1088,4.581,1089,4.017]],["title/controllers/ProductController.html",[0,1.276,1090,3.139]],["body/controllers/ProductController.html",[0,1.11,2,1.11,3,0.084,4,0.074,5,0.074,7,0.419,8,1.289,10,1.677,11,0.011,12,0.885,14,1.725,15,1.346,16,0.179,17,0.531,20,0.084,21,0.186,22,1.623,23,1.11,24,1.725,26,0.007,27,0.007,94,0.838,122,0.951,155,2.55,176,2.061,179,4.324,250,1.815,252,1.625,253,2.472,255,2.082,256,2.082,257,2.082,262,1.971,264,1.681,265,1.681,271,2.896,272,1.464,273,2.93,275,1.464,276,2.93,278,1.464,280,2.93,289,2.93,291,2.061,292,1.971,293,2.061,295,1.89,298,1.417,300,1.89,305,1.567,310,1.623,312,1.971,315,2.061,317,2.061,327,2.061,329,2.061,509,2.227,629,3.625,643,2.161,1090,3.881,1091,3.256,1092,3.713,1093,3.713,1094,3.713,1095,3.713,1096,3.713,1097,5.302,1098,3.713,1099,2.955,1100,2.401,1101,3.256,1102,3.713,1103,3.713,1104,3.713,1105,3.713,1106,3.713,1107,3.713,1108,3.713,1109,3.713]],["title/modules/ProductModule.html",[28,1.314,42,2.932]],["body/modules/ProductModule.html",[2,1.861,3,0.107,4,0.094,5,0.094,11,0.011,16,0.205,17,0.676,20,0.107,21,0.237,26,0.008,27,0.008,28,1.917,30,1.994,31,2.628,42,5.532,47,2.822,48,2.142,49,2.142,51,2.929,56,2.311,57,1.188,122,0.807,237,2.377,381,2.509,389,2.456,509,1.994,560,2.75,732,3.475,783,3.811,1032,3.056,1090,5.12,1100,5.44,1101,4.144,1110,4.144,1111,4.144,1112,4.144,1113,4.726,1114,2.623,1115,4.277,1116,3.475,1117,4.144,1118,4.726,1119,3.475,1120,4.726]],["title/injectables/ProductService.html",[79,0.61,1100,2.76]],["body/injectables/ProductService.html",[3,0.062,4,0.055,5,0.055,7,0.31,8,1.033,11,0.011,12,0.825,14,1.523,15,1.26,16,0.174,17,0.394,20,0.062,21,0.138,23,1.264,24,1.411,26,0.005,27,0.005,57,0.692,79,0.605,80,0.847,93,2.024,94,0.781,122,0.941,176,1.528,178,1.247,179,4.434,182,2.024,184,1.602,185,3.33,239,0.986,245,2.281,251,2.662,252,1.302,253,2.137,255,1.668,256,1.668,257,1.668,264,1.567,265,1.567,271,2.597,272,1.668,275,1.668,278,1.086,286,2.137,305,1.162,310,1.203,318,2.797,357,1.515,374,1.346,421,2.46,432,3.491,446,1.89,447,1.89,449,1.401,450,1.401,453,1.989,456,1.602,460,1.602,461,1.401,463,2.348,464,2.348,465,2.518,467,2.348,477,1.89,478,1.89,479,1.89,497,1.461,501,1.602,502,1.461,509,2.779,510,2.348,602,1.528,815,3.709,1032,1.78,1035,3.109,1044,2.024,1053,2.414,1066,2.414,1097,4.523,1099,2.19,1100,2.735,1114,3.208,1116,2.024,1117,2.414,1119,2.024,1121,2.414,1122,2.753,1123,4.099,1124,2.753,1125,3.709,1126,2.753,1127,2.753,1128,2.753,1129,2.753,1130,2.753,1131,2.19,1132,4.23,1133,4.23,1134,2.414,1135,2.753,1136,2.753,1137,2.414,1138,2.414,1139,2.753,1140,2.753,1141,2.19,1142,2.19,1143,2.753,1144,4.23,1145,2.753,1146,3.709,1147,2.753,1148,2.753,1149,2.414,1150,2.753,1151,2.753,1152,2.414]],["title/classes/Purchase.html",[21,0.214,779,2.173]],["body/classes/Purchase.html",[3,0.108,4,0.095,5,0.095,7,0.538,10,1.763,11,0.011,12,0.931,15,1.047,16,0.178,20,0.142,21,0.239,26,0.008,27,0.008,57,1.199,85,3.726,86,1.1,89,2.047,94,0.931,97,3.646,149,3.19,185,4.524,202,4.607,203,5.568,222,1.62,223,3.884,225,4.481,233,4.052,237,2.392,238,2.649,239,1.709,245,1.469,421,1.882,699,3.508,779,3.19,780,2.92,1153,3.797,1154,4.772,1155,4.772,1156,4.772,1157,4.772,1158,4.184,1159,4.772,1160,4.184]],["title/controllers/PurchaseController.html",[0,1.276,1161,3.139]],["body/controllers/PurchaseController.html",[0,1.099,2,1.099,3,0.083,4,0.073,5,0.073,7,0.415,8,1.28,10,1.737,11,0.011,12,0.917,14,1.787,15,1.287,16,0.169,17,0.526,20,0.083,21,0.184,22,1.607,23,1.099,24,1.787,26,0.007,27,0.007,94,0.882,122,0.912,199,4.978,250,1.797,252,1.613,253,2.461,255,2.067,256,2.067,257,2.067,262,1.952,264,1.769,265,1.769,271,2.626,272,1.45,273,2.909,275,1.45,276,2.909,278,1.45,280,2.909,289,2.041,291,2.041,292,1.952,293,2.041,295,1.871,298,1.403,300,1.871,305,1.551,312,1.952,315,2.041,317,2.041,327,2.041,329,2.041,629,3.6,643,2.139,779,1.871,1161,3.853,1162,3.224,1163,4.596,1164,3.224,1165,3.676,1166,3.676,1167,3.676,1168,3.224,1169,5.241,1170,3.676,1171,3.676,1172,3.676,1173,2.926,1174,2.377,1175,3.224,1176,3.676,1177,3.676,1178,3.676,1179,5.356,1180,3.676,1181,3.676,1182,3.676,1183,5.241,1184,3.676,1185,3.676,1186,3.676,1187,3.676]],["title/modules/PurchaseModule.html",[28,1.314,43,2.932]],["body/modules/PurchaseModule.html",[2,1.369,3,0.104,4,0.091,5,0.091,11,0.011,16,0.206,17,0.655,20,0.104,21,0.229,26,0.008,27,0.008,28,1.877,30,1.933,31,2.574,43,5.49,47,2.764,48,2.076,49,2.076,51,2.869,56,2.24,57,1.151,122,0.79,237,2.328,381,3.239,389,2.406,560,2.665,732,3.368,779,2.332,780,2.804,783,2.804,784,2.804,1032,2.962,1114,2.543,1115,4.189,1116,3.368,1119,3.368,1161,4.485,1174,5.45,1175,4.017,1188,4.017,1189,4.017,1190,4.017,1191,4.581,1192,4.017,1193,4.017,1194,4.581,1195,4.581,1196,4.581,1197,4.581]],["title/injectables/PurchaseService.html",[79,0.61,1174,2.76]],["body/injectables/PurchaseService.html",[3,0.052,4,0.046,5,0.046,7,0.262,8,0.904,11,0.011,12,0.806,14,1.498,15,1.204,16,0.175,17,0.332,20,0.052,21,0.116,23,1.38,24,1.405,26,0.005,27,0.005,57,0.584,79,0.529,80,0.715,85,2.172,90,2.986,91,1.849,94,0.768,107,2.037,122,0.834,178,1.053,182,1.708,184,1.352,185,3.721,199,3.407,202,2.723,239,0.832,245,2.416,251,2.571,252,1.14,253,1.948,255,1.461,256,1.461,257,1.461,264,1.541,265,1.541,271,2.716,272,1.461,275,1.461,278,0.916,286,1.948,305,0.98,310,1.015,318,2.808,357,1.327,374,1.136,421,2.419,432,3.593,449,1.183,450,1.183,453,2.172,456,1.352,460,1.352,461,2.351,463,2.056,464,1.29,465,2.576,467,2.925,497,2.452,501,1.352,502,1.234,509,1.563,510,2.564,602,2.564,779,3.122,784,1.422,794,2.037,796,2.947,802,1.849,810,3.248,811,2.037,820,2.037,824,1.849,1032,1.502,1035,3.395,1044,1.708,1114,2.925,1116,1.708,1119,1.708,1123,3.675,1131,1.849,1134,3.248,1137,2.037,1138,2.037,1141,1.849,1142,1.849,1149,2.037,1158,2.037,1163,3.248,1164,2.037,1168,3.248,1173,2.947,1174,2.395,1193,2.037,1198,2.037,1199,2.323,1200,2.323,1201,2.323,1202,2.323,1203,2.323,1204,2.323,1205,4.509,1206,2.323,1207,3.704,1208,4.618,1209,4.618,1210,2.323,1211,2.323,1212,3.704,1213,3.704,1214,2.323,1215,3.704,1216,5.269,1217,2.323,1218,2.323,1219,2.323,1220,2.323,1221,2.323,1222,2.323,1223,2.323,1224,3.248,1225,2.323,1226,2.323,1227,2.323,1228,2.323,1229,3.704,1230,2.323,1231,2.323,1232,2.323,1233,2.323]],["title/controllers/SaleController.html",[0,1.276,1234,3.139]],["body/controllers/SaleController.html",[0,1.112,2,1.112,3,0.084,4,0.074,5,0.074,7,0.42,8,1.291,10,1.589,11,0.011,12,0.839,14,1.635,15,1.417,16,0.156,17,0.532,20,0.084,21,0.186,22,1.627,23,1.112,24,1.635,26,0.007,27,0.007,94,0.839,122,0.868,250,1.82,251,2.741,264,1.682,265,1.682,286,2.475,294,2.278,295,1.895,298,1.421,300,1.895,312,1.976,643,2.166,761,5.985,763,5.679,769,5.872,1234,3.888,1235,3.264,1236,3.264,1237,4.637,1238,4.637,1239,4.637,1240,4.637,1241,3.264,1242,3.722,1243,3.722,1244,3.264,1245,3.722,1246,3.722,1247,3.264,1248,5.288,1249,3.722,1250,3.722,1251,3.264,1252,3.722,1253,3.722,1254,2.407,1255,3.264,1256,3.722,1257,3.722,1258,3.722,1259,3.722,1260,3.722,1261,3.722,1262,3.722,1263,3.722,1264,3.722,1265,3.722,1266,3.722,1267,3.722,1268,3.722,1269,3.722,1270,3.722,1271,3.722]],["title/modules/SaleModule.html",[28,1.314,44,2.932]],["body/modules/SaleModule.html",[2,1.39,3,0.105,4,0.092,5,0.092,11,0.011,16,0.204,17,0.665,20,0.105,21,0.233,26,0.008,27,0.008,28,1.897,30,1.963,31,2.601,44,5.511,47,2.793,48,2.108,49,2.108,51,2.188,52,2.707,56,2.275,57,1.169,122,0.799,237,2.352,381,2.47,395,2.847,565,2.275,566,3.772,567,3.008,571,3.42,779,2.368,780,3.772,781,3.195,784,2.847,785,4.08,786,4.08,789,3.702,1192,4.08,1234,4.531,1254,5.383,1255,4.08,1272,4.08,1273,4.08,1274,4.08,1275,4.652,1276,4.652,1277,4.652,1278,4.652,1279,4.652]],["title/injectables/SaleService.html",[79,0.61,1254,2.76]],["body/injectables/SaleService.html",[3,0.043,4,0.038,5,0.038,7,0.213,8,0.765,11,0.011,12,0.648,14,1.139,15,1.231,16,0.142,17,0.271,20,0.043,21,0.095,23,0.937,24,1.69,26,0.004,27,0.004,57,0.475,79,0.448,80,0.582,85,0.89,90,2.027,94,0.648,122,0.67,149,3.005,203,3.193,239,0.678,244,3.017,245,2.5,251,2.331,264,1.3,265,1.3,286,1.725,318,2.109,357,1.123,421,2.199,432,3.005,449,0.963,450,0.963,453,1.474,461,2.375,465,2.282,497,2.478,502,1.664,509,1.693,565,1.533,567,1.223,576,2.305,589,1.391,602,2.59,761,5.089,763,4.54,771,4.092,773,4.092,784,1.158,798,3.714,799,4.092,800,5.415,804,4.092,805,4.116,806,3.714,807,4.092,808,4.092,809,4.092,814,1.506,822,3.519,823,3.519,824,3.193,825,3.519,1032,1.223,1034,1.659,1035,2.95,1044,1.391,1073,1.659,1141,1.506,1224,1.659,1236,4.092,1237,2.749,1238,2.749,1239,2.749,1240,2.749,1241,1.659,1244,1.659,1247,1.659,1251,1.659,1254,2.027,1280,1.659,1281,1.892,1282,1.892,1283,1.892,1284,1.892,1285,1.892,1286,1.892,1287,1.659,1288,1.892,1289,4.667,1290,4.013,1291,4.013,1292,1.892,1293,1.892,1294,5.575,1295,1.892,1296,1.892,1297,1.892,1298,1.892,1299,1.892,1300,1.892,1301,1.892,1302,1.892,1303,1.892,1304,1.892,1305,1.892,1306,1.892,1307,1.892,1308,1.892,1309,1.892,1310,1.892,1311,1.892,1312,1.892,1313,1.892,1314,1.892,1315,1.892,1316,1.892,1317,1.892,1318,1.892,1319,1.892,1320,1.892,1321,1.892,1322,5.903,1323,3.135,1324,1.892,1325,1.892,1326,1.892,1327,3.135,1328,1.892,1329,1.892,1330,1.892,1331,4.013,1332,1.892,1333,1.892,1334,1.892,1335,3.135,1336,1.892,1337,1.892,1338,1.892,1339,4.667,1340,1.892,1341,1.892,1342,3.135,1343,1.892,1344,1.892,1345,1.892,1346,1.892,1347,1.892,1348,3.135,1349,1.892,1350,1.892,1351,1.892,1352,1.892,1353,1.892,1354,1.892,1355,1.892,1356,1.892,1357,1.892,1358,1.892,1359,1.892,1360,1.892,1361,1.892]],["title/classes/Store.html",[21,0.214,1114,2.37]],["body/classes/Store.html",[3,0.104,4,0.092,5,0.092,7,0.521,10,1.813,11,0.011,12,0.957,15,1.359,16,0.156,20,0.139,21,0.231,26,0.008,27,0.008,57,1.162,86,1.066,89,2.005,94,0.957,119,4.217,120,4.009,122,0.893,149,3.997,184,4.009,222,1.587,223,3.824,225,4.571,233,3.968,237,2.343,238,2.566,239,1.656,245,1.423,421,1.824,699,3.399,1114,3.407,1115,3.175,1362,3.679,1363,4.624,1364,4.624,1365,4.624,1366,4.624,1367,4.624,1368,4.054]],["title/controllers/StoreController.html",[0,1.276,1369,3.139]],["body/controllers/StoreController.html",[0,1.107,2,1.107,3,0.084,4,0.073,5,0.073,7,0.418,8,1.287,10,1.675,11,0.011,12,0.884,14,1.724,15,1.346,16,0.179,17,0.53,20,0.084,21,0.185,22,1.619,23,1.107,24,1.724,26,0.007,27,0.007,94,0.837,122,0.978,212,4.32,250,1.811,252,1.622,253,2.47,255,2.078,256,2.078,257,2.078,262,1.967,264,1.679,265,1.679,271,2.784,272,1.461,273,2.925,275,1.461,276,2.925,278,1.461,280,2.925,289,2.925,291,2.056,292,1.967,293,2.056,295,1.885,298,1.414,300,1.885,305,1.563,310,1.619,312,1.967,315,2.056,317,2.056,327,2.056,329,2.056,629,3.619,643,2.155,1114,2.056,1179,3.248,1369,3.874,1370,3.248,1371,3.704,1372,3.704,1373,3.704,1374,3.704,1375,3.704,1376,5.298,1377,3.704,1378,4.193,1379,2.395,1380,3.248,1381,3.704,1382,3.704,1383,3.704,1384,3.704,1385,3.704,1386,3.704,1387,3.704,1388,3.704,1389,3.704,1390,3.704]],["title/modules/StoreModule.html",[28,1.314,45,2.932]],["body/modules/StoreModule.html",[2,1.488,3,0.112,4,0.099,5,0.099,11,0.011,16,0.204,17,0.712,20,0.112,21,0.249,26,0.008,27,0.008,28,1.983,30,2.101,31,2.719,45,5.602,47,2.919,48,2.256,49,2.256,51,3.03,56,2.434,57,1.251,381,3.421,389,2.541,560,2.897,732,3.66,1369,4.737,1379,5.518,1380,4.366,1391,4.366,1392,4.366,1393,4.366,1394,4.979,1395,4.979,1396,4.366,1397,4.979,1398,4.979,1399,4.979,1400,4.979]],["title/injectables/StoreService.html",[79,0.61,1379,2.76]],["body/injectables/StoreService.html",[3,0.071,4,0.062,5,0.062,7,0.354,8,1.141,11,0.011,12,0.868,14,1.614,15,1.316,16,0.176,17,0.449,20,0.071,21,0.157,23,0.939,24,1.509,26,0.006,27,0.006,57,0.789,79,0.668,80,0.967,94,0.828,122,0.955,178,1.423,212,4.638,239,1.125,245,1.903,251,2.652,252,1.439,253,2.285,255,1.843,256,1.843,257,1.843,264,1.66,265,1.66,271,2.732,272,1.843,275,1.843,278,1.843,286,2.063,305,1.326,310,1.373,318,2.695,357,1.674,421,2.606,432,2.841,446,2.158,447,2.158,449,1.599,450,1.599,453,1.478,461,1.599,463,2.594,464,2.594,465,2.729,467,2.594,468,2.5,477,2.158,478,2.158,479,2.158,501,1.828,502,1.668,510,2.594,1114,3.845,1123,2.5,1125,4.099,1131,2.5,1142,2.5,1146,4.099,1152,2.755,1376,5.062,1378,3.719,1379,3.022,1396,2.755,1401,2.755,1402,3.142,1403,3.142,1404,3.142,1405,3.142,1406,3.142,1407,3.142,1408,3.142,1409,3.142,1410,3.142,1411,4.674,1412,4.674,1413,3.142,1414,3.142,1415,3.142,1416,3.142]],["title/classes/UpdateCustomerDto.html",[21,0.214,279,2.932]],["body/classes/UpdateCustomerDto.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,20,0.138,21,0.307,26,0.009,27,0.009,86,1.412,116,3.96,118,4.874,222,1.584,252,1.885,279,5.035,306,4.874,1417,5.371,1418,3.564,1419,3.4,1420,3.4,1421,6.126]],["title/classes/UpdateDriverDto.html",[21,0.214,634,2.932]],["body/classes/UpdateDriverDto.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,20,0.138,21,0.307,26,0.009,27,0.009,86,1.412,133,3.96,135,4.503,222,1.584,252,1.885,634,5.035,640,4.874,1418,3.564,1419,3.4,1420,3.4,1422,5.371,1423,6.126]],["title/classes/UpdateExpenseDto.html",[21,0.214,712,2.932]],["body/classes/UpdateExpenseDto.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,20,0.139,21,0.308,26,0.009,27,0.009,86,1.418,145,3.977,147,4.895,222,1.59,252,1.893,712,5.047,714,4.895,1418,3.579,1419,3.414,1420,3.414,1424,5.393,1425,6.151]],["title/classes/UpdateManagerDto.html",[21,0.214,934,2.932]],["body/classes/UpdateManagerDto.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,20,0.138,21,0.307,26,0.009,27,0.009,86,1.412,157,3.96,159,4.503,222,1.584,252,1.885,934,5.035,938,4.874,1418,3.564,1419,3.4,1420,3.4,1426,5.371,1427,6.126]],["title/classes/UpdateProductDto.html",[21,0.214,1097,2.932]],["body/classes/UpdateProductDto.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,20,0.138,21,0.305,26,0.009,27,0.009,86,1.407,88,4.854,179,3.944,222,1.577,252,1.877,509,2.574,1097,5.022,1099,4.854,1418,3.55,1419,3.386,1420,3.386,1428,5.349,1429,6.1]],["title/classes/UpdatePurchaseDto.html",[21,0.214,1205,3.139]],["body/classes/UpdatePurchaseDto.html",[3,0.139,4,0.122,5,0.122,11,0.011,16,0.187,20,0.139,21,0.308,26,0.009,27,0.009,86,1.418,199,3.977,201,4.895,222,1.59,252,1.893,1173,4.895,1205,5.403,1418,3.579,1419,3.414,1420,3.414,1430,5.393,1431,6.151]],["title/classes/UpdateStoreDto.html",[21,0.214,1376,2.932]],["body/classes/UpdateStoreDto.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,20,0.138,21,0.307,26,0.009,27,0.009,86,1.412,212,3.96,214,4.874,222,1.584,252,1.885,1376,5.035,1378,4.874,1418,3.564,1419,3.4,1420,3.4,1432,5.371,1433,6.126]],["title/controllers/UploadController.html",[0,1.276,1434,3.139]],["body/controllers/UploadController.html",[0,1.324,2,1.324,3,0.1,4,0.088,5,0.143,7,0.5,8,1.457,10,1.416,11,0.011,12,0.747,14,1.457,16,0.191,17,0.633,20,0.1,21,0.222,23,1.324,24,1.457,26,0.008,27,0.008,94,0.555,122,0.773,184,3.924,250,2.166,260,4.097,262,3.167,264,1.499,265,1.499,290,3.526,292,2.353,297,3.258,357,1.587,453,2.084,1434,4.386,1435,3.885,1436,3.885,1437,5.966,1438,5.966,1439,4.431,1440,5.966,1441,4.431,1442,4.431,1443,6.744,1444,4.431,1445,4.431,1446,2.865,1447,3.885,1448,4.431,1449,4.431,1450,4.431,1451,3.885,1452,5.966,1453,4.431,1454,4.431,1455,3.885,1456,4.431,1457,4.431,1458,4.431,1459,4.431,1460,4.431,1461,4.431,1462,4.431,1463,4.431,1464,4.431,1465,4.431,1466,4.431,1467,4.431,1468,4.431,1469,4.431,1470,4.431]],["title/modules/UploadModule.html",[28,1.314,46,2.932]],["body/modules/UploadModule.html",[2,2.059,3,0.125,4,0.11,5,0.11,11,0.011,16,0.191,17,0.791,20,0.125,21,0.277,26,0.009,27,0.009,28,2.12,30,2.335,31,2.907,46,5.656,47,3.122,48,2.508,49,2.508,51,3.241,1434,5.516,1446,5.324,1447,4.852,1471,4.852,1472,4.852,1473,5.534,1474,5.534]],["title/injectables/UploadService.html",[79,0.61,1446,2.76]],["body/injectables/UploadService.html",[3,0.121,4,0.106,5,0.134,7,0.604,8,1.648,11,0.011,12,0.845,14,1.648,16,0.171,17,0.766,20,0.121,21,0.268,24,1.648,26,0.009,27,0.009,79,0.965,80,1.648,122,0.875,184,3.927,261,4.261,264,1.696,265,1.696,1436,5.918,1446,4.364,1455,4.695,1475,4.695,1476,6.75,1477,5.355,1478,5.355,1479,6.75,1480,5.355,1481,4.695,1482,5.355,1483,5.355,1484,5.355,1485,5.355]],["title/coverage.html",[1486,4.629]],["body/coverage.html",[0,2.098,1,1.369,5,0.037,6,1.632,11,0.011,18,1.204,21,0.411,26,0.004,27,0.004,67,2.124,79,1.129,81,1.632,85,1.455,87,1.632,88,2.461,94,0.233,106,1.632,116,1.204,117,1.632,118,2.461,133,1.204,134,1.632,135,2.916,145,1.204,146,1.632,147,2.461,157,1.204,158,1.632,159,2.916,164,1.139,165,1.481,166,2.461,179,1.204,180,1.632,181,1.632,199,1.204,200,1.632,201,2.461,212,1.204,213,1.632,214,2.461,220,0.876,221,2.461,246,1.204,248,1.369,249,1.632,279,1.279,287,0.814,298,1.763,301,1.369,303,1.139,307,1.204,348,1.632,349,3.405,354,1.279,355,1.632,369,1.481,379,1.204,387,1.033,389,1.822,421,0.734,428,1.632,509,1.305,516,1.204,517,2.461,524,1.369,526,1.369,527,1.632,545,1.204,562,1.033,563,1.279,565,0.91,566,1.139,573,1.632,616,2.461,625,1.369,626,1.632,634,1.279,639,1.279,641,1.139,644,1.204,656,1.083,669,1.632,696,1.083,697,2.461,703,1.279,705,1.369,706,1.632,712,1.279,715,1.204,737,1.632,756,1.369,757,2.274,758,1.632,764,1.204,779,0.948,780,1.139,783,1.139,793,1.632,829,7.67,844,1.632,855,1.632,857,1.632,859,1.632,860,1.632,874,1.632,877,1.632,880,1.632,883,2.308,884,1.632,885,1.632,886,1.632,887,1.632,892,1.632,895,1.632,896,1.279,897,1.632,900,1.632,919,2.461,925,1.369,927,1.369,928,1.632,934,1.279,939,1.139,941,1.204,954,1.632,967,1.632,990,2.461,998,1.369,999,1.632,1012,1.279,1014,1.204,1033,1.632,1081,1.632,1082,2.461,1090,1.369,1091,1.632,1097,1.279,1100,1.204,1114,1.033,1115,1.279,1121,1.632,1153,2.461,1161,1.369,1162,1.632,1174,1.204,1198,1.632,1205,1.369,1234,1.369,1235,1.632,1254,1.204,1280,1.632,1362,2.461,1369,1.369,1370,1.632,1376,1.279,1379,1.204,1401,1.632,1417,1.632,1422,1.632,1424,1.632,1426,1.632,1428,1.632,1430,1.632,1432,1.632,1434,1.369,1435,1.632,1446,1.204,1475,1.632,1486,1.481,1487,1.862,1488,1.862,1489,1.862,1490,3.967,1491,1.632,1492,6.565,1493,8.187,1494,7.137,1495,5.86,1496,1.862,1497,5.126,1498,2.712,1499,5.86,1500,3.478,1501,3.478,1502,4.62,1503,6.134,1504,2.712,1505,5.53,1506,1.632,1507,1.632,1508,6.134,1509,2.712,1510,1.632,1511,1.862,1512,1.862]],["title/dependencies.html",[31,2.166,1513,3.13]],["body/dependencies.html",[11,0.011,17,0.671,21,0.31,26,0.008,27,0.008,31,1.982,57,1.18,70,4.118,72,4.559,73,3.453,104,2.128,149,2.39,175,3.737,239,1.682,297,4.559,352,1.793,367,3.608,368,3.453,385,3.036,451,3.453,865,3.226,1287,4.118,1419,2.607,1420,2.607,1451,5.438,1514,4.696,1515,7.385,1516,6.202,1517,4.696,1518,6.202,1519,4.696,1520,4.696,1521,6.202,1522,4.696,1523,4.696,1524,4.696,1525,4.696,1526,4.696,1527,6.202,1528,4.696,1529,4.696,1530,4.696,1531,4.696,1532,4.696,1533,4.696,1534,4.696,1535,4.696,1536,4.696,1537,4.696,1538,4.696,1539,4.696,1540,4.696,1541,4.696,1542,4.696,1543,4.696,1544,4.696,1545,4.696,1546,4.696,1547,4.696,1548,4.696,1549,4.696,1550,4.696]],["title/miscellaneous/functions.html",[1551,2.625,1552,4.5]],["body/miscellaneous/functions.html",[7,0.536,11,0.01,15,1.451,26,0.008,27,0.008,94,0.991,122,1.025,264,1.989,265,1.989,1498,4.171,1500,6.94,1501,6.94,1504,4.171,1506,4.171,1507,6.126,1509,4.171,1551,3.497,1552,4.171,1553,4.756,1554,7.915,1555,6.987,1556,7.915,1557,7.915,1558,6.987]],["title/index.html",[7,0.403,1559,3.57,1560,3.57]],["body/index.html",[4,0.095,11,0.011,26,0.008,27,0.008,183,3.531,325,3.822,918,4.211,1481,4.211,1486,3.822,1561,4.802,1562,4.802,1563,6.293,1564,4.802,1565,4.802,1566,4.802,1567,4.802,1568,4.802,1569,4.802,1570,7.02,1571,4.802,1572,4.802,1573,4.802,1574,4.802,1575,8.086,1576,4.802,1577,4.802,1578,4.802,1579,7.936,1580,4.802,1581,4.802,1582,6.293,1583,4.802,1584,4.802,1585,4.802,1586,4.802,1587,6.293,1588,6.293,1589,4.802,1590,4.802,1591,4.802,1592,6.293,1593,6.293,1594,4.802,1595,4.802,1596,4.802,1597,4.802,1598,4.802,1599,4.211,1600,4.802,1601,4.802,1602,4.802,1603,4.802,1604,4.802,1605,4.802,1606,4.802,1607,4.211,1608,4.802,1609,4.802,1610,4.802,1611,4.802,1612,4.802,1613,4.802,1614,4.211]],["title/modules.html",[30,2.455]],["body/modules.html",[11,0.008,26,0.008,27,0.008,29,3.854,30,2.212,35,3.6,36,3.6,37,3.6,38,3.6,39,3.6,40,3.6,41,3.6,42,3.6,43,3.6,44,3.6,45,3.6,46,3.6,1599,7.571,1615,8.634,1616,8.634,1617,8.634]],["title/overview.html",[1618,5.101]],["body/overview.html",[2,0.859,11,0.011,18,3.421,26,0.006,27,0.006,29,6.226,30,1.213,31,1.845,32,2.521,33,2.521,34,2.521,35,5.233,36,4.601,37,4.928,38,4.601,39,4.601,40,5.048,41,4.368,42,4.601,43,4.601,44,4.601,45,4.601,46,4.368,47,1.981,48,1.303,49,1.303,80,0.885,86,0.663,303,4.262,354,3.634,375,2.521,376,2.521,377,2.521,378,5.184,379,3.421,545,4.502,556,2.521,557,2.521,558,2.521,641,4.262,644,3.421,662,2.521,663,2.521,664,2.521,715,4.502,726,2.521,727,2.521,728,2.521,764,4.502,774,2.521,775,2.521,776,2.521,939,4.262,941,3.421,959,2.521,960,2.521,961,2.521,962,5.184,1014,3.421,1027,2.521,1028,2.521,1100,4.502,1110,2.521,1111,2.521,1112,2.521,1174,4.502,1188,2.521,1189,2.521,1190,2.521,1254,4.502,1272,2.521,1273,2.521,1274,2.521,1379,4.502,1391,2.521,1392,2.521,1393,2.521,1446,3.421,1471,2.521,1472,2.521,1618,2.521,1619,4.372,1620,2.875,1621,2.875]],["title/properties.html",[89,1.677,1513,3.13]],["body/properties.html",[11,0.011,26,0.01,27,0.01,89,2.123,183,4.778,1607,5.699,1614,5.699,1622,6.5,1623,6.5,1624,6.5]],["title/classes/updateOrderDto.html",[21,0.214,1012,2.932]],["body/classes/updateOrderDto.html",[3,0.138,4,0.121,5,0.121,11,0.011,16,0.186,20,0.138,21,0.305,26,0.009,27,0.009,86,1.407,164,4.476,166,4.854,222,1.577,252,1.877,717,4.485,1012,5.022,1418,4.255,1419,3.386,1420,3.386,1510,5.349]],["title/miscellaneous/variables.html",[1551,2.625,1625,4.5]],["body/miscellaneous/variables.html",[7,0.547,11,0.011,26,0.008,27,0.008,94,0.607,221,3.859,244,5.422,246,4.095,247,4.252,387,3.515,398,3.331,517,3.859,524,4.656,525,4.252,531,3.859,563,4.35,566,3.876,616,3.859,624,4.252,697,3.859,703,4.35,704,4.252,780,3.876,783,3.876,798,6.674,919,3.859,925,4.656,926,4.252,990,3.859,997,4.252,1082,3.859,1089,4.252,1115,4.35,1153,3.859,1160,4.252,1362,3.859,1368,4.252,1491,4.252,1551,3.565,1625,4.252,1626,4.849,1627,4.849,1628,4.849,1629,4.849,1630,4.849,1631,4.849,1632,4.849,1633,4.849,1634,4.849,1635,4.849,1636,4.849]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/updateOrderDto.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":829,"title":{},"body":{"injectables/IncomeStatementService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1623,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["02/02/2022",{"_index":799,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["02/02/2022',enddate:string",{"_index":804,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["03/23/2022",{"_index":800,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["1",{"_index":105,"title":{"classes/Articles-1.html":{},"injectables/JwtAuthGuard-1.html":{},"classes/JwtStrategy-1.html":{},"injectables/LocalAuthGuard-1.html":{}},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{}}}],["1.0.0",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["10s",{"_index":487,"title":{},"body":{"injectables/CustomerService.html":{}}}],["13",{"_index":1619,"title":{},"body":{"overview.html":{}}}],["16.0.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":402,"title":{},"body":{"modules/CustomerModule.html":{},"modules/ManagerModule.html":{}}}],["2",{"_index":856,"title":{"injectables/JwtAuthGuard-2.html":{},"classes/JwtStrategy-2.html":{},"injectables/LocalAuthGuard-2.html":{}},"body":{}}],["2.0.0",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":1620,"title":{},"body":{"overview.html":{}}}],["3",{"_index":858,"title":{"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy-3.html":{}},"body":{}}],["3.0.2",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["35",{"_index":1621,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["4.17.3",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["465",{"_index":408,"title":{},"body":{"modules/CustomerModule.html":{}}}],["5.0.1",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["6.2.6",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["6.7.3",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":668,"title":{},"body":{"modules/DriverModule.html":{}}}],["7.2.0",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["8.4.2",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":463,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["_id:order._id",{"_index":1072,"title":{},"body":{"injectables/OrderService.html":{}}}],["_id:purchase._id",{"_index":1210,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["access_token",{"_index":515,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["account",{"_index":341,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/MailService.html":{}}}],["active",{"_index":339,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["adapter",{"_index":420,"title":{},"body":{"modules/CustomerModule.html":{}}}],["address",{"_index":119,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"classes/Driver.html":{},"classes/Manager.html":{},"classes/Store.html":{}}}],["address:customer.address",{"_index":1076,"title":{},"body":{"injectables/OrderService.html":{}}}],["already",{"_index":477,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["amazing",{"_index":1600,"title":{},"body":{"index.html":{}}}],["app",{"_index":1577,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1569,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arguments",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["arr",{"_index":1045,"title":{},"body":{"injectables/OrderService.html":{}}}],["arr.push(data",{"_index":1048,"title":{},"body":{"injectables/OrderService.html":{}}}],["arr[x].articles",{"_index":1052,"title":{},"body":{"injectables/OrderService.html":{}}}],["arr[x].articles.length",{"_index":1050,"title":{},"body":{"injectables/OrderService.html":{}}}],["arr[x].articles[0].productid",{"_index":1059,"title":{},"body":{"injectables/OrderService.html":{}}}],["arr[x].articles[y].productid",{"_index":1054,"title":{},"body":{"injectables/OrderService.html":{}}}],["article",{"_index":1226,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["articles",{"_index":85,"title":{"classes/Articles.html":{},"classes/Articles-1.html":{}},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{},"injectables/IncomeStatementService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Purchase.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"coverage.html":{}}}],["articles.dto",{"_index":211,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["articles.productid",{"_index":1224,"title":{},"body":{"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["articles.quantity",{"_index":824,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["articles.sellingprice",{"_index":1356,"title":{},"body":{"injectables/SaleService.html":{}}}],["articles.sellingprice).reduce((x,y)=>x+y",{"_index":825,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["articles.unitcost",{"_index":1227,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["articles.unitcost).reduce((x,y)=>x+y",{"_index":833,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["articles:order.articles",{"_index":1074,"title":{},"body":{"injectables/OrderService.html":{}}}],["articles:orderarticles",{"_index":1358,"title":{},"body":{"injectables/SaleService.html":{}}}],["articles:purchasearticles",{"_index":1211,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["articles:x.articles",{"_index":827,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["assert",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["async",{"_index":251,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["auth",{"_index":411,"title":{},"body":{"modules/CustomerModule.html":{}}}],["auth.guard",{"_index":300,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{}}}],["auth.guard.ts",{"_index":349,"title":{},"body":{"injectables/CustomerLocalAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"coverage.html":{}}}],["auth/guard/jwt",{"_index":544,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["auth/guard/local",{"_index":302,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/ManagerController.html":{}}}],["auth/strategy/jwt.strategy",{"_index":390,"title":{},"body":{"modules/CustomerModule.html":{}}}],["auth/strategy/local.strategy",{"_index":391,"title":{},"body":{"modules/CustomerModule.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"controllers/ManagerController.html":{},"modules/ManagerModule.html":{}}}],["auth0/constants",{"_index":388,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"modules/ManagerModule.html":{}}}],["authguard",{"_index":351,"title":{},"body":{"injectables/CustomerLocalAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{}}}],["authguard('jwt",{"_index":846,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{}}}],["authguard('local",{"_index":353,"title":{},"body":{"injectables/CustomerLocalAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{}}}],["author",{"_index":1607,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":360,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{}}}],["await",{"_index":318,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/LocalStrategy.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["backers",{"_index":1601,"title":{},"body":{"index.html":{}}}],["based",{"_index":852,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bcrypt",{"_index":451,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"dependencies.html":{}}}],["bcrypt.compare(login.password",{"_index":693,"title":{},"body":{"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["bcrypt.compare(pass",{"_index":494,"title":{},"body":{"injectables/CustomerService.html":{}}}],["bcrypt.gensalt(10",{"_index":470,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["bcrypt.hash(createcustomerdto.password",{"_index":472,"title":{},"body":{"injectables/CustomerService.html":{}}}],["bcrypt.hash(createdriverdto.password",{"_index":686,"title":{},"body":{"injectables/DriverService.html":{}}}],["bcrypt.hash(createmanagerdto.password",{"_index":984,"title":{},"body":{"injectables/ManagerService.html":{}}}],["body",{"_index":289,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["body('name",{"_index":1387,"title":{},"body":{"controllers/StoreController.html":{}}}],["bootstrap",{"_index":1507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1617,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1615,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1564,"title":{},"body":{"index.html":{}}}],["canactivate(context",{"_index":847,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":497,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["catch(err",{"_index":468,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MailService.html":{},"injectables/StoreService.html":{}}}],["category",{"_index":182,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["category:string",{"_index":195,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["cb",{"_index":1466,"title":{},"body":{"controllers/UploadController.html":{}}}],["cb(null",{"_index":1467,"title":{},"body":{"controllers/UploadController.html":{}}}],["check",{"_index":326,"title":{},"body":{"controllers/CustomerController.html":{}}}],["class",{"_index":21,"title":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"classes/Order.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"classes/updateOrderDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"classes/updateOrderDto.html":{}}}],["classes",{"_index":86,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"classes/Order.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"overview.html":{},"classes/updateOrderDto.html":{}}}],["click",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["clicking",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_customermodule",{"_index":375,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_exports",{"_index":377,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_providers",{"_index":376,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_deliverymodule",{"_index":556,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_deliverymodule_exports",{"_index":558,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_deliverymodule_providers",{"_index":557,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_drivermodule",{"_index":662,"title":{},"body":{"modules/DriverModule.html":{},"overview.html":{}}}],["cluster_drivermodule_exports",{"_index":664,"title":{},"body":{"modules/DriverModule.html":{},"overview.html":{}}}],["cluster_drivermodule_providers",{"_index":663,"title":{},"body":{"modules/DriverModule.html":{},"overview.html":{}}}],["cluster_expensemodule",{"_index":726,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_expensemodule_exports",{"_index":728,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_expensemodule_providers",{"_index":727,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_incomestatementmodule",{"_index":774,"title":{},"body":{"modules/IncomeStatementModule.html":{},"overview.html":{}}}],["cluster_incomestatementmodule_exports",{"_index":775,"title":{},"body":{"modules/IncomeStatementModule.html":{},"overview.html":{}}}],["cluster_incomestatementmodule_providers",{"_index":776,"title":{},"body":{"modules/IncomeStatementModule.html":{},"overview.html":{}}}],["cluster_managermodule",{"_index":959,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_managermodule_exports",{"_index":961,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_managermodule_providers",{"_index":960,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":1027,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":1028,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":1110,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":1111,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":1112,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_purchasemodule",{"_index":1188,"title":{},"body":{"modules/PurchaseModule.html":{},"overview.html":{}}}],["cluster_purchasemodule_exports",{"_index":1189,"title":{},"body":{"modules/PurchaseModule.html":{},"overview.html":{}}}],["cluster_purchasemodule_providers",{"_index":1190,"title":{},"body":{"modules/PurchaseModule.html":{},"overview.html":{}}}],["cluster_salemodule",{"_index":1272,"title":{},"body":{"modules/SaleModule.html":{},"overview.html":{}}}],["cluster_salemodule_exports",{"_index":1274,"title":{},"body":{"modules/SaleModule.html":{},"overview.html":{}}}],["cluster_salemodule_providers",{"_index":1273,"title":{},"body":{"modules/SaleModule.html":{},"overview.html":{}}}],["cluster_storemodule",{"_index":1391,"title":{},"body":{"modules/StoreModule.html":{},"overview.html":{}}}],["cluster_storemodule_exports",{"_index":1392,"title":{},"body":{"modules/StoreModule.html":{},"overview.html":{}}}],["cluster_storemodule_providers",{"_index":1393,"title":{},"body":{"modules/StoreModule.html":{},"overview.html":{}}}],["cluster_uploadmodule",{"_index":1471,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_uploadmodule_providers",{"_index":1472,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["common/pagination/pagination",{"_index":288,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{}}}],["comparepasswords",{"_index":1500,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparepasswords(rawpassword",{"_index":1555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["confirmation",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["confirmationcode",{"_index":224,"title":{},"body":{"classes/Customer.html":{},"injectables/CustomerService.html":{},"injectables/MailService.html":{}}}],["congrats",{"_index":347,"title":{},"body":{"controllers/CustomerController.html":{}}}],["console.log('s",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log(err",{"_index":499,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MailService.html":{}}}],["console.log(error",{"_index":1219,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["console.log(id",{"_index":1384,"title":{},"body":{"controllers/StoreController.html":{}}}],["console.log(prodid,purchase",{"_index":819,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["console.log(productid",{"_index":1225,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["console.log(purchases",{"_index":1233,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["const",{"_index":245,"title":{},"body":{"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"injectables/StoreService.html":{}}}],["constructor",{"_index":357,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{}}}],["constructor(@injectmodel(delivery.name",{"_index":587,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["constructor(authservice",{"_index":358,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{}}}],["constructor(customermodel",{"_index":431,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor(deliverymodel",{"_index":574,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["constructor(drivermodel",{"_index":672,"title":{},"body":{"injectables/DriverService.html":{}}}],["constructor(driverservice",{"_index":888,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(expensemodel",{"_index":738,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["constructor(mailerservice",{"_index":903,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(managermodel",{"_index":968,"title":{},"body":{"injectables/ManagerService.html":{}}}],["constructor(managerservice",{"_index":955,"title":{},"body":{"injectables/ManagerLocalStrategy.html":{}}}],["constructor(ordermodel",{"_index":1034,"title":{},"body":{"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{}}}],["constructor(productmodel",{"_index":1122,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(purchasemodel",{"_index":794,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/PurchaseService.html":{}}}],["constructor(storemodel",{"_index":1402,"title":{},"body":{"injectables/StoreService.html":{}}}],["contact",{"_index":120,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"classes/Driver.html":{},"classes/Manager.html":{},"classes/Store.html":{}}}],["contact:customer.contact",{"_index":611,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/OrderService.html":{}}}],["context.switchtohttp().getresponse",{"_index":848,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{},"controllers/UploadController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{},"controllers/UploadController.html":{},"coverage.html":{}}}],["controller('customer",{"_index":311,"title":{},"body":{"controllers/CustomerController.html":{}}}],["controller('delivery",{"_index":547,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["controller('driver",{"_index":645,"title":{},"body":{"controllers/DriverController.html":{}}}],["controller('expense",{"_index":718,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["controller('incomestatement",{"_index":766,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["controller('manager",{"_index":942,"title":{},"body":{"controllers/ManagerController.html":{}}}],["controller('order",{"_index":1016,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":1102,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('purchase",{"_index":1176,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["controller('sale",{"_index":1256,"title":{},"body":{"controllers/SaleController.html":{}}}],["controller('store",{"_index":1381,"title":{},"body":{"controllers/StoreController.html":{}}}],["controller('upload",{"_index":1456,"title":{},"body":{"controllers/UploadController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"controllers/ManagerController.html":{},"modules/ManagerModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"overview.html":{}}}],["controllers:[expensecontroller",{"_index":734,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["controllers:[incomestatementcontroller",{"_index":790,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["controllers:[purchasecontroller",{"_index":1197,"title":{},"body":{"modules/PurchaseModule.html":{}}}],["controllers:[salecontroller",{"_index":1278,"title":{},"body":{"modules/SaleModule.html":{}}}],["controllers:[storecontroller",{"_index":1400,"title":{},"body":{"modules/StoreModule.html":{}}}],["cookie",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["cookieoptions",{"_index":951,"title":{},"body":{"controllers/ManagerController.html":{}}}],["cost",{"_index":148,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/Expense.html":{}}}],["cost:number",{"_index":156,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/Expense.html":{}}}],["coverage",{"_index":1486,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":252,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"classes/updateOrderDto.html":{}}}],["create(@body",{"_index":317,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["create(createcustomerdto",{"_index":259,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["create(createdelivery",{"_index":530,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["create(createdriverdto",{"_index":628,"title":{},"body":{"controllers/DriverController.html":{},"injectables/DriverService.html":{}}}],["create(createexpensedto",{"_index":707,"title":{},"body":{"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{}}}],["create(createmanagerdto",{"_index":929,"title":{},"body":{"controllers/ManagerController.html":{},"injectables/ManagerService.html":{}}}],["create(createorderdto",{"_index":1001,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["create(createproductdto",{"_index":1092,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createpurchasedto",{"_index":1164,"title":{},"body":{"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{}}}],["create(createpurchasedto:createpurchasedto",{"_index":1217,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["create(createstoredto",{"_index":1371,"title":{},"body":{"controllers/StoreController.html":{}}}],["create(name",{"_index":1125,"title":{},"body":{"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["createcustomerdto",{"_index":116,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["createcustomerdto.email",{"_index":475,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomerdto.name",{"_index":474,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomerdto.username.tolocalelowercase",{"_index":473,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createdelivery",{"_index":533,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["createdriverdto",{"_index":133,"title":{"classes/CreateDriverDto.html":{}},"body":{"classes/CreateDriverDto.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/UpdateDriverDto.html":{},"coverage.html":{}}}],["createdriverdto.username",{"_index":687,"title":{},"body":{"injectables/DriverService.html":{}}}],["createexpensedto",{"_index":145,"title":{"classes/CreateExpenseDto.html":{}},"body":{"classes/CreateExpenseDto.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["createmanagerdto",{"_index":157,"title":{"classes/CreateManagerDto.html":{}},"body":{"classes/CreateManagerDto.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"classes/UpdateManagerDto.html":{},"coverage.html":{}}}],["createmanagerdto.username",{"_index":985,"title":{},"body":{"injectables/ManagerService.html":{}}}],["createorderdto",{"_index":164,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{},"classes/updateOrderDto.html":{}}}],["createproductdto",{"_index":179,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproductdto:createproductdto,@body('name",{"_index":1106,"title":{},"body":{"controllers/ProductController.html":{}}}],["createpurchasedto",{"_index":199,"title":{"classes/CreatePurchaseDto.html":{}},"body":{"classes/CreatePurchaseDto.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"classes/UpdatePurchaseDto.html":{},"coverage.html":{}}}],["createpurchasedto:createpurchasedto",{"_index":1183,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["createstoredto",{"_index":212,"title":{"classes/CreateStoreDto.html":{}},"body":{"classes/CreateStoreDto.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"classes/UpdateStoreDto.html":{},"coverage.html":{}}}],["createstoredto:createstoredto",{"_index":1386,"title":{},"body":{"controllers/StoreController.html":{}}}],["credentials",{"_index":658,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["customer",{"_index":220,"title":{"classes/Customer.html":{}},"body":{"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/IncomeStatementService.html":{},"injectables/ManagerService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["customer.address",{"_index":609,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["customer.controller",{"_index":392,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.dto",{"_index":306,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":118,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["customer.dto.ts:12",{"_index":127,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:15",{"_index":132,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:18",{"_index":130,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:21",{"_index":128,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:25",{"_index":131,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:6",{"_index":129,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:9",{"_index":126,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.name",{"_index":396,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/OrderModule.html":{}}}],["customer.save",{"_index":491,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["customer.service",{"_index":304,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{}}}],["customer/auth/guard/jwt",{"_index":299,"title":{},"body":{"controllers/CustomerController.html":{}}}],["customer/customer.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["customer/entities/customer.entity",{"_index":561,"title":{},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["customeraddress",{"_index":608,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["customercontroller",{"_index":248,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"coverage.html":{}}}],["customerid",{"_index":167,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/DeliveryService.html":{},"injectables/IncomeStatementService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{}}}],["customerlocalauthguard",{"_index":301,"title":{"injectables/CustomerLocalAuthGuard.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"coverage.html":{}}}],["customerlocalstrategy",{"_index":354,"title":{"injectables/CustomerLocalStrategy.html":{}},"body":{"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"coverage.html":{},"overview.html":{}}}],["customermodel",{"_index":435,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/OrderService.html":{}}}],["customermodule",{"_index":35,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["customername",{"_index":607,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["customerorder",{"_index":813,"title":{},"body":{"injectables/IncomeStatementService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["customerorder(@param('userid",{"_index":1019,"title":{},"body":{"controllers/OrderController.html":{}}}],["customerorder(id",{"_index":1003,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["customerorder.push(data",{"_index":821,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{}}}],["customerorder[product].articles",{"_index":1046,"title":{},"body":{"injectables/OrderService.html":{}}}],["customerschema",{"_index":246,"title":{},"body":{"classes/Customer.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/OrderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customerservice",{"_index":303,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["cutomer.dto",{"_index":309,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{}}}],["cutomer.dto.ts",{"_index":892,"title":{},"body":{"classes/LoginCustomerDto.html":{},"coverage.html":{}}}],["cutomer.dto.ts:6",{"_index":894,"title":{},"body":{"classes/LoginCustomerDto.html":{}}}],["cutomer.dto.ts:9",{"_index":893,"title":{},"body":{"classes/LoginCustomerDto.html":{}}}],["daily",{"_index":1292,"title":{},"body":{"injectables/SaleService.html":{}}}],["data",{"_index":374,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/IncomeStatementService.html":{},"injectables/LocalStrategy.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["data.access_token",{"_index":950,"title":{},"body":{"controllers/ManagerController.html":{}}}],["data.confirmationcode",{"_index":490,"title":{},"body":{"injectables/CustomerService.html":{}}}],["dataset",{"_index":1294,"title":{},"body":{"injectables/SaleService.html":{}}}],["dataset.push({date:item,total:totalamount",{"_index":1343,"title":{},"body":{"injectables/SaleService.html":{}}}],["dataset.push({date:x.name,total:totalamount",{"_index":1332,"title":{},"body":{"injectables/SaleService.html":{}}}],["dataset.push({prod:item,total:totalamount",{"_index":1361,"title":{},"body":{"injectables/SaleService.html":{}}}],["date",{"_index":149,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{},"injectables/DeliveryService.html":{},"classes/Expense.html":{},"injectables/IncomeStatementService.html":{},"classes/Order.html":{},"classes/Purchase.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"dependencies.html":{}}}],["date().tolocaledatestring",{"_index":996,"title":{},"body":{"classes/Order.html":{}}}],["date(x.date),'mm/dd/yyyy",{"_index":1291,"title":{},"body":{"injectables/SaleService.html":{}}}],["date.now()}${extname(file.originalname",{"_index":1468,"title":{},"body":{"controllers/UploadController.html":{}}}],["date:date",{"_index":702,"title":{},"body":{"classes/Expense.html":{}}}],["date:format(new",{"_index":1290,"title":{},"body":{"injectables/SaleService.html":{}}}],["date:order.date",{"_index":1073,"title":{},"body":{"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["date:x.date",{"_index":826,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["date:x.dateofpurchase",{"_index":834,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["date=list.date.split('').splice(0,2).join",{"_index":1321,"title":{},"body":{"injectables/SaleService.html":{}}}],["date=list.date.split('').splice(6,10).join",{"_index":1337,"title":{},"body":{"injectables/SaleService.html":{}}}],["dateofpurchase",{"_index":202,"title":{},"body":{"classes/CreatePurchaseDto.html":{},"injectables/IncomeStatementService.html":{},"classes/Purchase.html":{},"injectables/PurchaseService.html":{}}}],["dateofpurchase:date",{"_index":1159,"title":{},"body":{"classes/Purchase.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"controllers/UploadController.html":{}}}],["default",{"_index":244,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"injectables/IncomeStatementService.html":{},"classes/Order.html":{},"injectables/SaleService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":414,"title":{},"body":{"modules/CustomerModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["delete",{"_index":291,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["delete(':id",{"_index":276,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["deliver",{"_index":593,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliver._id",{"_index":597,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliver.driverid",{"_index":594,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliver.orderid",{"_index":598,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliveries",{"_index":592,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliveries.push(data",{"_index":599,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["delivery",{"_index":516,"title":{"classes/Delivery.html":{}},"body":{"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"coverage.html":{}}}],["delivery.controller",{"_index":568,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery.name",{"_index":570,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery.save",{"_index":613,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["delivery.service",{"_index":546,"title":{},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{}}}],["delivery/delivery.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["deliverycontroller",{"_index":526,"title":{"controllers/DeliveryController.html":{}},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"coverage.html":{}}}],["deliverylist",{"_index":590,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliverymodel",{"_index":578,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliverymodule",{"_index":36,"title":{"modules/DeliveryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryModule.html":{},"modules.html":{},"overview.html":{}}}],["deliveryschema",{"_index":524,"title":{},"body":{"classes/Delivery.html":{},"modules/DeliveryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deliveryservice",{"_index":545,"title":{"injectables/DeliveryService.html":{}},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":183,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{}}}],["description:product.description",{"_index":1139,"title":{},"body":{"injectables/ProductService.html":{}}}],["description:string",{"_index":197,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["destination",{"_index":1463,"title":{},"body":{"controllers/UploadController.html":{}}}],["development",{"_index":1578,"title":{},"body":{"index.html":{}}}],["device",{"_index":136,"title":{},"body":{"classes/CreateDriverDto.html":{},"classes/Driver.html":{}}}],["dir",{"_index":418,"title":{},"body":{"modules/CustomerModule.html":{}}}],["disable",{"_index":241,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Manager.html":{},"classes/Order.html":{}}}],["diskstorage",{"_index":1452,"title":{},"body":{"controllers/UploadController.html":{}}}],["display",{"_index":1437,"title":{},"body":{"controllers/UploadController.html":{}}}],["display(@res",{"_index":1458,"title":{},"body":{"controllers/UploadController.html":{}}}],["display(res",{"_index":1439,"title":{},"body":{"controllers/UploadController.html":{}}}],["document",{"_index":223,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"classes/Manager.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{}}}],["documentation",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["driver",{"_index":562,"title":{"classes/Driver.html":{}},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["driver.controller",{"_index":666,"title":{},"body":{"modules/DriverModule.html":{}}}],["driver.dto",{"_index":640,"title":{},"body":{"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/UpdateDriverDto.html":{}}}],["driver.dto.ts",{"_index":135,"title":{},"body":{"classes/CreateDriverDto.html":{},"classes/LoginDriveDto.html":{},"classes/UpdateDriverDto.html":{},"coverage.html":{}}}],["driver.dto.ts:12",{"_index":138,"title":{},"body":{"classes/CreateDriverDto.html":{}}}],["driver.dto.ts:15",{"_index":144,"title":{},"body":{"classes/CreateDriverDto.html":{}}}],["driver.dto.ts:18",{"_index":142,"title":{},"body":{"classes/CreateDriverDto.html":{}}}],["driver.dto.ts:21",{"_index":140,"title":{},"body":{"classes/CreateDriverDto.html":{}}}],["driver.dto.ts:24",{"_index":143,"title":{},"body":{"classes/CreateDriverDto.html":{}}}],["driver.dto.ts:6",{"_index":141,"title":{},"body":{"classes/CreateDriverDto.html":{},"classes/LoginDriveDto.html":{}}}],["driver.dto.ts:9",{"_index":139,"title":{},"body":{"classes/CreateDriverDto.html":{},"classes/LoginDriveDto.html":{}}}],["driver.name",{"_index":572,"title":{},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/DriverModule.html":{}}}],["driver.service",{"_index":642,"title":{},"body":{"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/LocalStrategy.html":{}}}],["driver/driver.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["driver/entities/drivers.entity",{"_index":564,"title":{},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{}}}],["drivercontroller",{"_index":625,"title":{"controllers/DriverController.html":{}},"body":{"controllers/DriverController.html":{},"modules/DriverModule.html":{},"coverage.html":{}}}],["driverid",{"_index":518,"title":{},"body":{"classes/Delivery.html":{},"injectables/DeliveryService.html":{}}}],["drivermodel",{"_index":575,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/DriverService.html":{}}}],["drivermodule",{"_index":37,"title":{"modules/DriverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DriverModule.html":{},"modules.html":{},"overview.html":{}}}],["drivername",{"_index":596,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["driverrschema",{"_index":563,"title":{},"body":{"modules/DeliveryModule.html":{},"classes/Driver.html":{},"modules/DriverModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["driverservice",{"_index":641,"title":{"injectables/DriverService.html":{}},"body":{"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["dto",{"_index":176,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ManagerController.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto.ts",{"_index":88,"title":{},"body":{"classes/Articles.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["dto.ts:11",{"_index":99,"title":{},"body":{"classes/Articles.html":{}}}],["dto.ts:15",{"_index":101,"title":{},"body":{"classes/Articles.html":{}}}],["dto.ts:5",{"_index":96,"title":{},"body":{"classes/Articles.html":{}}}],["dto.ts:8",{"_index":102,"title":{},"body":{"classes/Articles.html":{}}}],["dto/articles",{"_index":995,"title":{},"body":{"classes/Order.html":{}}}],["dto/articles.dto",{"_index":1158,"title":{},"body":{"classes/Purchase.html":{},"injectables/PurchaseService.html":{}}}],["dto/create",{"_index":305,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["dto/login",{"_index":308,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{}}}],["dto/update",{"_index":310,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["e",{"_index":507,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["e2e",{"_index":1589,"title":{},"body":{"index.html":{}}}],["each",{"_index":177,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{}}}],["efficient",{"_index":1565,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":423,"title":{},"body":{"modules/CustomerModule.html":{}}}],["email",{"_index":121,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"injectables/MailService.html":{}}}],["encodepassword",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encodepassword(rawpassword",{"_index":1558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enddate",{"_index":761,"title":{},"body":{"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["entities/customer.entity",{"_index":393,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["entities/delivery.entity",{"_index":569,"title":{},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{}}}],["entities/drivers.entity",{"_index":667,"title":{},"body":{"modules/DriverModule.html":{},"injectables/DriverService.html":{}}}],["entities/manager.entity",{"_index":964,"title":{},"body":{"modules/ManagerModule.html":{},"injectables/ManagerService.html":{}}}],["entities/order.entity",{"_index":1030,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["entity/expense.enitity",{"_index":731,"title":{},"body":{"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{}}}],["entity/product.entity",{"_index":1117,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["entity/purchase.enity",{"_index":1193,"title":{},"body":{"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{}}}],["entity/store.entity",{"_index":1396,"title":{},"body":{"modules/StoreModule.html":{},"injectables/StoreService.html":{}}}],["err",{"_index":498,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ManagerService.html":{}}}],["error",{"_index":602,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["errormsg:'wrong",{"_index":373,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["eslint",{"_index":240,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Manager.html":{},"classes/Order.html":{}}}],["exception",{"_index":851,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":464,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["executioncontext",{"_index":845,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exist",{"_index":478,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["exist!',httpstatus.unauthorized",{"_index":496,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["exist!s",{"_index":691,"title":{},"body":{"injectables/DriverService.html":{}}}],["expense",{"_index":696,"title":{"classes/Expense.html":{}},"body":{"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"coverage.html":{}}}],["expense.controller",{"_index":730,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["expense.dto",{"_index":714,"title":{},"body":{"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts",{"_index":147,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["expense.dto.ts:13",{"_index":150,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:5",{"_index":153,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:9",{"_index":152,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.name",{"_index":733,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["expense.remove",{"_index":755,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["expense.save",{"_index":753,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["expense.service",{"_index":716,"title":{},"body":{"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{}}}],["expense/entity/expense.enitity",{"_index":782,"title":{},"body":{"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{}}}],["expense/expense.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["expense:expenselist",{"_index":843,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["expensecontroller",{"_index":705,"title":{"controllers/ExpenseController.html":{}},"body":{"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"coverage.html":{}}}],["expenselist",{"_index":812,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["expenselist.map(x=>x.cost).reduce((x,y)=>x+y",{"_index":840,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["expensemodel",{"_index":740,"title":{},"body":{"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{}}}],["expensemodel:model",{"_index":747,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["expensemodule",{"_index":38,"title":{"modules/ExpenseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules.html":{},"overview.html":{}}}],["expenseschema",{"_index":703,"title":{},"body":{"classes/Expense.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expenseservice",{"_index":715,"title":{"injectables/ExpenseService.html":{}},"body":{"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"coverage.html":{},"overview.html":{}}}],["expenseservice:expenseservice",{"_index":719,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["expenslist",{"_index":748,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["expiresin",{"_index":401,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/DriverModule.html":{},"modules/ManagerModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/updateOrderDto.html":{}}}],["exports",{"_index":381,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{}}}],["exports:[expenseservice",{"_index":736,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["exports:[incomestatementservice",{"_index":792,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["exports:[productservice",{"_index":1120,"title":{},"body":{"modules/ProductModule.html":{}}}],["exports:[saleservice",{"_index":1279,"title":{},"body":{"modules/SaleModule.html":{}}}],["express",{"_index":297,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/ManagerController.html":{},"controllers/UploadController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1443,"title":{},"body":{"controllers/UploadController.html":{}}}],["extends",{"_index":222,"title":{},"body":{"classes/Customer.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/Manager.html":{},"injectables/ManagerLocalStrategy.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"classes/updateOrderDto.html":{}}}],["extname",{"_index":1454,"title":{},"body":{"controllers/UploadController.html":{}}}],["extractjwt",{"_index":864,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":867,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["false",{"_index":869,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["fastify",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"coverage.html":{},"classes/updateOrderDto.html":{}}}],["file.filename",{"_index":1482,"title":{},"body":{"injectables/UploadService.html":{}}}],["fileinterceptor",{"_index":1450,"title":{},"body":{"controllers/UploadController.html":{}}}],["filename",{"_index":1465,"title":{},"body":{"controllers/UploadController.html":{}}}],["findall",{"_index":253,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["findall(/*@query",{"_index":720,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["findall(/*@req",{"_index":1017,"title":{},"body":{"controllers/OrderController.html":{}}}],["findall(@query('startdate",{"_index":768,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["findall(startdate",{"_index":760,"title":{},"body":{"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{}}}],["findall(startdate:string",{"_index":803,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["findalldriverdelivery",{"_index":528,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["findalldriverdelivery(@param('id",{"_index":551,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["findalldriverdelivery(driverid",{"_index":581,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["findalldriverdelivery(id",{"_index":535,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["finddailysale",{"_index":1237,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["finddailysale(@query('startdate",{"_index":1259,"title":{},"body":{"controllers/SaleController.html":{}}}],["finddailysale(startdate",{"_index":1241,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["finddailysale(startdate:string",{"_index":1288,"title":{},"body":{"injectables/SaleService.html":{}}}],["finddeliveryorder",{"_index":529,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["findmonthsale",{"_index":1238,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["findmonthsale(@query('startdate",{"_index":1262,"title":{},"body":{"controllers/SaleController.html":{}}}],["findmonthsale(startdate",{"_index":1244,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["findmonthsale(startdate:string",{"_index":1293,"title":{},"body":{"injectables/SaleService.html":{}}}],["findnewone",{"_index":254,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findnewone(@param('id",{"_index":345,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findnewone(id",{"_index":268,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findone",{"_index":255,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["findone(@param('id",{"_index":315,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["findone(id",{"_index":272,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["findoneandupdate",{"_index":501,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["findorder",{"_index":1000,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findorder(@param('id",{"_index":1022,"title":{},"body":{"controllers/OrderController.html":{}}}],["findorder(id",{"_index":1008,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findproductsale",{"_index":1239,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["findproductsale(@query('startdate",{"_index":1268,"title":{},"body":{"controllers/SaleController.html":{}}}],["findproductsale(startdate",{"_index":1247,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["findproductsale(startdate:string",{"_index":1345,"title":{},"body":{"injectables/SaleService.html":{}}}],["findpuchase",{"_index":1163,"title":{},"body":{"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{}}}],["findpuchase(@param('id",{"_index":1181,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["findpuchase(id",{"_index":1168,"title":{},"body":{"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{}}}],["findyearlysale",{"_index":1240,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["findyearlysale(@query('startdate",{"_index":1265,"title":{},"body":{"controllers/SaleController.html":{}}}],["findyearlysale(startdate",{"_index":1251,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["findyearlysale(startdate:string",{"_index":1334,"title":{},"body":{"injectables/SaleService.html":{}}}],["fns",{"_index":1287,"title":{},"body":{"injectables/SaleService.html":{},"dependencies.html":{}}}],["following",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["format",{"_index":1286,"title":{},"body":{"injectables/SaleService.html":{}}}],["found",{"_index":467,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["framework",{"_index":1563,"title":{},"body":{"index.html":{}}}],["function",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1552,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["get(\"daily",{"_index":1258,"title":{},"body":{"controllers/SaleController.html":{}}}],["get(\"monthly",{"_index":1261,"title":{},"body":{"controllers/SaleController.html":{}}}],["get(\"product",{"_index":1267,"title":{},"body":{"controllers/SaleController.html":{}}}],["get(\"yearly",{"_index":1264,"title":{},"body":{"controllers/SaleController.html":{}}}],["get('/confirm/:id",{"_index":269,"title":{},"body":{"controllers/CustomerController.html":{}}}],["get('/details/:id",{"_index":1009,"title":{},"body":{"controllers/OrderController.html":{}}}],["get(':id",{"_index":273,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["get(':name",{"_index":1440,"title":{},"body":{"controllers/UploadController.html":{}}}],["get('customer/:userid",{"_index":1004,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('daily",{"_index":1242,"title":{},"body":{"controllers/SaleController.html":{}}}],["get('driver/:id",{"_index":536,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["get('list/:id",{"_index":1169,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["get('monthly",{"_index":1245,"title":{},"body":{"controllers/SaleController.html":{}}}],["get('order/shipping",{"_index":538,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["get('product",{"_index":1249,"title":{},"body":{"controllers/SaleController.html":{}}}],["get('yearly",{"_index":1252,"title":{},"body":{"controllers/SaleController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1559,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1596,"title":{},"body":{"index.html":{}}}],["gte:startdate",{"_index":807,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["handlebars",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["handlerequest(err",{"_index":850,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashpassword",{"_index":471,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["hello",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/MailService.html":{}}}],["here",{"_index":918,"title":{},"body":{"injectables/MailService.html":{},"index.html":{}}}],["host",{"_index":405,"title":{},"body":{"modules/CustomerModule.html":{}}}],["html",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["httpexception",{"_index":446,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["httpexception('email",{"_index":480,"title":{},"body":{"injectables/CustomerService.html":{}}}],["httpexception('id",{"_index":504,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["httpexception('product",{"_index":1147,"title":{},"body":{"injectables/ProductService.html":{}}}],["httpexception('store",{"_index":1414,"title":{},"body":{"injectables/StoreService.html":{}}}],["httpexception('username",{"_index":476,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["httponly",{"_index":952,"title":{},"body":{"controllers/ManagerController.html":{}}}],["https://nestjs.com",{"_index":1611,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":447,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["httpstatus.conflict",{"_index":479,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{},"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["httpstatus.not_found",{"_index":505,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["id",{"_index":271,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["id:string",{"_index":1179,"title":{},"body":{"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["id:string,@body",{"_index":1185,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["identifier",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["id}).exec",{"_index":1142,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["if(!customer",{"_index":503,"title":{},"body":{"injectables/CustomerService.html":{}}}],["if(!driver",{"_index":690,"title":{},"body":{"injectables/DriverService.html":{}}}],["if(!manager",{"_index":988,"title":{},"body":{"injectables/ManagerService.html":{}}}],["if(!product",{"_index":1143,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(!purchase",{"_index":1215,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["if(expenselist.length",{"_index":839,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["if(month.some(item",{"_index":1325,"title":{},"body":{"injectables/SaleService.html":{}}}],["if(order.length",{"_index":830,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["if(purchase.length",{"_index":836,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["if(x.date",{"_index":1341,"title":{},"body":{"injectables/SaleService.html":{}}}],["if(x.prodname",{"_index":1360,"title":{},"body":{"injectables/SaleService.html":{}}}],["if(y.date",{"_index":1329,"title":{},"body":{"injectables/SaleService.html":{}}}],["ignoreexpiration",{"_index":868,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["ignoretls",{"_index":409,"title":{},"body":{"modules/CustomerModule.html":{}}}],["image",{"_index":184,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateStoreDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"classes/Store.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["image:products.image",{"_index":1068,"title":{},"body":{"injectables/OrderService.html":{}}}],["image:string",{"_index":196,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/updateOrderDto.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/SaleModule.html":{}}}],["imports:[mongoosemodule.forfeature",{"_index":732,"title":{},"body":{"modules/ExpenseModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/StoreModule.html":{}}}],["income",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{}}}],["incomestatement",{"_index":759,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["incomestatementcontroller",{"_index":756,"title":{"controllers/IncomeStatementController.html":{}},"body":{"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"coverage.html":{}}}],["incomestatementmodule",{"_index":39,"title":{"modules/IncomeStatementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IncomeStatementModule.html":{},"modules.html":{},"overview.html":{}}}],["incomestatementservice",{"_index":764,"title":{"injectables/IncomeStatementService.html":{}},"body":{"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"coverage.html":{},"overview.html":{}}}],["incomestatementservice:incomestatementservice",{"_index":767,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/updateOrderDto.html":{}}}],["inject",{"_index":448,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ManagerService.html":{}}}],["inject('jwtsecret1service",{"_index":454,"title":{},"body":{"injectables/CustomerService.html":{}}}],["inject('jwtsecret2service",{"_index":980,"title":{},"body":{"injectables/ManagerService.html":{}}}],["inject(mailservice",{"_index":455,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectable",{"_index":79,"title":{"injectables/AppService.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{},"injectables/UploadService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["injectables",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["injectmodel",{"_index":450,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["injectmodel(customer.name",{"_index":452,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/OrderService.html":{}}}],["injectmodel(driver.name",{"_index":588,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/DriverService.html":{}}}],["injectmodel(expense.name",{"_index":746,"title":{},"body":{"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{}}}],["injectmodel(manager.name",{"_index":979,"title":{},"body":{"injectables/ManagerService.html":{}}}],["injectmodel(order.name",{"_index":589,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["injectmodel(product.name",{"_index":1044,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["injectmodel(purchase.name",{"_index":802,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/PurchaseService.html":{}}}],["injectmodel(store.name",{"_index":1131,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["installation",{"_index":1574,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1576,"title":{},"body":{"index.html":{}}}],["isdate",{"_index":154,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{}}}],["isexisting",{"_index":1146,"title":{},"body":{"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["ismatch",{"_index":493,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["isnumber",{"_index":98,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{}}}],["isnumber()@ispositive",{"_index":109,"title":{},"body":{"classes/Articles-1.html":{},"classes/CreateExpenseDto.html":{}}}],["isoptional",{"_index":103,"title":{},"body":{"classes/Articles.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{}}}],["isoptional()@isdate",{"_index":151,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{}}}],["isoptional()@isnumber",{"_index":208,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["isoptional()@isnumber()@ispositive",{"_index":190,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional()@isstring",{"_index":100,"title":{},"body":{"classes/Articles.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{}}}],["isoptional()@validatenested({each",{"_index":204,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["ispositive",{"_index":112,"title":{},"body":{"classes/Articles-1.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateProductDto.html":{}}}],["isstring",{"_index":95,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{}}}],["isstring()@isoptional",{"_index":218,"title":{},"body":{"classes/CreateStoreDto.html":{}}}],["isstring,isoptional",{"_index":193,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["item",{"_index":1339,"title":{},"body":{"injectables/SaleService.html":{}}}],["item.date",{"_index":1326,"title":{},"body":{"injectables/SaleService.html":{}}}],["join",{"_index":1481,"title":{},"body":{"injectables/UploadService.html":{},"index.html":{}}}],["jwt",{"_index":865,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":298,"title":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{}},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":387,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"modules/ManagerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":399,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"modules/ManagerModule.html":{}}}],["jwtfromrequest",{"_index":866,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["jwtmodule",{"_index":383,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"modules/ManagerModule.html":{}}}],["jwtmodule.register",{"_index":397,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"modules/ManagerModule.html":{}}}],["jwtsecret1module",{"_index":433,"title":{},"body":{"injectables/CustomerService.html":{}}}],["jwtsecret1service",{"_index":378,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["jwtsecret2",{"_index":969,"title":{},"body":{"injectables/ManagerService.html":{}}}],["jwtsecret2service",{"_index":962,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["jwtservice",{"_index":384,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/DriverService.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{}}}],["jwtstrategy",{"_index":389,"title":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}},"body":{"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["kamil",{"_index":1608,"title":{},"body":{"index.html":{}}}],["key",{"_index":1063,"title":{},"body":{"injectables/OrderService.html":{}}}],["license",{"_index":1614,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1593,"title":{},"body":{"index.html":{}}}],["limit",{"_index":456,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["limit(limit).skip(page",{"_index":460,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["link",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["list.total",{"_index":1323,"title":{},"body":{"injectables/SaleService.html":{}}}],["local",{"_index":368,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":883,"title":{"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"controllers/ManagerController.html":{},"coverage.html":{}}}],["localstrategy",{"_index":644,"title":{"injectables/LocalStrategy.html":{}},"body":{"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":285,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{}}}],["login.password",{"_index":335,"title":{},"body":{"controllers/CustomerController.html":{}}}],["login.tolocalelowercase",{"_index":492,"title":{},"body":{"injectables/CustomerService.html":{}}}],["login.username.tolocalelowercase",{"_index":692,"title":{},"body":{"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["logincustomerdto",{"_index":307,"title":{"classes/LoginCustomerDto.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/LoginCustomerDto.html":{},"coverage.html":{}}}],["logincustomerwithcredentials",{"_index":429,"title":{},"body":{"injectables/CustomerService.html":{}}}],["logincustomerwithcredentials(user",{"_index":439,"title":{},"body":{"injectables/CustomerService.html":{}}}],["logindrivedto",{"_index":639,"title":{"classes/LoginDriveDto.html":{}},"body":{"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/LoginDriveDto.html":{},"coverage.html":{}}}],["loginmanagerdto",{"_index":896,"title":{"classes/LoginManagerDto.html":{}},"body":{"classes/LoginManagerDto.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"coverage.html":{}}}],["loginwithcredentials",{"_index":670,"title":{},"body":{"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["loginwithcredentials(user",{"_index":677,"title":{},"body":{"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["lowercase",{"_index":482,"title":{},"body":{"injectables/CustomerService.html":{}}}],["lowercase.replace(/\\s/g",{"_index":483,"title":{},"body":{"injectables/CustomerService.html":{}}}],["lt:enddate",{"_index":808,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["mailer/service",{"_index":394,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["mailermodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["mailermodule.forroot",{"_index":403,"title":{},"body":{"modules/CustomerModule.html":{}}}],["mailerservice",{"_index":382,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/MailService.html":{}}}],["mailservice",{"_index":379,"title":{"injectables/MailService.html":{}},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":656,"title":{"classes/Manager.html":{}},"body":{"controllers/DriverController.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"coverage.html":{}}}],["manager.controller",{"_index":965,"title":{},"body":{"modules/ManagerModule.html":{}}}],["manager.dto",{"_index":938,"title":{},"body":{"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"classes/UpdateManagerDto.html":{}}}],["manager.dto.ts",{"_index":159,"title":{},"body":{"classes/CreateManagerDto.html":{},"classes/LoginManagerDto.html":{},"classes/UpdateManagerDto.html":{},"coverage.html":{}}}],["manager.dto.ts:11",{"_index":163,"title":{},"body":{"classes/CreateManagerDto.html":{}}}],["manager.dto.ts:14",{"_index":162,"title":{},"body":{"classes/CreateManagerDto.html":{}}}],["manager.dto.ts:5",{"_index":161,"title":{},"body":{"classes/CreateManagerDto.html":{}}}],["manager.dto.ts:6",{"_index":899,"title":{},"body":{"classes/LoginManagerDto.html":{}}}],["manager.dto.ts:8",{"_index":160,"title":{},"body":{"classes/CreateManagerDto.html":{}}}],["manager.dto.ts:9",{"_index":898,"title":{},"body":{"classes/LoginManagerDto.html":{}}}],["manager.id",{"_index":660,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["manager.name",{"_index":966,"title":{},"body":{"modules/ManagerModule.html":{}}}],["manager.service",{"_index":940,"title":{},"body":{"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{}}}],["manager.status",{"_index":661,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["manager/auth/guard/jwt",{"_index":643,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{}}}],["manager/auth/strategy/jwt.strategy",{"_index":560,"title":{},"body":{"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/StoreModule.html":{}}}],["manager/manager.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["managercontroller",{"_index":927,"title":{"controllers/ManagerController.html":{}},"body":{"controllers/ManagerController.html":{},"modules/ManagerModule.html":{},"coverage.html":{}}}],["managerlocalstrategy",{"_index":941,"title":{"injectables/ManagerLocalStrategy.html":{}},"body":{"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"coverage.html":{},"overview.html":{}}}],["managermodel",{"_index":971,"title":{},"body":{"injectables/ManagerService.html":{}}}],["managermodule",{"_index":40,"title":{"modules/ManagerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagerModule.html":{},"modules.html":{},"overview.html":{}}}],["managerschema",{"_index":925,"title":{},"body":{"classes/Manager.html":{},"modules/ManagerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managerservice",{"_index":939,"title":{"injectables/ManagerService.html":{}},"body":{"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/updateOrderDto.html":{},"miscellaneous/variables.html":{}}}],["mejaricruz123@gmail.com",{"_index":412,"title":{},"body":{"modules/CustomerModule.html":{}}}],["merge",{"_index":1055,"title":{},"body":{"injectables/OrderService.html":{}}}],["message",{"_index":321,"title":{},"body":{"controllers/CustomerController.html":{}}}],["metadata",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["miscellaneous",{"_index":1551,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1592,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1582,"title":{},"body":{"index.html":{}}}],["model",{"_index":432,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["mongoose",{"_index":239,"title":{},"body":{"classes/Customer.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"classes/Manager.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"injectables/StoreService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{}}}],["mongoosemodule.forfeature",{"_index":395,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/SaleModule.html":{}}}],["mongoosemodule.forroot(process.env.develop",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["month.filter(y",{"_index":1328,"title":{},"body":{"injectables/SaleService.html":{}}}],["month=sale.map(list",{"_index":1320,"title":{},"body":{"injectables/SaleService.html":{}}}],["monthformat",{"_index":1295,"title":{},"body":{"injectables/SaleService.html":{}}}],["monthformat.map(x",{"_index":1324,"title":{},"body":{"injectables/SaleService.html":{}}}],["monthly",{"_index":1333,"title":{},"body":{"injectables/SaleService.html":{}}}],["more",{"_index":1604,"title":{},"body":{"index.html":{}}}],["multer",{"_index":1453,"title":{},"body":{"controllers/UploadController.html":{}}}],["myśliwiec",{"_index":1609,"title":{},"body":{"index.html":{}}}],["name",{"_index":122,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{},"miscellaneous/functions.html":{}}}],["name:'april",{"_index":1303,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'august",{"_index":1311,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'december",{"_index":1319,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'february",{"_index":1299,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'january",{"_index":1297,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'july",{"_index":1309,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'june",{"_index":1307,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'march",{"_index":1301,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'may",{"_index":1305,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'november",{"_index":1317,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'october",{"_index":1315,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:'september",{"_index":1313,"title":{},"body":{"injectables/SaleService.html":{}}}],["name:customer.name",{"_index":1075,"title":{},"body":{"injectables/OrderService.html":{}}}],["name:expense.name",{"_index":787,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["name:product.name",{"_index":785,"title":{},"body":{"modules/IncomeStatementModule.html":{},"modules/SaleModule.html":{}}}],["name:product[0].name,image:product[0].image,status:arr[x].status",{"_index":1057,"title":{},"body":{"injectables/OrderService.html":{}}}],["name:purchase.name",{"_index":1195,"title":{},"body":{"modules/PurchaseModule.html":{}}}],["name:store.name",{"_index":1398,"title":{},"body":{"modules/StoreModule.html":{}}}],["name:string",{"_index":155,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/CreateProductDto.html":{},"classes/Expense.html":{},"classes/Product.html":{},"controllers/ProductController.html":{}}}],["nest",{"_index":1570,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1613,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":385,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1419,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"dependencies.html":{},"classes/updateOrderDto.html":{}}}],["nestjs/mongoose",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/Customer.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"classes/Manager.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":352,"title":{},"body":{"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1451,"title":{},"body":{"controllers/UploadController.html":{},"dependencies.html":{}}}],["new",{"_index":421,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"injectables/StoreService.html":{},"coverage.html":{}}}],["newobj",{"_index":1069,"title":{},"body":{"injectables/OrderService.html":{}}}],["newone",{"_index":430,"title":{},"body":{"injectables/CustomerService.html":{}}}],["newone(id",{"_index":441,"title":{},"body":{"injectables/CustomerService.html":{}}}],["no:'01",{"_index":1296,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'02",{"_index":1298,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'03",{"_index":1300,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'04",{"_index":1302,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'05",{"_index":1304,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'06",{"_index":1306,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'07",{"_index":1308,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'08",{"_index":1310,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'09",{"_index":1312,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'10",{"_index":1314,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'11",{"_index":1316,"title":{},"body":{"injectables/SaleService.html":{}}}],["no:'12",{"_index":1318,"title":{},"body":{"injectables/SaleService.html":{}}}],["node.js",{"_index":1562,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["noreply@nestjs.com",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["notfoundexception",{"_index":449,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["notfoundexception(`customer",{"_index":466,"title":{},"body":{"injectables/CustomerService.html":{}}}],["notfoundexception(`delivery",{"_index":601,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["notfoundexception(`driver",{"_index":685,"title":{},"body":{"injectables/DriverService.html":{}}}],["notfoundexception(`expense",{"_index":751,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["notfoundexception(`manager",{"_index":983,"title":{},"body":{"injectables/ManagerService.html":{}}}],["notfoundexception(`no",{"_index":771,"title":{},"body":{"controllers/IncomeStatementController.html":{},"injectables/SaleService.html":{}}}],["notfoundexception(`order",{"_index":1062,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception(`product",{"_index":1144,"title":{},"body":{"injectables/ProductService.html":{}}}],["notfoundexception(`purchase",{"_index":1216,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["notfoundexception(`store",{"_index":1412,"title":{},"body":{"injectables/StoreService.html":{}}}],["npm",{"_index":1575,"title":{},"body":{"index.html":{}}}],["number",{"_index":97,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/Expense.html":{},"classes/Product.html":{},"classes/Purchase.html":{}}}],["object",{"_index":531,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(arr[x].articles[0],{name:product[0].name,image:product[0].image,status:arr[x].status",{"_index":1060,"title":{},"body":{"injectables/OrderService.html":{}}}],["object.assign(arr[x].articles[y",{"_index":1056,"title":{},"body":{"injectables/OrderService.html":{}}}],["object.assign(order.articles[key],data",{"_index":1070,"title":{},"body":{"injectables/OrderService.html":{}}}],["offset",{"_index":457,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["open",{"_index":1594,"title":{},"body":{"index.html":{}}}],["optional",{"_index":265,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":424,"title":{},"body":{"modules/CustomerModule.html":{}}}],["order",{"_index":565,"title":{"classes/Order.html":{}},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"coverage.html":{}}}],["order.articles",{"_index":814,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["order.articles[key].productid",{"_index":1064,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.controller",{"_index":1031,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.customerid",{"_index":604,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/OrderService.html":{}}}],["order.date",{"_index":606,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["order.dto",{"_index":717,"title":{},"body":{"controllers/ExpenseController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/updateOrderDto.html":{}}}],["order.dto.ts",{"_index":166,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{},"classes/updateOrderDto.html":{}}}],["order.dto.ts:12",{"_index":170,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:16",{"_index":173,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:20",{"_index":172,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:8",{"_index":171,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.map(x=>x.total).reduce((x,y)=>x+y",{"_index":831,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["order.name",{"_index":571,"title":{},"body":{"modules/DeliveryModule.html":{},"modules/IncomeStatementModule.html":{},"modules/OrderModule.html":{},"modules/SaleModule.html":{}}}],["order.remove",{"_index":1080,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.save",{"_index":1078,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.service",{"_index":1015,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/entities/order.entity",{"_index":567,"title":{},"body":{"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{}}}],["order/order.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["order:order",{"_index":842,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["orderarticles",{"_index":1347,"title":{},"body":{"injectables/SaleService.html":{}}}],["orderarticles.filter(x",{"_index":1359,"title":{},"body":{"injectables/SaleService.html":{}}}],["orderarticles.push",{"_index":1350,"title":{},"body":{"injectables/SaleService.html":{}}}],["ordercontroller",{"_index":998,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderid",{"_index":519,"title":{},"body":{"classes/Delivery.html":{},"injectables/DeliveryService.html":{}}}],["orderlist",{"_index":805,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["orderlist.map(x",{"_index":822,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["orderlist.push(merge",{"_index":1058,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordermodel",{"_index":576,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["ordermodule",{"_index":41,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderschema",{"_index":566,"title":{},"body":{"modules/DeliveryModule.html":{},"modules/IncomeStatementModule.html":{},"classes/Order.html":{},"modules/OrderModule.html":{},"modules/SaleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderservice",{"_index":1014,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{},"overview.html":{}}}],["overview",{"_index":1618,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1513,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":458,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["pagination",{"_index":313,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["paginationdto",{"_index":287,"title":{"classes/PaginationDto.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["param",{"_index":292,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{},"controllers/UploadController.html":{}}}],["parameters",{"_index":264,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1418,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"classes/updateOrderDto.html":{}}}],["partialtype(createcustomerdto",{"_index":1421,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createdriverdto",{"_index":1423,"title":{},"body":{"classes/UpdateDriverDto.html":{}}}],["partialtype(createexpensedto",{"_index":1425,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["partialtype(createmanagerdto",{"_index":1427,"title":{},"body":{"classes/UpdateManagerDto.html":{}}}],["partialtype(createproductdto",{"_index":1429,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createpurchasedto",{"_index":1431,"title":{},"body":{"classes/UpdatePurchaseDto.html":{}}}],["partialtype(createstoredto",{"_index":1433,"title":{},"body":{"classes/UpdateStoreDto.html":{}}}],["pass",{"_index":362,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["passport",{"_index":367,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":386,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"modules/ManagerModule.html":{}}}],["passportstrategy",{"_index":365,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":370,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["passthrough",{"_index":949,"title":{},"body":{"controllers/ManagerController.html":{}}}],["password",{"_index":123,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateManagerDto.html":{},"classes/Customer.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/Driver.html":{},"injectables/DriverService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{}}}],["patch",{"_index":293,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["patch(':id",{"_index":280,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["path",{"_index":1455,"title":{},"body":{"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["payload",{"_index":484,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/ManagerService.html":{}}}],["payload.sub",{"_index":872,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["payload.username",{"_index":873,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["pending",{"_index":234,"title":{},"body":{"classes/Customer.html":{},"controllers/CustomerController.html":{},"classes/Order.html":{}}}],["photo",{"_index":137,"title":{},"body":{"classes/CreateDriverDto.html":{},"classes/Driver.html":{}}}],["please",{"_index":325,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/MailService.html":{},"index.html":{}}}],["port",{"_index":407,"title":{},"body":{"modules/CustomerModule.html":{}}}],["post",{"_index":262,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{},"controllers/UploadController.html":{}}}],["post(\"add",{"_index":648,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ExpenseController.html":{}}}],["post('/login",{"_index":332,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["post('add",{"_index":629,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["post()@useinterceptors(undefined",{"_index":1444,"title":{},"body":{"controllers/UploadController.html":{}}}],["prefix",{"_index":250,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{},"controllers/UploadController.html":{}}}],["prettier/prettier",{"_index":242,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Manager.html":{},"classes/Order.html":{}}}],["preview",{"_index":416,"title":{},"body":{"modules/CustomerModule.html":{}}}],["private",{"_index":453,"title":{},"body":{"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{}}}],["process.cwd",{"_index":419,"title":{},"body":{"modules/CustomerModule.html":{}}}],["process.env.secret_key",{"_index":486,"title":{},"body":{"injectables/CustomerService.html":{}}}],["prodid",{"_index":816,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["prodname",{"_index":1352,"title":{},"body":{"injectables/SaleService.html":{}}}],["product",{"_index":509,"title":{"classes/Product.html":{}},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"modules/IncomeStatementModule.html":{},"injectables/ManagerService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product,productschema",{"_index":1192,"title":{},"body":{"modules/PurchaseModule.html":{},"modules/SaleModule.html":{}}}],["product._id",{"_index":1135,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.category",{"_index":1138,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["product.controller",{"_index":1118,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":1099,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":181,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":186,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:15",{"_index":188,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:19",{"_index":187,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:24",{"_index":191,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":189,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:8",{"_index":192,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.image",{"_index":1137,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["product.name",{"_index":1032,"title":{},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["product.push(newobj",{"_index":1071,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.remove",{"_index":511,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["product.save",{"_index":1148,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.sellingprice",{"_index":1136,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":1101,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.storeid",{"_index":1133,"title":{},"body":{"injectables/ProductService.html":{}}}],["product/entity/product.entity",{"_index":784,"title":{},"body":{"modules/IncomeStatementModule.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{}}}],["product/product.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":1090,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":90,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["productid:articles.productid",{"_index":1351,"title":{},"body":{"injectables/SaleService.html":{}}}],["productid:string",{"_index":113,"title":{},"body":{"classes/Articles-1.html":{}}}],["production",{"_index":1584,"title":{},"body":{"index.html":{}}}],["productlist",{"_index":815,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/ProductService.html":{}}}],["productlist.productid",{"_index":817,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["productmodel",{"_index":1035,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["productmodule",{"_index":42,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productnamelist",{"_index":1348,"title":{},"body":{"injectables/SaleService.html":{}}}],["productnamelist.add(product.name",{"_index":1349,"title":{},"body":{"injectables/SaleService.html":{}}}],["productorder",{"_index":1346,"title":{},"body":{"injectables/SaleService.html":{}}}],["productorder.push",{"_index":1357,"title":{},"body":{"injectables/SaleService.html":{}}}],["products",{"_index":1065,"title":{},"body":{"injectables/OrderService.html":{}}}],["products.name",{"_index":1067,"title":{},"body":{"injectables/OrderService.html":{}}}],["productschema",{"_index":783,"title":{},"body":{"modules/IncomeStatementModule.html":{},"modules/OrderModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":1100,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["productservice:productservice",{"_index":1103,"title":{},"body":{"controllers/ProductController.html":{}}}],["progressive",{"_index":1561,"title":{},"body":{"index.html":{}}}],["project",{"_index":1595,"title":{},"body":{"index.html":{}}}],["promise",{"_index":364,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{}}}],["prop",{"_index":225,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"classes/Manager.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{}}}],["prop({default",{"_index":233,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Expense.html":{},"classes/Order.html":{},"classes/Purchase.html":{},"classes/Store.html":{}}}],["prop({unique",{"_index":229,"title":{},"body":{"classes/Customer.html":{}}}],["properties",{"_index":89,"title":{"properties.html":{}},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{},"properties.html":{}}}],["provide",{"_index":426,"title":{},"body":{"modules/CustomerModule.html":{},"modules/ManagerModule.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{}}}],["providers:[expenseservice",{"_index":735,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["providers:[incomestatementservice",{"_index":791,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["providers:[saleservice",{"_index":1277,"title":{},"body":{"modules/SaleModule.html":{}}}],["public",{"_index":901,"title":{},"body":{"injectables/MailService.html":{}}}],["public/uploads",{"_index":1464,"title":{},"body":{"controllers/UploadController.html":{}}}],["public/uploads/${image.name",{"_index":1485,"title":{},"body":{"injectables/UploadService.html":{}}}],["pugadapter",{"_index":422,"title":{},"body":{"modules/CustomerModule.html":{}}}],["purchase",{"_index":779,"title":{"classes/Purchase.html":{}},"body":{"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"modules/SaleModule.html":{},"coverage.html":{}}}],["purchase._id",{"_index":1230,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchase.articles",{"_index":1223,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchase.controller",{"_index":1194,"title":{},"body":{"modules/PurchaseModule.html":{}}}],["purchase.dateofpurchase",{"_index":1212,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchase.dto",{"_index":1173,"title":{},"body":{"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"classes/UpdatePurchaseDto.html":{}}}],["purchase.dto.ts",{"_index":201,"title":{},"body":{"classes/CreatePurchaseDto.html":{},"classes/UpdatePurchaseDto.html":{},"coverage.html":{}}}],["purchase.dto.ts:13",{"_index":205,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["purchase.dto.ts:17",{"_index":207,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["purchase.dto.ts:20",{"_index":209,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["purchase.dto.ts:8",{"_index":206,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["purchase.map(x=>x.total).reduce((x,y)=>x+y",{"_index":837,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["purchase.name",{"_index":789,"title":{},"body":{"modules/IncomeStatementModule.html":{},"modules/OrderModule.html":{},"modules/SaleModule.html":{}}}],["purchase.remove",{"_index":1222,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchase.service",{"_index":1175,"title":{},"body":{"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{}}}],["purchase.storeid",{"_index":1209,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchase/dto/articles.dto",{"_index":801,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["purchase/entity/purchase.enity",{"_index":781,"title":{},"body":{"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/SaleModule.html":{}}}],["purchase/purchase.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["purchase:purchase",{"_index":841,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["purchasearticles",{"_index":1208,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchasearticles.push(article",{"_index":1228,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchasecontroller",{"_index":1161,"title":{"controllers/PurchaseController.html":{}},"body":{"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"coverage.html":{}}}],["purchaselist",{"_index":810,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/PurchaseService.html":{}}}],["purchaselist.map(x",{"_index":832,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["purchasemodel",{"_index":796,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/PurchaseService.html":{}}}],["purchasemodule",{"_index":43,"title":{"modules/PurchaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PurchaseModule.html":{},"modules.html":{},"overview.html":{}}}],["purchases",{"_index":1229,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["purchaseschema",{"_index":780,"title":{},"body":{"modules/IncomeStatementModule.html":{},"modules/OrderModule.html":{},"classes/Purchase.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["purchaseservice",{"_index":1174,"title":{"injectables/PurchaseService.html":{}},"body":{"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"coverage.html":{},"overview.html":{}}}],["purchaseservice:purchaseservice",{"_index":1177,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["q",{"_index":1248,"title":{},"body":{"controllers/SaleController.html":{}}}],["q:any",{"_index":1270,"title":{},"body":{"controllers/SaleController.html":{}}}],["quantity",{"_index":91,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"injectables/PurchaseService.html":{}}}],["quantity:articles.quantity",{"_index":1353,"title":{},"body":{"injectables/SaleService.html":{}}}],["quantity:number",{"_index":115,"title":{},"body":{"classes/Articles-1.html":{}}}],["query",{"_index":294,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/IncomeStatementController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/SaleController.html":{}}}],["rawpassword",{"_index":1557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["read",{"_index":1603,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{}}}],["record",{"_index":773,"title":{},"body":{"controllers/IncomeStatementController.html":{},"injectables/SaleService.html":{}}}],["reflect",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":323,"title":{},"body":{"controllers/CustomerController.html":{}}}],["remark",{"_index":92,"title":{},"body":{"classes/Articles.html":{}}}],["remove",{"_index":256,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["remove(@param('id",{"_index":329,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["remove(id",{"_index":275,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["reply",{"_index":415,"title":{},"body":{"modules/CustomerModule.html":{}}}],["repository",{"_index":1573,"title":{},"body":{"index.html":{}}}],["req",{"_index":290,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/OrderController.html":{},"controllers/UploadController.html":{}}}],["req.user.data",{"_index":657,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["request",{"_index":296,"title":{},"body":{"controllers/CustomerController.html":{}}}],["res",{"_index":260,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/UploadController.html":{}}}],["res,@param",{"_index":1459,"title":{},"body":{"controllers/UploadController.html":{}}}],["res.send",{"_index":320,"title":{},"body":{"controllers/CustomerController.html":{}}}],["res.status(401).send",{"_index":340,"title":{},"body":{"controllers/CustomerController.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{},"overview.html":{}}}],["response",{"_index":261,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/ManagerController.html":{},"injectables/UploadService.html":{}}}],["response.cookie('jwt",{"_index":953,"title":{},"body":{"controllers/ManagerController.html":{}}}],["response.sendfile(join(process.cwd",{"_index":1484,"title":{},"body":{"injectables/UploadService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/updateOrderDto.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["rimraf",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1579,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["sale",{"_index":1236,"title":{},"body":{"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["sale.controller",{"_index":1276,"title":{},"body":{"modules/SaleModule.html":{}}}],["sale.service",{"_index":1255,"title":{},"body":{"controllers/SaleController.html":{},"modules/SaleModule.html":{}}}],["sale/sale.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["salecontroller",{"_index":1234,"title":{"controllers/SaleController.html":{}},"body":{"controllers/SaleController.html":{},"modules/SaleModule.html":{},"coverage.html":{}}}],["salemodule",{"_index":44,"title":{"modules/SaleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SaleModule.html":{},"modules.html":{},"overview.html":{}}}],["saleservice",{"_index":1254,"title":{"injectables/SaleService.html":{}},"body":{"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"coverage.html":{},"overview.html":{}}}],["saleservice:saleservice",{"_index":1257,"title":{},"body":{"controllers/SaleController.html":{}}}],["salt",{"_index":469,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["scalable",{"_index":1566,"title":{},"body":{"index.html":{}}}],["schema",{"_index":237,"title":{},"body":{"classes/Customer.html":{},"modules/CustomerModule.html":{},"classes/Delivery.html":{},"modules/DeliveryModule.html":{},"classes/Driver.html":{},"modules/DriverModule.html":{},"classes/Expense.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"classes/Manager.html":{},"modules/ManagerModule.html":{},"classes/Order.html":{},"modules/OrderModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/Purchase.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"classes/Store.html":{}}}],["schema:expenseschema",{"_index":788,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["schema:productschema",{"_index":786,"title":{},"body":{"modules/IncomeStatementModule.html":{},"modules/SaleModule.html":{}}}],["schema:purchaseschema",{"_index":1196,"title":{},"body":{"modules/PurchaseModule.html":{}}}],["schema:storeschema",{"_index":1399,"title":{},"body":{"modules/StoreModule.html":{}}}],["schemafactory",{"_index":238,"title":{},"body":{"classes/Customer.html":{},"classes/Delivery.html":{},"classes/Driver.html":{},"classes/Expense.html":{},"classes/Manager.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Purchase.html":{},"classes/Store.html":{}}}],["schemafactory.createforclass(customer",{"_index":247,"title":{},"body":{"classes/Customer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(delivery",{"_index":525,"title":{},"body":{"classes/Delivery.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(driver",{"_index":624,"title":{},"body":{"classes/Driver.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(expense",{"_index":704,"title":{},"body":{"classes/Expense.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(manager",{"_index":926,"title":{},"body":{"classes/Manager.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(order",{"_index":997,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":1089,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(purchase",{"_index":1160,"title":{},"body":{"classes/Purchase.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(store",{"_index":1368,"title":{},"body":{"classes/Store.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":398,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/DriverModule.html":{},"modules/ManagerModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":870,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["secure",{"_index":410,"title":{},"body":{"modules/CustomerModule.html":{},"controllers/ManagerController.html":{}}}],["sellingprice",{"_index":93,"title":{},"body":{"classes/Articles.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{}}}],["sellingprice:articles.sellingprice",{"_index":1354,"title":{},"body":{"injectables/SaleService.html":{}}}],["sellingprice:number",{"_index":198,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["sendconfirmationemail",{"_index":902,"title":{},"body":{"injectables/MailService.html":{}}}],["sendconfirmationemail(name",{"_index":905,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":1567,"title":{},"body":{"index.html":{}}}],["set",{"_index":502,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["shipping",{"_index":522,"title":{},"body":{"classes/Delivery.html":{}}}],["show",{"_index":1476,"title":{},"body":{"injectables/UploadService.html":{}}}],["show(response",{"_index":1477,"title":{},"body":{"injectables/UploadService.html":{}}}],["show(response,image",{"_index":1483,"title":{},"body":{"injectables/UploadService.html":{}}}],["side",{"_index":1568,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":400,"title":{},"body":{"modules/CustomerModule.html":{},"modules/DriverModule.html":{},"modules/ManagerModule.html":{}}}],["smtp.gmail.com",{"_index":406,"title":{},"body":{"modules/CustomerModule.html":{}}}],["sort({date:1",{"_index":1289,"title":{},"body":{"injectables/SaleService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalAuthGuard.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"modules/DriverModule.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthGuard-1.html":{},"injectables/JwtAuthGuard-2.html":{},"injectables/JwtAuthGuard-3.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalAuthGuard-1.html":{},"injectables/LocalAuthGuard-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"modules/ManagerModule.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PaginationDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"modules/SaleModule.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"index.html":{},"classes/updateOrderDto.html":{}}}],["sponsors",{"_index":1598,"title":{},"body":{"index.html":{}}}],["src/.../brcrypt.ts",{"_index":1554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customer.entity.ts",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delivery.entity.ts",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drivers.entity.ts",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../expense.enitity.ts",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../manager.entity.ts",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order.entity.ts",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.entity.ts",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../purchase.enity.ts",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../store.entity.ts",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth0/constants.ts",{"_index":1491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dto/pagination.dto.ts",{"_index":1081,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/customer/auth/guard/jwt",{"_index":844,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/customer/auth/guard/local",{"_index":348,"title":{},"body":{"injectables/CustomerLocalAuthGuard.html":{},"coverage.html":{}}}],["src/customer/auth/strategy/jwt.strategy.ts",{"_index":860,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{}}}],["src/customer/auth/strategy/jwt.strategy.ts:14",{"_index":863,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/customer/auth/strategy/jwt.strategy.ts:5",{"_index":861,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/customer/auth/strategy/local.strategy.ts",{"_index":355,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"coverage.html":{}}}],["src/customer/auth/strategy/local.strategy.ts:12",{"_index":363,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{}}}],["src/customer/auth/strategy/local.strategy.ts:8",{"_index":359,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{}}}],["src/customer/customer.controller.ts",{"_index":249,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["src/customer/customer.controller.ts:28",{"_index":267,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:33",{"_index":274,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:38",{"_index":263,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:47",{"_index":281,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:52",{"_index":277,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:57",{"_index":284,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:70",{"_index":270,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.module.ts",{"_index":380,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":428,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:100",{"_index":442,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:105",{"_index":443,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:110",{"_index":440,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:13",{"_index":434,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:19",{"_index":437,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:25",{"_index":438,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:38",{"_index":436,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:72",{"_index":445,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:87",{"_index":444,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/dto/create",{"_index":117,"title":{},"body":{"classes/CreateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/dto/login",{"_index":369,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"coverage.html":{}}}],["src/customer/dto/update",{"_index":1417,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/entities/customer.entity.ts",{"_index":221,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/customer/entities/customer.entity.ts:11",{"_index":226,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:14",{"_index":228,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:17",{"_index":236,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:20",{"_index":232,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:23",{"_index":230,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:26",{"_index":235,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:29",{"_index":227,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:8",{"_index":231,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/mailer/service.ts",{"_index":900,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/customer/mailer/service.ts:5",{"_index":904,"title":{},"body":{"injectables/MailService.html":{}}}],["src/customer/mailer/service.ts:8",{"_index":906,"title":{},"body":{"injectables/MailService.html":{}}}],["src/customer/utils/brcrypt.ts",{"_index":1498,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/delivery/auth/guard/jwt",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard-1.html":{},"coverage.html":{}}}],["src/delivery/auth/guard/local",{"_index":884,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/delivery/auth/strategy/jwt.strategy.ts",{"_index":874,"title":{},"body":{"classes/JwtStrategy-1.html":{},"coverage.html":{}}}],["src/delivery/auth/strategy/jwt.strategy.ts:14",{"_index":876,"title":{},"body":{"classes/JwtStrategy-1.html":{}}}],["src/delivery/auth/strategy/jwt.strategy.ts:5",{"_index":875,"title":{},"body":{"classes/JwtStrategy-1.html":{}}}],["src/delivery/delivery.controller.ts",{"_index":527,"title":{},"body":{"controllers/DeliveryController.html":{},"coverage.html":{}}}],["src/delivery/delivery.controller.ts:21",{"_index":534,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:26",{"_index":540,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:31",{"_index":539,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:36",{"_index":537,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:41",{"_index":532,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:46",{"_index":543,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:51",{"_index":541,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.module.ts",{"_index":559,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["src/delivery/delivery.service.ts",{"_index":573,"title":{},"body":{"injectables/DeliveryService.html":{},"coverage.html":{}}}],["src/delivery/delivery.service.ts:10",{"_index":577,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:16",{"_index":580,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:36",{"_index":584,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:49",{"_index":583,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:78",{"_index":579,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:83",{"_index":586,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:89",{"_index":585,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:94",{"_index":582,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/entities/delivery.entity.ts",{"_index":517,"title":{},"body":{"classes/Delivery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/delivery/entities/delivery.entity.ts:11",{"_index":521,"title":{},"body":{"classes/Delivery.html":{}}}],["src/delivery/entities/delivery.entity.ts:14",{"_index":523,"title":{},"body":{"classes/Delivery.html":{}}}],["src/delivery/entities/delivery.entity.ts:8",{"_index":520,"title":{},"body":{"classes/Delivery.html":{}}}],["src/driver/auth/guard/jwt",{"_index":857,"title":{},"body":{"injectables/JwtAuthGuard-2.html":{},"coverage.html":{}}}],["src/driver/auth/guard/local",{"_index":885,"title":{},"body":{"injectables/LocalAuthGuard-1.html":{},"coverage.html":{}}}],["src/driver/auth/strategy/jwt.strategy.ts",{"_index":877,"title":{},"body":{"classes/JwtStrategy-2.html":{},"coverage.html":{}}}],["src/driver/auth/strategy/jwt.strategy.ts:14",{"_index":879,"title":{},"body":{"classes/JwtStrategy-2.html":{}}}],["src/driver/auth/strategy/jwt.strategy.ts:5",{"_index":878,"title":{},"body":{"classes/JwtStrategy-2.html":{}}}],["src/driver/auth/strategy/local.strategy.ts",{"_index":887,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/driver/auth/strategy/local.strategy.ts:11",{"_index":890,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/driver/auth/strategy/local.strategy.ts:7",{"_index":889,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/driver/driver.controller.ts",{"_index":626,"title":{},"body":{"controllers/DriverController.html":{},"coverage.html":{}}}],["src/driver/driver.controller.ts:24",{"_index":631,"title":{},"body":{"controllers/DriverController.html":{}}}],["src/driver/driver.controller.ts:29",{"_index":632,"title":{},"body":{"controllers/DriverController.html":{}}}],["src/driver/driver.controller.ts:34",{"_index":630,"title":{},"body":{"controllers/DriverController.html":{}}}],["src/driver/driver.controller.ts:39",{"_index":635,"title":{},"body":{"controllers/DriverController.html":{}}}],["src/driver/driver.controller.ts:44",{"_index":633,"title":{},"body":{"controllers/DriverController.html":{}}}],["src/driver/driver.controller.ts:49",{"_index":638,"title":{},"body":{"controllers/DriverController.html":{}}}],["src/driver/driver.module.ts",{"_index":665,"title":{},"body":{"modules/DriverModule.html":{}}}],["src/driver/driver.service.ts",{"_index":669,"title":{},"body":{"injectables/DriverService.html":{},"coverage.html":{}}}],["src/driver/driver.service.ts:13",{"_index":673,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:18",{"_index":675,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:24",{"_index":676,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:39",{"_index":674,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:56",{"_index":680,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:68",{"_index":682,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:82",{"_index":679,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/driver.service.ts:87",{"_index":678,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/driver/dto/create",{"_index":134,"title":{},"body":{"classes/CreateDriverDto.html":{},"coverage.html":{}}}],["src/driver/dto/login",{"_index":895,"title":{},"body":{"classes/LoginDriveDto.html":{},"coverage.html":{}}}],["src/driver/dto/update",{"_index":1422,"title":{},"body":{"classes/UpdateDriverDto.html":{},"coverage.html":{}}}],["src/driver/entities/drivers.entity.ts",{"_index":616,"title":{},"body":{"classes/Driver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/driver/entities/drivers.entity.ts:11",{"_index":618,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/entities/drivers.entity.ts:14",{"_index":617,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/entities/drivers.entity.ts:17",{"_index":623,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/entities/drivers.entity.ts:20",{"_index":621,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/entities/drivers.entity.ts:23",{"_index":619,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/entities/drivers.entity.ts:26",{"_index":622,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/entities/drivers.entity.ts:8",{"_index":620,"title":{},"body":{"classes/Driver.html":{}}}],["src/driver/utils/brcrypt.ts",{"_index":1504,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/expense/dto/create",{"_index":146,"title":{},"body":{"classes/CreateExpenseDto.html":{},"coverage.html":{}}}],["src/expense/dto/update",{"_index":1424,"title":{},"body":{"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["src/expense/entity/expense.enitity.ts",{"_index":697,"title":{},"body":{"classes/Expense.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/expense/entity/expense.enitity.ts:12",{"_index":698,"title":{},"body":{"classes/Expense.html":{}}}],["src/expense/entity/expense.enitity.ts:6",{"_index":700,"title":{},"body":{"classes/Expense.html":{}}}],["src/expense/entity/expense.enitity.ts:9",{"_index":701,"title":{},"body":{"classes/Expense.html":{}}}],["src/expense/expense.controller.ts",{"_index":706,"title":{},"body":{"controllers/ExpenseController.html":{},"coverage.html":{}}}],["src/expense/expense.controller.ts:14",{"_index":709,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/expense/expense.controller.ts:19",{"_index":710,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/expense/expense.controller.ts:25",{"_index":708,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/expense/expense.controller.ts:30",{"_index":713,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/expense/expense.controller.ts:35",{"_index":711,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/expense/expense.module.ts",{"_index":729,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["src/expense/expense.service.ts",{"_index":737,"title":{},"body":{"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/expense/expense.service.ts:14",{"_index":742,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/expense/expense.service.ts:18",{"_index":743,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/expense/expense.service.ts:31",{"_index":741,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/expense/expense.service.ts:36",{"_index":745,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/expense/expense.service.ts:43",{"_index":744,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/expense/expense.service.ts:8",{"_index":739,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/income",{"_index":757,"title":{},"body":{"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1506,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/manager/auth/guard/jwt",{"_index":859,"title":{},"body":{"injectables/JwtAuthGuard-3.html":{},"coverage.html":{}}}],["src/manager/auth/guard/local",{"_index":886,"title":{},"body":{"injectables/LocalAuthGuard-2.html":{},"coverage.html":{}}}],["src/manager/auth/strategy/jwt.strategy.ts",{"_index":880,"title":{},"body":{"classes/JwtStrategy-3.html":{},"coverage.html":{}}}],["src/manager/auth/strategy/jwt.strategy.ts:14",{"_index":882,"title":{},"body":{"classes/JwtStrategy-3.html":{}}}],["src/manager/auth/strategy/jwt.strategy.ts:5",{"_index":881,"title":{},"body":{"classes/JwtStrategy-3.html":{}}}],["src/manager/auth/strategy/local.strategy.ts",{"_index":954,"title":{},"body":{"injectables/ManagerLocalStrategy.html":{},"coverage.html":{}}}],["src/manager/auth/strategy/local.strategy.ts:11",{"_index":957,"title":{},"body":{"injectables/ManagerLocalStrategy.html":{}}}],["src/manager/auth/strategy/local.strategy.ts:7",{"_index":956,"title":{},"body":{"injectables/ManagerLocalStrategy.html":{}}}],["src/manager/dto/create",{"_index":158,"title":{},"body":{"classes/CreateManagerDto.html":{},"coverage.html":{}}}],["src/manager/dto/login",{"_index":897,"title":{},"body":{"classes/LoginManagerDto.html":{},"coverage.html":{}}}],["src/manager/dto/update",{"_index":1426,"title":{},"body":{"classes/UpdateManagerDto.html":{},"coverage.html":{}}}],["src/manager/entities/manager.entity.ts",{"_index":919,"title":{},"body":{"classes/Manager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/manager/entities/manager.entity.ts:11",{"_index":921,"title":{},"body":{"classes/Manager.html":{}}}],["src/manager/entities/manager.entity.ts:14",{"_index":924,"title":{},"body":{"classes/Manager.html":{}}}],["src/manager/entities/manager.entity.ts:17",{"_index":923,"title":{},"body":{"classes/Manager.html":{}}}],["src/manager/entities/manager.entity.ts:20",{"_index":920,"title":{},"body":{"classes/Manager.html":{}}}],["src/manager/entities/manager.entity.ts:8",{"_index":922,"title":{},"body":{"classes/Manager.html":{}}}],["src/manager/manager.controller.ts",{"_index":928,"title":{},"body":{"controllers/ManagerController.html":{},"coverage.html":{}}}],["src/manager/manager.controller.ts:25",{"_index":931,"title":{},"body":{"controllers/ManagerController.html":{}}}],["src/manager/manager.controller.ts:30",{"_index":932,"title":{},"body":{"controllers/ManagerController.html":{}}}],["src/manager/manager.controller.ts:35",{"_index":930,"title":{},"body":{"controllers/ManagerController.html":{}}}],["src/manager/manager.controller.ts:40",{"_index":935,"title":{},"body":{"controllers/ManagerController.html":{}}}],["src/manager/manager.controller.ts:45",{"_index":933,"title":{},"body":{"controllers/ManagerController.html":{}}}],["src/manager/manager.controller.ts:50",{"_index":937,"title":{},"body":{"controllers/ManagerController.html":{}}}],["src/manager/manager.module.ts",{"_index":963,"title":{},"body":{"modules/ManagerModule.html":{}}}],["src/manager/manager.service.ts",{"_index":967,"title":{},"body":{"injectables/ManagerService.html":{},"coverage.html":{}}}],["src/manager/manager.service.ts:14",{"_index":970,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:19",{"_index":973,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:25",{"_index":974,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:38",{"_index":972,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:55",{"_index":978,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:71",{"_index":977,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:84",{"_index":976,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/manager.service.ts:89",{"_index":975,"title":{},"body":{"injectables/ManagerService.html":{}}}],["src/manager/utils/brcrypt.ts",{"_index":1509,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/articles",{"_index":87,"title":{},"body":{"classes/Articles.html":{},"coverage.html":{}}}],["src/order/dto/create",{"_index":165,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ExpenseController.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":1510,"title":{},"body":{"coverage.html":{},"classes/updateOrderDto.html":{}}}],["src/order/entities/order.entity.ts",{"_index":990,"title":{},"body":{"classes/Order.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/order/entities/order.entity.ts:12",{"_index":994,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:15",{"_index":991,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:18",{"_index":993,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":992,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":999,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:24",{"_index":1006,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:29",{"_index":1005,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:34",{"_index":1007,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:38",{"_index":1010,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:44",{"_index":1002,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:49",{"_index":1013,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:54",{"_index":1011,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":1029,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":1033,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:113",{"_index":1037,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:118",{"_index":1043,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:12",{"_index":1036,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:124",{"_index":1042,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:21",{"_index":1039,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:37",{"_index":1038,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:66",{"_index":1040,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:79",{"_index":1041,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/product/dto/create",{"_index":180,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":1428,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entity/product.entity.ts",{"_index":1082,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/entity/product.entity.ts:10",{"_index":1088,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entity/product.entity.ts:13",{"_index":1083,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entity/product.entity.ts:16",{"_index":1084,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entity/product.entity.ts:19",{"_index":1085,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entity/product.entity.ts:22",{"_index":1087,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entity/product.entity.ts:7",{"_index":1086,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":1091,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:14",{"_index":1094,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:18",{"_index":1095,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:22",{"_index":1093,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:26",{"_index":1098,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:31",{"_index":1096,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":1113,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":1121,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:10",{"_index":1124,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:18",{"_index":1127,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:39",{"_index":1128,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:54",{"_index":1126,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:64",{"_index":1130,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:71",{"_index":1129,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/purchase/dto/articles.dto.ts",{"_index":106,"title":{},"body":{"classes/Articles-1.html":{},"coverage.html":{}}}],["src/purchase/dto/articles.dto.ts:13",{"_index":110,"title":{},"body":{"classes/Articles-1.html":{}}}],["src/purchase/dto/articles.dto.ts:5",{"_index":108,"title":{},"body":{"classes/Articles-1.html":{}}}],["src/purchase/dto/articles.dto.ts:9",{"_index":111,"title":{},"body":{"classes/Articles-1.html":{}}}],["src/purchase/dto/create",{"_index":200,"title":{},"body":{"classes/CreatePurchaseDto.html":{},"coverage.html":{}}}],["src/purchase/dto/update",{"_index":1430,"title":{},"body":{"classes/UpdatePurchaseDto.html":{},"coverage.html":{}}}],["src/purchase/entity/purchase.enity.ts",{"_index":1153,"title":{},"body":{"classes/Purchase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/purchase/entity/purchase.enity.ts:12",{"_index":1154,"title":{},"body":{"classes/Purchase.html":{}}}],["src/purchase/entity/purchase.enity.ts:15",{"_index":1156,"title":{},"body":{"classes/Purchase.html":{}}}],["src/purchase/entity/purchase.enity.ts:18",{"_index":1157,"title":{},"body":{"classes/Purchase.html":{}}}],["src/purchase/entity/purchase.enity.ts:9",{"_index":1155,"title":{},"body":{"classes/Purchase.html":{}}}],["src/purchase/purchase.controller.ts",{"_index":1162,"title":{},"body":{"controllers/PurchaseController.html":{},"coverage.html":{}}}],["src/purchase/purchase.controller.ts:12",{"_index":1166,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["src/purchase/purchase.controller.ts:16",{"_index":1167,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["src/purchase/purchase.controller.ts:20",{"_index":1170,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["src/purchase/purchase.controller.ts:24",{"_index":1165,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["src/purchase/purchase.controller.ts:28",{"_index":1172,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["src/purchase/purchase.controller.ts:32",{"_index":1171,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["src/purchase/purchase.module.ts",{"_index":1191,"title":{},"body":{"modules/PurchaseModule.html":{}}}],["src/purchase/purchase.service.ts",{"_index":1198,"title":{},"body":{"injectables/PurchaseService.html":{},"coverage.html":{}}}],["src/purchase/purchase.service.ts:12",{"_index":1199,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/purchase/purchase.service.ts:22",{"_index":1201,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/purchase/purchase.service.ts:43",{"_index":1202,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/purchase/purchase.service.ts:57",{"_index":1200,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/purchase/purchase.service.ts:65",{"_index":1206,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/purchase/purchase.service.ts:73",{"_index":1204,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/purchase/purchase.service.ts:79",{"_index":1203,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["src/sale/sale.controller.ts",{"_index":1235,"title":{},"body":{"controllers/SaleController.html":{},"coverage.html":{}}}],["src/sale/sale.controller.ts:11",{"_index":1243,"title":{},"body":{"controllers/SaleController.html":{}}}],["src/sale/sale.controller.ts:16",{"_index":1246,"title":{},"body":{"controllers/SaleController.html":{}}}],["src/sale/sale.controller.ts:22",{"_index":1253,"title":{},"body":{"controllers/SaleController.html":{}}}],["src/sale/sale.controller.ts:27",{"_index":1250,"title":{},"body":{"controllers/SaleController.html":{}}}],["src/sale/sale.module.ts",{"_index":1275,"title":{},"body":{"modules/SaleModule.html":{}}}],["src/sale/sale.service.ts",{"_index":1280,"title":{},"body":{"injectables/SaleService.html":{},"coverage.html":{}}}],["src/sale/sale.service.ts:11",{"_index":1281,"title":{},"body":{"injectables/SaleService.html":{}}}],["src/sale/sale.service.ts:138",{"_index":1285,"title":{},"body":{"injectables/SaleService.html":{}}}],["src/sale/sale.service.ts:180",{"_index":1284,"title":{},"body":{"injectables/SaleService.html":{}}}],["src/sale/sale.service.ts:19",{"_index":1282,"title":{},"body":{"injectables/SaleService.html":{}}}],["src/sale/sale.service.ts:44",{"_index":1283,"title":{},"body":{"injectables/SaleService.html":{}}}],["src/store/dto/create",{"_index":213,"title":{},"body":{"classes/CreateStoreDto.html":{},"coverage.html":{}}}],["src/store/dto/update",{"_index":1432,"title":{},"body":{"classes/UpdateStoreDto.html":{},"coverage.html":{}}}],["src/store/entity/store.entity.ts",{"_index":1362,"title":{},"body":{"classes/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/store/entity/store.entity.ts:11",{"_index":1364,"title":{},"body":{"classes/Store.html":{}}}],["src/store/entity/store.entity.ts:14",{"_index":1363,"title":{},"body":{"classes/Store.html":{}}}],["src/store/entity/store.entity.ts:17",{"_index":1366,"title":{},"body":{"classes/Store.html":{}}}],["src/store/entity/store.entity.ts:20",{"_index":1365,"title":{},"body":{"classes/Store.html":{}}}],["src/store/entity/store.entity.ts:8",{"_index":1367,"title":{},"body":{"classes/Store.html":{}}}],["src/store/store.controller.ts",{"_index":1370,"title":{},"body":{"controllers/StoreController.html":{},"coverage.html":{}}}],["src/store/store.controller.ts:14",{"_index":1373,"title":{},"body":{"controllers/StoreController.html":{}}}],["src/store/store.controller.ts:18",{"_index":1374,"title":{},"body":{"controllers/StoreController.html":{}}}],["src/store/store.controller.ts:24",{"_index":1372,"title":{},"body":{"controllers/StoreController.html":{}}}],["src/store/store.controller.ts:29",{"_index":1377,"title":{},"body":{"controllers/StoreController.html":{}}}],["src/store/store.controller.ts:34",{"_index":1375,"title":{},"body":{"controllers/StoreController.html":{}}}],["src/store/store.module.ts",{"_index":1394,"title":{},"body":{"modules/StoreModule.html":{}}}],["src/store/store.service.ts",{"_index":1401,"title":{},"body":{"injectables/StoreService.html":{},"coverage.html":{}}}],["src/store/store.service.ts:14",{"_index":1405,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/store/store.service.ts:17",{"_index":1406,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/store/store.service.ts:30",{"_index":1404,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/store/store.service.ts:41",{"_index":1408,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/store/store.service.ts:48",{"_index":1407,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/store/store.service.ts:9",{"_index":1403,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/upload/upload.controller.ts",{"_index":1435,"title":{},"body":{"controllers/UploadController.html":{},"coverage.html":{}}}],["src/upload/upload.controller.ts:13",{"_index":1441,"title":{},"body":{"controllers/UploadController.html":{}}}],["src/upload/upload.controller.ts:25",{"_index":1445,"title":{},"body":{"controllers/UploadController.html":{}}}],["src/upload/upload.module.ts",{"_index":1473,"title":{},"body":{"modules/UploadModule.html":{}}}],["src/upload/upload.service.ts",{"_index":1475,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/upload/upload.service.ts:6",{"_index":1480,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:9",{"_index":1478,"title":{},"body":{"injectables/UploadService.html":{}}}],["start",{"_index":1580,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1583,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1585,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":763,"title":{},"body":{"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{}}}],["started",{"_index":1560,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1572,"title":{},"body":{"index.html":{}}}],["statement",{"_index":772,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["statement.controller",{"_index":778,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["statement.controller.ts",{"_index":758,"title":{},"body":{"controllers/IncomeStatementController.html":{},"coverage.html":{}}}],["statement.controller.ts:11",{"_index":762,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["statement.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["statement.module.ts",{"_index":777,"title":{},"body":{"modules/IncomeStatementModule.html":{}}}],["statement.service",{"_index":765,"title":{},"body":{"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{}}}],["statement.service.ts",{"_index":793,"title":{},"body":{"injectables/IncomeStatementService.html":{},"coverage.html":{}}}],["statement.service.ts:10",{"_index":795,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["statement.service.ts:20",{"_index":797,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["statement/income",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/IncomeStatementController.html":{},"modules/IncomeStatementModule.html":{},"injectables/IncomeStatementService.html":{},"coverage.html":{}}}],["statements",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":124,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateOrderDto.html":{},"classes/Customer.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DriverController.html":{},"controllers/ManagerController.html":{},"classes/Order.html":{}}}],["status:'ok",{"_index":344,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["status:'success",{"_index":809,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["status:customerorder[product].status",{"_index":1047,"title":{},"body":{"injectables/OrderService.html":{}}}],["status:order.status",{"_index":610,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/OrderService.html":{}}}],["stay",{"_index":1605,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1462,"title":{},"body":{"controllers/UploadController.html":{}}}],["store",{"_index":1114,"title":{"classes/Store.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"coverage.html":{}}}],["store.controller",{"_index":1397,"title":{},"body":{"modules/StoreModule.html":{}}}],["store.dto",{"_index":1378,"title":{},"body":{"controllers/StoreController.html":{},"injectables/StoreService.html":{},"classes/UpdateStoreDto.html":{}}}],["store.dto.ts",{"_index":214,"title":{},"body":{"classes/CreateStoreDto.html":{},"classes/UpdateStoreDto.html":{},"coverage.html":{}}}],["store.dto.ts:10",{"_index":216,"title":{},"body":{"classes/CreateStoreDto.html":{}}}],["store.dto.ts:13",{"_index":215,"title":{},"body":{"classes/CreateStoreDto.html":{}}}],["store.dto.ts:17",{"_index":217,"title":{},"body":{"classes/CreateStoreDto.html":{}}}],["store.dto.ts:6",{"_index":219,"title":{},"body":{"classes/CreateStoreDto.html":{}}}],["store.name",{"_index":1119,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{}}}],["store.remove",{"_index":1152,"title":{},"body":{"injectables/ProductService.html":{},"injectables/StoreService.html":{}}}],["store.save",{"_index":1415,"title":{},"body":{"injectables/StoreService.html":{}}}],["store.service",{"_index":1380,"title":{},"body":{"controllers/StoreController.html":{},"modules/StoreModule.html":{}}}],["store/entity/store.entity",{"_index":1116,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/PurchaseModule.html":{},"injectables/PurchaseService.html":{}}}],["store/store.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["store:store.name",{"_index":1232,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["storecontroller",{"_index":1369,"title":{"controllers/StoreController.html":{}},"body":{"controllers/StoreController.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["storeid",{"_index":185,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"injectables/PurchaseService.html":{}}}],["storeid:purchase.storeid",{"_index":1231,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["storeid:string",{"_index":194,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/Product.html":{}}}],["storemodel",{"_index":1123,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["storemodel:model",{"_index":1409,"title":{},"body":{"injectables/StoreService.html":{}}}],["storemodule",{"_index":45,"title":{"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["storeproduct",{"_index":1132,"title":{},"body":{"injectables/ProductService.html":{}}}],["storeproduct.push(data",{"_index":1140,"title":{},"body":{"injectables/ProductService.html":{}}}],["storepurchase",{"_index":1207,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["storepurchase.push(data",{"_index":1214,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["storeschema",{"_index":1115,"title":{},"body":{"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"classes/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storeschema,store",{"_index":1395,"title":{},"body":{"modules/StoreModule.html":{}}}],["storeservice",{"_index":1379,"title":{"injectables/StoreService.html":{}},"body":{"controllers/StoreController.html":{},"modules/StoreModule.html":{},"injectables/StoreService.html":{},"coverage.html":{},"overview.html":{}}}],["storeservice:storeservice",{"_index":1382,"title":{},"body":{"controllers/StoreController.html":{}}}],["strategy",{"_index":366,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["strict",{"_index":425,"title":{},"body":{"modules/CustomerModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"miscellaneous/functions.html":{}}}],["string,@query",{"_index":1269,"title":{},"body":{"controllers/SaleController.html":{}}}],["string,@query('enddate",{"_index":769,"title":{},"body":{"controllers/IncomeStatementController.html":{},"controllers/SaleController.html":{}}}],["sub",{"_index":513,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["subject",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":506,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["successfully",{"_index":324,"title":{},"body":{"controllers/CustomerController.html":{}}}],["super",{"_index":371,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["super.canactivate(context",{"_index":849,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1599,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1616,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":417,"title":{},"body":{"modules/CustomerModule.html":{}}}],["test",{"_index":1588,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1591,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1590,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1587,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1597,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validatecustomer(username",{"_index":372,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{}}}],["this.customermodel",{"_index":500,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customermodel(data",{"_index":488,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customermodel.find",{"_index":459,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customermodel.findone",{"_index":462,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customermodel.findone({_id",{"_index":605,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/OrderService.html":{}}}],["this.customerservice.create(createcustomerdto",{"_index":319,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findall",{"_index":314,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findone(id",{"_index":316,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.logincustomerwithcredentials(user",{"_index":337,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.newone(id",{"_index":346,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.remove(id",{"_index":330,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.update(id",{"_index":328,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.validatecustomer(login.username",{"_index":334,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.deliverymodel",{"_index":614,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliverymodel(createdelivery",{"_index":612,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliverymodel.find",{"_index":591,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliverymodel.find({driverid",{"_index":615,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliverymodel.findone",{"_index":600,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliveryservice.create(createdelivery",{"_index":553,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.findall",{"_index":548,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.findalldriverdelivery(id",{"_index":552,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.finddeliveryorder",{"_index":550,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.findone(id",{"_index":549,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.remove(id",{"_index":555,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.update(id",{"_index":554,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.drivermodel(data",{"_index":688,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.drivermodel.find",{"_index":683,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.drivermodel.findone",{"_index":684,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.drivermodel.findone({_id",{"_index":595,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.drivermodel.findoneandupdate",{"_index":689,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.driverservice.create(createdriverdto",{"_index":649,"title":{},"body":{"controllers/DriverController.html":{}}}],["this.driverservice.findall",{"_index":646,"title":{},"body":{"controllers/DriverController.html":{}}}],["this.driverservice.findone(id",{"_index":647,"title":{},"body":{"controllers/DriverController.html":{}}}],["this.driverservice.remove(id",{"_index":651,"title":{},"body":{"controllers/DriverController.html":{}}}],["this.driverservice.update(id",{"_index":650,"title":{},"body":{"controllers/DriverController.html":{}}}],["this.driverservice.validatedriver(login",{"_index":654,"title":{},"body":{"controllers/DriverController.html":{}}}],["this.driverservice.validatedriver(username",{"_index":891,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.expensemodel",{"_index":754,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expensemodel.create(createexpensedto",{"_index":752,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expensemodel.find",{"_index":749,"title":{},"body":{"injectables/ExpenseService.html":{},"injectables/IncomeStatementService.html":{}}}],["this.expensemodel.findone",{"_index":750,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expenseservice.create(createexpensedto",{"_index":723,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.findall",{"_index":721,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.findone(id",{"_index":722,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.remove(id",{"_index":725,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.update(id",{"_index":724,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.findone(id",{"_index":510,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["this.incomestatementservice.findall(startdate,enddate",{"_index":770,"title":{},"body":{"controllers/IncomeStatementController.html":{}}}],["this.jwtsecret1module.sign(payload",{"_index":485,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.jwtsecret2.sign(payload",{"_index":989,"title":{},"body":{"injectables/ManagerService.html":{}}}],["this.jwtservice.sign(payload",{"_index":695,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.loginwithcredentials(user",{"_index":694,"title":{},"body":{"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["this.mailerservice.sendmail",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendconfirmationemail(createcustomerdto.name",{"_index":489,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.managermodel",{"_index":987,"title":{},"body":{"injectables/ManagerService.html":{}}}],["this.managermodel(data",{"_index":986,"title":{},"body":{"injectables/ManagerService.html":{}}}],["this.managermodel.find",{"_index":981,"title":{},"body":{"injectables/ManagerService.html":{}}}],["this.managermodel.findone",{"_index":982,"title":{},"body":{"injectables/ManagerService.html":{}}}],["this.managerservice.create(createmanagerdto",{"_index":945,"title":{},"body":{"controllers/ManagerController.html":{}}}],["this.managerservice.findall",{"_index":943,"title":{},"body":{"controllers/ManagerController.html":{}}}],["this.managerservice.findone(id",{"_index":944,"title":{},"body":{"controllers/ManagerController.html":{}}}],["this.managerservice.remove(id",{"_index":947,"title":{},"body":{"controllers/ManagerController.html":{}}}],["this.managerservice.update(id",{"_index":946,"title":{},"body":{"controllers/ManagerController.html":{}}}],["this.managerservice.validatemanager(login",{"_index":655,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["this.managerservice.validatemanager(username",{"_index":958,"title":{},"body":{"injectables/ManagerLocalStrategy.html":{}}}],["this.ordermodel",{"_index":1079,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordermodel.create(createorderdto",{"_index":1077,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordermodel.find",{"_index":806,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/OrderService.html":{},"injectables/SaleService.html":{}}}],["this.ordermodel.findone",{"_index":1061,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordermodel.findone({_id",{"_index":603,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.orderservice.create(createorderdto",{"_index":1024,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.customerorder(id",{"_index":1020,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":1018,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":1021,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findorder(id",{"_index":1023,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(id",{"_index":1026,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(id",{"_index":1025,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.productmodel",{"_index":1151,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel(createproductdto",{"_index":1145,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find",{"_index":1053,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["this.productmodel.findone",{"_index":1066,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["this.productmodel.findone({_id",{"_index":1141,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{}}}],["this.productservice.create(name,createproductdto",{"_index":1107,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":1104,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":1105,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(id",{"_index":1109,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":1108,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.purchasemodel",{"_index":1221,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["this.purchasemodel(createpurchasedto).save",{"_index":1218,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["this.purchasemodel.find",{"_index":811,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/PurchaseService.html":{}}}],["this.purchasemodel.findone({_id",{"_index":820,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/PurchaseService.html":{}}}],["this.purchasemodel.findone({dateofpurchase",{"_index":818,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["this.purchaseservice.create(createpurchasedto",{"_index":1184,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["this.purchaseservice.findall",{"_index":1178,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["this.purchaseservice.findone(id",{"_index":1180,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["this.purchaseservice.findpuchase(id",{"_index":1182,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["this.purchaseservice.remove(id",{"_index":1187,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["this.purchaseservice.update(id,createpurchasedto",{"_index":1186,"title":{},"body":{"controllers/PurchaseController.html":{}}}],["this.saleservice.finddailysale(startdate,enddate",{"_index":1260,"title":{},"body":{"controllers/SaleController.html":{}}}],["this.saleservice.findmonthsale(startdate,enddate",{"_index":1263,"title":{},"body":{"controllers/SaleController.html":{}}}],["this.saleservice.findproductsale(startdate,enddate",{"_index":1271,"title":{},"body":{"controllers/SaleController.html":{}}}],["this.saleservice.findyearlysale(startdate,enddate",{"_index":1266,"title":{},"body":{"controllers/SaleController.html":{}}}],["this.storemodel",{"_index":1416,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.storemodel(createstoredto",{"_index":1413,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.storemodel.find",{"_index":1410,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.storemodel.findone",{"_index":1411,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.storemodel.findone({_id",{"_index":1134,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["this.storeservice.create(name,createstoredto",{"_index":1388,"title":{},"body":{"controllers/StoreController.html":{}}}],["this.storeservice.findall",{"_index":1383,"title":{},"body":{"controllers/StoreController.html":{}}}],["this.storeservice.findone(id",{"_index":1385,"title":{},"body":{"controllers/StoreController.html":{}}}],["this.storeservice.remove(id",{"_index":1390,"title":{},"body":{"controllers/StoreController.html":{}}}],["this.storeservice.update(id",{"_index":1389,"title":{},"body":{"controllers/StoreController.html":{}}}],["this.update(confirmationcode._id",{"_index":508,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.uploadservice.show(res,image",{"_index":1460,"title":{},"body":{"controllers/UploadController.html":{}}}],["this.uploadservice.upload(file",{"_index":1470,"title":{},"body":{"controllers/UploadController.html":{}}}],["throw",{"_index":465,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["token",{"_index":336,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{}}}],["token:token.access_token",{"_index":659,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["total",{"_index":1322,"title":{},"body":{"injectables/SaleService.html":{}}}],["total.map(x=>x.total).reduce((x,y)=>x+y",{"_index":1331,"title":{},"body":{"injectables/SaleService.html":{}}}],["total:articles.quantity",{"_index":1355,"title":{},"body":{"injectables/SaleService.html":{}}}],["total:x.articles.map(articles",{"_index":823,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{}}}],["totalamount",{"_index":203,"title":{},"body":{"classes/CreatePurchaseDto.html":{},"classes/Purchase.html":{},"injectables/SaleService.html":{}}}],["totalamount:purchase.totalamount",{"_index":1213,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["totalexpense",{"_index":838,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["totalorder",{"_index":828,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["totalpurchase",{"_index":835,"title":{},"body":{"injectables/IncomeStatementService.html":{}}}],["touch",{"_index":1606,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":175,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{},"dependencies.html":{}}}],["transport",{"_index":404,"title":{},"body":{"modules/CustomerModule.html":{}}}],["true",{"_index":178,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/Customer.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/StoreService.html":{}}}],["true})@type(undefined",{"_index":169,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{}}}],["try",{"_index":461,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["twitter",{"_index":1612,"title":{},"body":{"index.html":{}}}],["type",{"_index":94,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/Driver.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"injectables/MailService.html":{},"classes/Manager.html":{},"controllers/ManagerController.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Purchase.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"classes/Store.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{},"controllers/UploadController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1420,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"classes/UpdateDriverDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateManagerDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePurchaseDto.html":{},"classes/UpdateStoreDto.html":{},"dependencies.html":{},"classes/updateOrderDto.html":{}}}],["typescript",{"_index":1571,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":350,"title":{},"body":{"injectables/CustomerLocalAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["undefined",{"_index":699,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{},"classes/Purchase.html":{},"classes/Store.html":{}}}],["unique",{"_index":243,"title":{},"body":{"classes/Customer.html":{}}}],["unit",{"_index":1586,"title":{},"body":{"index.html":{}}}],["unitcost",{"_index":107,"title":{},"body":{"classes/Articles-1.html":{},"injectables/PurchaseService.html":{}}}],["unitcost:number",{"_index":114,"title":{},"body":{"classes/Articles-1.html":{}}}],["unknown",{"_index":286,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"injectables/ExpenseService.html":{},"controllers/IncomeStatementController.html":{},"injectables/IncomeStatementService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/PurchaseService.html":{},"controllers/SaleController.html":{},"injectables/SaleService.html":{},"injectables/StoreService.html":{}}}],["unlicensed",{"_index":1624,"title":{},"body":{"properties.html":{}}}],["update",{"_index":257,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["update(@param('id",{"_index":327,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/StoreController.html":{}}}],["update(id",{"_index":278,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/DriverController.html":{},"injectables/DriverService.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/PurchaseController.html":{},"injectables/PurchaseService.html":{},"controllers/StoreController.html":{},"injectables/StoreService.html":{}}}],["update(id:string",{"_index":1149,"title":{},"body":{"injectables/ProductService.html":{},"injectables/PurchaseService.html":{}}}],["updatecustomerdto",{"_index":279,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updatedelivery",{"_index":542,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["updatedriverdto",{"_index":634,"title":{"classes/UpdateDriverDto.html":{}},"body":{"controllers/DriverController.html":{},"injectables/DriverService.html":{},"classes/UpdateDriverDto.html":{},"coverage.html":{}}}],["updateexpensedto",{"_index":712,"title":{"classes/UpdateExpenseDto.html":{}},"body":{"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["updatemanagerdto",{"_index":934,"title":{"classes/UpdateManagerDto.html":{}},"body":{"controllers/ManagerController.html":{},"injectables/ManagerService.html":{},"classes/UpdateManagerDto.html":{},"coverage.html":{}}}],["updateorderdto",{"_index":1012,"title":{"classes/updateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{},"classes/updateOrderDto.html":{}}}],["updateproductdto",{"_index":1097,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateproductdto:updateproductdto",{"_index":1150,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatepurchasedto",{"_index":1205,"title":{"classes/UpdatePurchaseDto.html":{}},"body":{"injectables/PurchaseService.html":{},"classes/UpdatePurchaseDto.html":{},"coverage.html":{}}}],["updatepurchasedto:updatepurchasedto",{"_index":1220,"title":{},"body":{"injectables/PurchaseService.html":{}}}],["updatestoredto",{"_index":1376,"title":{"classes/UpdateStoreDto.html":{}},"body":{"controllers/StoreController.html":{},"injectables/StoreService.html":{},"classes/UpdateStoreDto.html":{},"coverage.html":{}}}],["upload",{"_index":1436,"title":{},"body":{"controllers/UploadController.html":{},"injectables/UploadService.html":{}}}],["upload(file",{"_index":1479,"title":{},"body":{"injectables/UploadService.html":{}}}],["upload.controller",{"_index":1474,"title":{},"body":{"modules/UploadModule.html":{}}}],["upload.service",{"_index":1447,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{}}}],["upload/upload.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadcontroller",{"_index":1434,"title":{"controllers/UploadController.html":{}},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"coverage.html":{}}}],["uploadedfile",{"_index":1448,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploadfile",{"_index":1438,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1469,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploadfile(file",{"_index":1442,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploadmodule",{"_index":46,"title":{"modules/UploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UploadModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadservice",{"_index":1446,"title":{"injectables/UploadService.html":{}},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadservice:uploadservice",{"_index":1457,"title":{},"body":{"controllers/UploadController.html":{}}}],["url",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["used",{"_index":481,"title":{},"body":{"injectables/CustomerService.html":{}}}],["useexisting",{"_index":427,"title":{},"body":{"modules/CustomerModule.html":{},"modules/ManagerModule.html":{}}}],["useguards",{"_index":295,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/ManagerController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{}}}],["useguards(customerlocalauthguard",{"_index":331,"title":{},"body":{"controllers/CustomerController.html":{}}}],["useguards(customerlocalauthguard)@post('/login",{"_index":283,"title":{},"body":{"controllers/CustomerController.html":{}}}],["useguards(jwtauthguard",{"_index":312,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/DriverController.html":{},"controllers/ExpenseController.html":{},"controllers/IncomeStatementController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/PurchaseController.html":{},"controllers/SaleController.html":{},"controllers/StoreController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":266,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/DriverController.html":{}}}],["useguards(localstrategy",{"_index":652,"title":{},"body":{"controllers/DriverController.html":{}}}],["useguards(localstrategy)@post('/login",{"_index":637,"title":{},"body":{"controllers/DriverController.html":{}}}],["useguards(managerlocalstrategy",{"_index":948,"title":{},"body":{"controllers/ManagerController.html":{}}}],["useguards(managerlocalstrategy)@post('/login",{"_index":936,"title":{},"body":{"controllers/ManagerController.html":{}}}],["useinterceptors",{"_index":1449,"title":{},"body":{"controllers/UploadController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1461,"title":{},"body":{"controllers/UploadController.html":{}}}],["user",{"_index":322,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerLocalStrategy.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ManagerService.html":{}}}],["user.id",{"_index":514,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["user.password",{"_index":495,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["user.status",{"_index":338,"title":{},"body":{"controllers/CustomerController.html":{}}}],["user.username",{"_index":512,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["user['_id",{"_index":343,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/DriverService.html":{},"injectables/ManagerService.html":{}}}],["userid",{"_index":871,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["username",{"_index":125,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateManagerDto.html":{},"classes/Customer.html":{},"injectables/CustomerLocalStrategy.html":{},"injectables/CustomerService.html":{},"classes/Driver.html":{},"injectables/DriverService.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"classes/Manager.html":{},"injectables/ManagerLocalStrategy.html":{},"injectables/ManagerService.html":{}}}],["validate",{"_index":356,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["validate(payload",{"_index":862,"title":{},"body":{"classes/JwtStrategy.html":{},"classes/JwtStrategy-1.html":{},"classes/JwtStrategy-2.html":{},"classes/JwtStrategy-3.html":{}}}],["validate(username",{"_index":361,"title":{},"body":{"injectables/CustomerLocalStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ManagerLocalStrategy.html":{}}}],["validatecustomer",{"_index":258,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["validatecustomer(@body",{"_index":333,"title":{},"body":{"controllers/CustomerController.html":{}}}],["validatecustomer(login",{"_index":282,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["validatedriver",{"_index":671,"title":{},"body":{"injectables/DriverService.html":{}}}],["validatedriver(login",{"_index":681,"title":{},"body":{"injectables/DriverService.html":{}}}],["validatemanager",{"_index":627,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{}}}],["validatemanager(@body",{"_index":653,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{}}}],["validatemanager(login",{"_index":636,"title":{},"body":{"controllers/DriverController.html":{},"controllers/ManagerController.html":{},"injectables/ManagerService.html":{}}}],["validatenested",{"_index":174,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePurchaseDto.html":{}}}],["validatenested({each",{"_index":168,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested,isnumber",{"_index":210,"title":{},"body":{"classes/CreatePurchaseDto.html":{}}}],["validator",{"_index":104,"title":{},"body":{"classes/Articles.html":{},"classes/Articles-1.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDriverDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateManagerDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePurchaseDto.html":{},"classes/CreateStoreDto.html":{},"classes/LoginCustomerDto.html":{},"classes/LoginDriveDto.html":{},"classes/LoginManagerDto.html":{},"dependencies.html":{}}}],["value",{"_index":798,"title":{},"body":{"injectables/IncomeStatementService.html":{},"injectables/SaleService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1625,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":342,"title":{},"body":{"controllers/CustomerController.html":{}}}],["version",{"_index":1622,"title":{},"body":{"properties.html":{}}}],["void",{"_index":907,"title":{},"body":{"injectables/MailService.html":{}}}],["watch",{"_index":1581,"title":{},"body":{"index.html":{}}}],["website",{"_index":1610,"title":{},"body":{"index.html":{}}}],["wmzjwevlutlbmjwe",{"_index":413,"title":{},"body":{"modules/CustomerModule.html":{}}}],["world",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1049,"title":{},"body":{"injectables/OrderService.html":{}}}],["x.no",{"_index":1327,"title":{},"body":{"injectables/SaleService.html":{}}}],["x.total",{"_index":1342,"title":{},"body":{"injectables/SaleService.html":{}}}],["y",{"_index":1051,"title":{},"body":{"injectables/OrderService.html":{}}}],["y.total",{"_index":1330,"title":{},"body":{"injectables/SaleService.html":{}}}],["year.filter(x",{"_index":1340,"title":{},"body":{"injectables/SaleService.html":{}}}],["year=sale.map(list",{"_index":1336,"title":{},"body":{"injectables/SaleService.html":{}}}],["yearlist",{"_index":1335,"title":{},"body":{"injectables/SaleService.html":{}}}],["yearlist.add(date",{"_index":1338,"title":{},"body":{"injectables/SaleService.html":{}}}],["yearly",{"_index":1344,"title":{},"body":{"injectables/SaleService.html":{}}}],["you'd",{"_index":1602,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/DriverModule.html":{},"modules/ExpenseModule.html":{},"modules/IncomeStatementModule.html":{},"modules/ManagerModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/PurchaseModule.html":{},"modules/SaleModule.html":{},"modules/StoreModule.html":{},"modules/UploadModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nDriverModule\n\nDriverModule\n\nAppModule -->\n\nDriverModule->AppModule\n\n\n\n\n\nExpenseModule\n\nExpenseModule\n\nAppModule -->\n\nExpenseModule->AppModule\n\n\n\n\n\nIncomeStatementModule\n\nIncomeStatementModule\n\nAppModule -->\n\nIncomeStatementModule->AppModule\n\n\n\n\n\nManagerModule\n\nManagerModule\n\nAppModule -->\n\nManagerModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nPurchaseModule\n\nPurchaseModule\n\nAppModule -->\n\nPurchaseModule->AppModule\n\n\n\n\n\nSaleModule\n\nSaleModule\n\nAppModule -->\n\nSaleModule->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CustomerModule\n                        \n                        \n                            DeliveryModule\n                        \n                        \n                            DriverModule\n                        \n                        \n                            ExpenseModule\n                        \n                        \n                            IncomeStatementModule\n                        \n                        \n                            ManagerModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            PurchaseModule\n                        \n                        \n                            SaleModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            UploadModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ProductModule } from './product/product.module';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { StoreModule } from './store/store.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CustomerModule } from './customer/customer.module';\nimport { DriverModule } from './driver/driver.module';\nimport { ManagerModule } from './manager/manager.module';\nimport { OrderModule } from './order/order.module';\nimport { DeliveryModule } from './delivery/delivery.module';\nimport { UploadModule } from './upload/upload.module';\nimport { PurchaseModule } from './purchase/purchase.module';\nimport { ExpenseModule } from './expense/expense.module';\nimport { IncomeStatementModule } from './income-statement/income-statement.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { SaleModule } from './sale/sale.module'\n\n@Module({\n  imports: [\n  ConfigModule.forRoot(),\n  MongooseModule.forRoot(process.env.DEVELOP),\n  CustomerModule,\n  DriverModule,\n  ManagerModule,\n  OrderModule,\n  DeliveryModule,\n  StoreModule,\n  UploadModule,\n  ProductModule,\n  PurchaseModule,\n  ExpenseModule,\n  IncomeStatementModule,\n  SaleModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Articles.html":{"url":"classes/Articles.html","title":"class - Articles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Articles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/articles-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                remark\n                            \n                            \n                                sellingPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/articles-dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/articles-dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/articles-dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellingPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/articles-dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class Articles {\n  @IsString()\n  productId: string;\n\n  @IsNumber()\n  sellingPrice: number;\n\n  @IsNumber()\n  quantity: number;\n\n  @IsOptional()\n  @IsString()\n  remark: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Articles-1.html":{"url":"classes/Articles-1.html","title":"class - Articles-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Articles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase/dto/articles.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                unitCost\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/articles.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/articles.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unitCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/articles.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, IsPositive } from \"class-validator\";\n\nexport class Articles {\n    @IsString()\n    productId:string\n\n    @IsNumber()\n    @IsPositive()\n    unitCost:number\n\n    @IsNumber()\n    @IsPositive()\n    quantity:number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/create-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class CreateCustomerDto {\n  \n  @IsString()\n  name: string;\n  \n  @IsString()\n  address: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  username: string;\n\n  @IsString()\n  password: string;\n\n  @IsString()\n  email: string;\n\n  @IsOptional()\n  @IsString()\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDriverDto.html":{"url":"classes/CreateDriverDto.html","title":"class - CreateDriverDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDriverDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/dto/create-driver.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                device\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                photo\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/create-driver.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class CreateDriverDto {\n  \n  @IsString()\n  name: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  username: string;\n\n  @IsString()\n  password: string;\n  \n  @IsString()\n  device: string\n\n  @IsString()\n  photo: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExpenseDto.html":{"url":"classes/CreateExpenseDto.html","title":"class - CreateExpenseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExpenseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense/dto/create-expense.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                date\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense/dto/create-expense.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense/dto/create-expense.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense/dto/create-expense.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsNumber, IsOptional, IsPositive, IsString } from \"class-validator\";\n\nexport class CreateExpenseDto {\n    @IsString()\n    name:string\n\n    @IsOptional()\n    @IsDate()\n    date: Date\n\n    @IsNumber()\n    @IsPositive()\n    cost:number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateManagerDto.html":{"url":"classes/CreateManagerDto.html","title":"class - CreateManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/dto/create-manager.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/dto/create-manager.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/dto/create-manager.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/dto/create-manager.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/dto/create-manager.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateManagerDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  username: string;\n\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                            \n                                customerId\n                            \n                            \n                                date\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Articles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate } from 'class-validator';\nimport { IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer'\nimport { Articles } from './articles-dto'\nexport class CreateOrderDto {\n\n  @IsString()\n  customerId: string\n\n  @ValidateNested({ each: true})\n  @Type(() => Articles)\n  articles: Articles[];\n\n  @IsOptional()\n  @IsString()\n  status: string\n\n  @IsOptional()\n  @IsDate()\n  date: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                sellingPrice\n                            \n                            \n                                storeId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellingPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString,IsOptional, IsNumber, IsPositive } from \"class-validator\"\n\nexport class CreateProductDto  {\n    @IsString()\n    name:string\n\n    @IsString()\n    storeId:string\n\n    @IsString()\n    category:string\n\n    @IsOptional()\n    @IsString()\n    image:string\n\n    @IsOptional()\n    @IsString()\n    description:string\n\n    @IsOptional()\n    @IsNumber()\n    @IsPositive()\n    sellingPrice:number\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePurchaseDto.html":{"url":"classes/CreatePurchaseDto.html","title":"class - CreatePurchaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePurchaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase/dto/create-purchase.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                            \n                                dateOfPurchase\n                            \n                            \n                                storeId\n                            \n                            \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Articles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/create-purchase.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfPurchase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/create-purchase.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/create-purchase.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/dto/create-purchase.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {IsDate, IsString, ValidateNested,IsNumber, IsOptional } from \"class-validator\";\nimport { Articles } from \"./articles.dto\";\n\nexport class CreatePurchaseDto {\n    @IsOptional()\n    @IsDate()\n    dateOfPurchase: Date\n\n    @IsOptional()\n    @ValidateNested({ each: true})\n    @Type(() => Articles)\n    articles: Articles[] \n\n    @IsOptional()\n    @IsString()\n    storeId:string\n    @IsOptional()\n    @IsNumber()\n    totalAmount: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStoreDto.html":{"url":"classes/CreateStoreDto.html","title":"class - CreateStoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/dto/create-store.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/dto/create-store.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/dto/create-store.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/dto/create-store.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/dto/create-store.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {  IsOptional, IsString } from 'class-validator';\n\nexport class CreateStoreDto {\n  @IsString() \n  @IsOptional()\n  name: string\n\n  @IsOptional()\n  @IsString()\n  contact: string\n\n  @IsString()\n  address: string\n\n  @IsOptional()\n  @IsString()\n  image: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/entities/customer.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                confirmationCode\n                            \n                            \n                                contact\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'Pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n/* eslint-disable prettier/prettier */\n@Schema()\nexport class Customer  extends Document {\n  \n  @Prop()\n  name: string;\n  \n  @Prop()\n  address: string;\n\n  @Prop()\n  contact: string;\n\n  @Prop()\n  username: string;\n\n  @Prop()\n  password: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop({ default: 'Pending'})\n  status: string;\n\n  @Prop()\n  confirmationCode: string;\n}\n\nexport const CustomerSchema = SchemaFactory.createForClass(Customer)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findNewOne\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                validateCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCustomerDto: CreateCustomerDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findNewOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/confirm/:id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCustomerDto\n                                    \n                                                UpdateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateCustomer\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateCustomer(login, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CustomerLocalAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // import { PaginationDto } from './../common/pagination/pagination-dto';\nimport { \n  Body,\n  Req,\n  Res, \n  Controller, \n  Delete, Get, \n  Param, \n  Patch, \n  Post, \n  Query,\n  UseGuards\n} from '@nestjs/common';\nimport { Request, Response } from 'express'\nimport { JwtAuthGuard } from '../customer/auth/guard/jwt-auth.guard';\nimport { CustomerLocalAuthGuard } from './auth/guard/local-auth.guard';\nimport { CustomerService } from './customer.service';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { LoginCustomerDto } from './dto/login-cutomer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\n\n@Controller('customer')\nexport class CustomerController {\n  constructor(private readonly customerService: CustomerService) {}\n  \n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll(/* @Query() pagination: PaginationDto */) {\n    return this.customerService.findAll(/* pagination */)\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.customerService.findOne(id)\n  }\n\n  @Post()\n  async create(@Body() createCustomerDto: CreateCustomerDto, @Res() res: Response) {\n   await this.customerService.create(createCustomerDto);\n    res.send({\n      message:\n        \"User was registered successfully! Please check your email\",\n   });\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCustomerDto: UpdateCustomerDto) {\n    return this.customerService.update(id, updateCustomerDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.customerService.remove(id);  \n  }\n  @UseGuards(CustomerLocalAuthGuard)\n  @Post('/login')\n  async validateCustomer(@Body() login, @Res() res: Response) { \n   const user = await this.customerService.validateCustomer(login.username, login.password);\n   const token = await this.customerService.loginCustomerWithCredentials(user)               \n   if (user.status != \"Active\") {\n    return res.status(401).send({\n      message: \"Pending Account. Please Verify Your Email!\",\n    });\n  }\n    res.send({ id: user['_id'], status:'ok', ...token}); \n  }\n\n  \n  @Get('/confirm/:id')\n  async findNewOne(@Param('id') id: string, @Res() res: Response) {\n    this.customerService.newOne(id)\n    res.send(' Congrats! ')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerLocalAuthGuard.html":{"url":"injectables/CustomerLocalAuthGuard.html","title":"injectable - CustomerLocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerLocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class CustomerLocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerLocalStrategy.html":{"url":"injectables/CustomerLocalStrategy.html","title":"injectable - CustomerLocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerLocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: CustomerService)\n                    \n                \n                        \n                            \n                                Defined in src/customer/auth/strategy/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username, pass)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/auth/strategy/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { LoginCustomerDto } from 'src/customer/dto/login-cutomer.dto';\nimport { CustomerService } from '../../customer.service'\n\n@Injectable()\nexport class CustomerLocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: CustomerService) {\n    super();\n  }\n  async validate(username, pass): Promise {\n    \n    const user = await this.authService.validateCustomer(username, pass);    \n    if (!user) {\n      return { errorMsg:'Wrong username or password' }\n    }\n    \n    return { data: user };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_CustomerModule_exports\n\n\n\n\nCustomerService \n\nCustomerService \n\n\n\nJwtSecret1Service \n\nJwtSecret1Service \n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\nJwtSecret1Service  -->\n\nCustomerModule->JwtSecret1Service \n\n\n\n\n\nCustomerLocalStrategy\n\nCustomerLocalStrategy\n\nCustomerModule -->\n\nCustomerLocalStrategy->CustomerModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nMailService\n\nMailService\n\nCustomerModule -->\n\nMailService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerLocalStrategy\n                        \n                        \n                            CustomerService\n                        \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomerService\n                        \n                        \n                            JwtSecret1Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule, MailerService } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Module } from '@nestjs/common';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwtConstants } from '../auth0/constants';\nimport { JwtStrategy } from './auth/strategy/jwt.strategy';\nimport { CustomerLocalStrategy } from './auth/strategy/local.strategy';\nimport { CustomerController } from './customer.controller';\nimport { CustomerService } from './customer.service';\nimport { Customer, CustomerSchema } from './entities/customer.entity';\nimport { MailService } from './mailer/service';\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Customer.name,\n      schema: CustomerSchema\n    },\n\n  ]),\n  PassportModule,\n  JwtModule.register({\n    secret: jwtConstants.secret,\n    signOptions: { expiresIn: '1d' },\n  }),MailerModule.forRoot({\n    transport: {\n      host: \"smtp.gmail.com\",\n      port: 465,\n      ignoreTLS: true,\n      secure: true,\n      auth: {\n        user: 'mejaricruz123@gmail.com',\n        pass: 'wmzjwevlutlbmjwe',\n      },\n    },\n    defaults: {\n      from: '\"No Reply\" ',\n    },\n    preview: true,\n    template: {\n      dir: process.cwd() + '/template/',\n      adapter: new HandlebarsAdapter(), // or new PugAdapter() or new EjsAdapter()\n      options: {\n        strict: true,\n      },\n    },\n  })],\n  controllers: [CustomerController],\n  providers: [CustomerService, CustomerLocalStrategy, JwtStrategy, {\n    provide: 'JwtSecret1Service',\n    useExisting: JwtService,\n  },\n  MailService],\n  exports: [CustomerService, 'JwtSecret1Service'],\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                loginCustomerWithCredentials\n                            \n                            \n                                    Async\n                                newOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerModel: Model, jwtSecret1Module, mailService)\n                    \n                \n                        \n                            \n                                Defined in src/customer/customer.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtSecret1Module\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginCustomerWithCredentials\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginCustomerWithCredentials(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        newOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    newOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCustomerDto\n                                    \n                                                UpdateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateCustomer\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateCustomer(login, pass)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LoginCustomerDto } from './dto/login-cutomer.dto';\nimport { HttpException, HttpStatus, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Customer } from './entities/customer.entity';\nimport { Model } from 'mongoose'\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport * as bcrypt from 'bcrypt'\nimport { MailService } from './mailer/service'\n\n@Injectable()\nexport class CustomerService {\n  constructor(\n    @InjectModel(Customer.name) private customerModel: Model,\n    @Inject('JwtSecret1Service') private jwtSecret1Module,\n    @Inject(MailService) private mailService  ) {}\n\n    findAll(/* pagination: PaginationDto */) {\n/*       const {limit ,offset} = pagination\n      const page = offset - 1 */\n      return this.customerModel.find()/* .limit(limit).skip(page * limit) */\n    }\n  \n    async findOne(id: string) {\n      try{\n          const customer = await this.customerModel.findOne({ _id: id }).exec()\n            if (!customer) {\n              throw new NotFoundException(`Customer #${id} not found`);\n            }\n            return customer \n      }\n       catch(err){\n        throw new NotFoundException(`Customer #${id} not found`); \n      }\n    }\n    \n    async create(createCustomerDto: CreateCustomerDto) {\n      const salt = await bcrypt.genSalt(10);\n      const hashPassword = await bcrypt.hash(createCustomerDto.password, salt)\n      const user = await this.customerModel.findOne({ username: createCustomerDto.username.toLocaleLowerCase() })\n      const name = await this.customerModel.findOne({ name: createCustomerDto.name })\n      const email = await this.customerModel.findOne({ email: createCustomerDto.email })\n\n      if (user || name) {\n        throw new HttpException('username already exist!', HttpStatus.CONFLICT)\n      }\n      if (email) {\n        throw new HttpException('email already used!', HttpStatus.CONFLICT)\n      }\n      \n      let lowerCase = createCustomerDto.username.toLocaleLowerCase()\n      let username = lowerCase.replace(/\\s/g, '');\n            const payload = { username: username };                \n      const token = await this.jwtSecret1Module.sign(payload, {\n        secret: process.env.SECRET_KEY,\n        expiresIn: '10s'\n      })\n      const data = {\n        ...createCustomerDto,\n        username: username,\n        password: hashPassword,\n        confirmationCode: token     \n      }\n      const customer = new this.customerModel(data);\n      \n      this.mailService.sendConfirmationEmail(createCustomerDto.name, createCustomerDto.email, data.confirmationCode);\n      \n      return customer.save()\n    }\n  \n    async validateCustomer(login, pass): Promise {\n      \n      try {\n        const user = await this.customerModel.findOne({ username: login.toLocaleLowerCase() }).exec();      \n        const isMatch = await bcrypt.compare(pass, user.password)\n        if (isMatch) {            \n          return user\n        }      \n        throw new HttpException('username or password not exist!',HttpStatus.UNAUTHORIZED)\n      } catch (err){\n        console.log(err);     \n        throw new HttpException('username or password not exist!',HttpStatus.UNAUTHORIZED)       \n      }\n    }\n  \n    async update(id: string, updateCustomerDto: UpdateCustomerDto) {\n      try {\n        const customer = await this.customerModel\n        .findOneAndUpdate({ _id: id }, { $set: updateCustomerDto }, { new: true })\n        if(!customer) {\n        throw new HttpException('id does not exist!', HttpStatus.NOT_FOUND)\n        }\n        return 'success'\n      } catch (e) {\n        throw new HttpException('id does not exist!', HttpStatus.NOT_FOUND)\n      }\n    }\n\n    async newOne(id: string) {\n      const confirmationCode = await this.customerModel.findOne({ confirmationCode: id })\n        this.update(confirmationCode._id, {status: 'Active'})    \n    }\n\n    async remove(id: string) {\n      const product = await this.findOne(id)\n      return product.remove();\n    }\n\n    async loginCustomerWithCredentials(user: any) {\n      const payload = { username: user.username, sub: user.id };                \n      return {\n        access_token: this.jwtSecret1Module.sign(payload),\n      };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Delivery.html":{"url":"classes/Delivery.html","title":"class - Delivery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Delivery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/entities/delivery.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                driverId\n                            \n                            \n                                orderId\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        driverId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/entities/delivery.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/entities/delivery.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'Shipping'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/entities/delivery.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n/* eslint-disable prettier/prettier */\n@Schema()\nexport class Delivery  extends Document {\n\n  @Prop()\n  driverId: string\n\n  @Prop()\n  orderId: string\n\n  @Prop({ default: 'Shipping' })\n  status: string\n}\n\nexport const DeliverySchema = SchemaFactory.createForClass(Delivery)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryController.html":{"url":"controllers/DeliveryController.html","title":"controller - DeliveryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllDriverDelivery\n                            \n                            \n                                findDeliveryOrder\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDelivery: Object[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDelivery\n                                    \n                                            Object[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllDriverDelivery\n                        \n                    \n                \n            \n            \n                \nfindAllDriverDelivery(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('driver/:id')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findDeliveryOrder\n                        \n                    \n                \n            \n            \n                \nfindDeliveryOrder()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('order/shipping')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateDelivery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDelivery\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // import { PaginationDto } from './../common/pagination/pagination-dto';\nimport { \n  Body, \n  Controller, \n  Delete, Get, \n  Param, \n  Patch, \n  Post, \n  Query,\n  UseGuards} from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/guard/jwt-auth.guard';\nimport { DeliveryService } from './delivery.service';\n\n@UseGuards(JwtAuthGuard)\n@Controller('delivery')\nexport class DeliveryController {\n  constructor(\n    private readonly deliveryService: DeliveryService) {} \n    \n    @Get()\n    findAll(/* @Query() pagination: PaginationDto */) {\n      return this.deliveryService.findAll(/* pagination */);\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n      return this.deliveryService.findOne(id)\n    }\n    \n    @Get('order/shipping')\n    findDeliveryOrder() {\n      return this.deliveryService.findDeliveryOrder()\n    }\n\n    @Get('driver/:id')\n    findAllDriverDelivery(@Param('id') id: string) {\n      return this.deliveryService.findAllDriverDelivery(id)\n    }\n\n    @Post()\n    create(@Body() createDelivery: Object[]) {    \n    return this.deliveryService.create(createDelivery);\n    }\n  \n    @Patch(':id')\n    update(@Param('id') id: string, @Body() updateDelivery) {\n      return this.deliveryService.update(id, updateDelivery);\n    }\n  \n    @Delete(':id')\n    remove(@Param('id') id: string) {\n      return this.deliveryService.remove(id);  \n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryModule.html":{"url":"modules/DeliveryModule.html","title":"module - DeliveryModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_providers\n\n\n\ncluster_DeliveryModule_exports\n\n\n\n\nDeliveryService \n\nDeliveryService \n\n\n\nDeliveryModule\n\nDeliveryModule\n\nDeliveryService  -->\n\nDeliveryModule->DeliveryService \n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery/delivery.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DeliveryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\nimport { Customer, CustomerSchema } from '../customer/entities/customer.entity';\nimport { Driver, DriverrSchema } from '../driver/entities/drivers.entity';\nimport { Order, OrderSchema } from '../order/entities/order.entity';\nimport { DeliveryController } from './delivery.controller';\nimport { DeliveryService } from './delivery.service';\nimport { Delivery, DeliverySchema } from './entities/delivery.entity';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Delivery.name,\n      schema: DeliverySchema\n    }\n  ]),\n  MongooseModule.forFeature([\n    {\n      name: Order.name,\n      schema: OrderSchema\n    }\n  ]),\n  MongooseModule.forFeature([\n    {\n      name: Customer.name,\n      schema: CustomerSchema\n    }\n  ]),\n  MongooseModule.forFeature([\n    {\n      name: Driver.name,\n      schema: DriverrSchema\n    }\n  ])],\n  controllers: [DeliveryController],\n  providers: [DeliveryService, JwtStrategy],\n  exports: [DeliveryService]\n})\nexport class DeliveryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryService.html":{"url":"injectables/DeliveryService.html","title":"injectable - DeliveryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllDriverDelivery\n                            \n                            \n                                    Async\n                                findDeliveryOrder\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deliveryModel: Model, driverModel: Model, orderModel: Model, customerModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/delivery/delivery.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deliveryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        driverModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDelivery: Object[])\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDelivery\n                                    \n                                            Object[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllDriverDelivery\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllDriverDelivery(driverId)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    driverId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDeliveryOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDeliveryOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateDelivery)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDelivery\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Delivery } from './entities/delivery.entity';\nimport { Model } from 'mongoose'\nimport { Driver } from '../driver/entities/drivers.entity';\nimport { Order } from '../order/entities/order.entity';\nimport { Customer } from '../customer/entities/customer.entity';\n\n@Injectable()\nexport class DeliveryService {\n  constructor(@InjectModel(Delivery.name) private readonly deliveryModel: Model ,\n  @InjectModel(Driver.name) private readonly driverModel: Model ,\n  @InjectModel(Order.name) private readonly orderModel: Model ,\n  @InjectModel(Customer.name) private readonly customerModel: Model ) {}\n  \n  async findAll(/* pagination: PaginationDto */) {\n    const deliveryList = await this.deliveryModel.find()/* .limit(limit).skip(page * limit) */\n    const deliveries = []\n    for (const deliver of deliveryList) {\n      const driverId = deliver.driverId\n      const driver = await this.driverModel.findOne({_id: driverId})\n      const driverName = driver.name\n      const data = {\n        _id: deliver._id,\n        driverId: deliver.driverId,\n        orderId: deliver.orderId,\n        driverName\n      }\n      \n      deliveries.push(data)    \n    }\n    return deliveries\n  }\n\n\n  async findOne(id: string) {\n\n    try {\n      const delivery = await this.deliveryModel.findOne({ _id: id }).exec();\n      if (!delivery) {\n        throw new NotFoundException(`Delivery #${id} not found`);\n      }\n      return delivery;\n    } catch (error) {\n      throw new NotFoundException(`Delivery #${id} not found`);\n    }\n  }\n\n  async findDeliveryOrder() {\n    const deliveryList = await this.deliveryModel.find()/* .limit(limit).skip(page * limit) */\n    \n    const deliveries = []\n    for (const deliver of deliveryList) {\n      const orderId = deliver.orderId\n      const driverId = deliver.driverId\n      const driver = await this.driverModel.findOne({_id: driverId})\n      const order = await this.orderModel.findOne({_id: orderId})\n      const customerId = order.customerId\n      const customer = await this.customerModel.findOne({_id: customerId})\n      const driverName = driver.name\n      const data = {\n        _id: deliver._id,\n        driverId: deliver.driverId,\n        orderId: deliver.orderId,\n        date: order.date,\n        customerName: customer.name,\n        customerAddress: customer.address,\n        status:order.status,\n        contact:customer.contact,\n        driverName\n      }\n      \n      deliveries.push(data)    \n    }\n    return deliveries\n  }\n\n    create(createDelivery: Object[]) {\n    const delivery = new this.deliveryModel(createDelivery) \n    return delivery.save()\n  }\n\n  async update(id: string, updateDelivery) {\n      await this.deliveryModel\n      .findOneAndUpdate({ _id: id }, { $set: updateDelivery }, { new: true })\n      .exec();\n  }\n\n  async remove(id: string) {\n    const product = await this.findOne(id)\n    return product.remove();\n  }\n\n  async findAllDriverDelivery(driverId) {\n    const deliveryList = await this.deliveryModel.find({driverId: driverId})/* .limit(limit).skip(page * limit) */\n    const deliveries = []\n    for (const deliver of deliveryList) {\n      const driverId = deliver.driverId\n      const driver = await this.driverModel.findOne({_id: driverId})\n      const driverName = driver.name\n      const data = {\n        _id: deliver._id,\n        driverId: deliver.driverId,\n        orderId: deliver.orderId,\n        driverName\n      }\n      \n      deliveries.push(data)    \n    }\n    return deliveries\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Driver.html":{"url":"classes/Driver.html","title":"class - Driver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Driver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/entities/drivers.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                device\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                photo\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/entities/drivers.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n/* eslint-disable prettier/prettier */\n@Schema()\nexport class Driver  extends Document {\n  \n  @Prop()\n  name: string;\n\n  @Prop()\n  contact: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  username: string;\n\n  @Prop()\n  password: string;\n  \n  @Prop()\n  device: string\n  \n  @Prop()\n  photo: string\n}\n\nexport const DriverrSchema = SchemaFactory.createForClass(Driver)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DriverController.html":{"url":"controllers/DriverController.html","title":"controller - DriverController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DriverController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/driver.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                driver\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                validateManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDriverDto: CreateDriverDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/driver/driver.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDriverDto\n                                    \n                                                CreateDriverDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/driver/driver.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/driver/driver.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/driver/driver.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateDriverDto: UpdateDriverDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/driver/driver.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDriverDto\n                                    \n                                                UpdateDriverDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateManager(login)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalStrategy)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/driver/driver.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // import { PaginationDto } from './../common/pagination/pagination-dto';\nimport { LoginDriveDto } from './dto/login-driver.dto';\nimport { \n  Body, \n  Controller, \n  Delete, Get, \n  Param, \n  Patch, \n  Post, \n  Query,\n  UseGuards} from '@nestjs/common';\nimport { DriverService } from './driver.service';\nimport { CreateDriverDto } from './dto/create-driver.dto';\nimport { UpdateDriverDto } from './dto/update-driver.dto';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\nimport { LocalStrategy } from './auth/strategy/local.strategy';\n\n@Controller('driver')\nexport class DriverController {\n  constructor(private readonly driverService: DriverService) {}\n\n@UseGuards(JwtAuthGuard)\n  @Get()\n  findAll(/* @Query() pagination: PaginationDto */) {\n    return this.driverService.findAll(/* pagination */);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.driverService.findOne(id)\n  }\n\n  @Post(\"add\")\n  create(@Body() createDriverDto: CreateDriverDto) {\n    return this.driverService.create(createDriverDto);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateDriverDto: UpdateDriverDto) {\n    return this.driverService.update(id, updateDriverDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.driverService.remove(id);  \n  }\n  @UseGuards(LocalStrategy)\n  @Post('/login')\n  async validateManager(@Body() login) { \n    return await this.driverService.validateDriver(login)\n    //  await this.managerService.validateManager(login);\n    // let manager = req.user.data\n    // let credentials = { token:token.access_token,\n    //   id: manager.id,\n    //   status: manager.status,\n    //  }  \n    // return token\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DriverModule.html":{"url":"modules/DriverModule.html","title":"module - DriverModule","body":"\n                   \n\n\n\n\n    Modules\n    DriverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DriverModule\n\n\n\ncluster_DriverModule_providers\n\n\n\ncluster_DriverModule_exports\n\n\n\n\nDriverService \n\nDriverService \n\n\n\nDriverModule\n\nDriverModule\n\nDriverService  -->\n\nDriverModule->DriverService \n\n\n\n\n\nDriverService\n\nDriverService\n\nDriverModule -->\n\nDriverService->DriverModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nDriverModule -->\n\nLocalStrategy->DriverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/driver/driver.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DriverService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DriverController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DriverService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwtConstants } from '../auth0/constants';\nimport { DriverController } from './driver.controller';\nimport { DriverService } from './driver.service';\nimport { Driver, DriverrSchema } from './entities/drivers.entity';\nimport { LocalStrategy } from './auth/strategy/local.strategy'\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Driver.name,\n      schema: DriverrSchema\n    }\n  ]),\n  PassportModule,\n  JwtModule.register({\n    secret: jwtConstants.secret,\n    signOptions: { expiresIn: '60s' },\n  })],\n  controllers: [DriverController],\n  providers: [DriverService, LocalStrategy, JwtStrategy],\n  exports: [DriverService]\n})\nexport class DriverModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DriverService.html":{"url":"injectables/DriverService.html","title":"injectable - DriverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DriverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/driver.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                loginWithCredentials\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driverModel: Model, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/driver/driver.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driverModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDriverDto: CreateDriverDto)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDriverDto\n                                    \n                                                CreateDriverDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginWithCredentials\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithCredentials(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateDriverDto: UpdateDriverDto)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDriverDto\n                                    \n                                                UpdateDriverDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDriver(login)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/driver.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LoginDriveDto } from './dto/login-driver.dto';\nimport { HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\nimport { CreateDriverDto } from './dto/create-driver.dto';\nimport { UpdateDriverDto } from './dto/update-driver.dto';\nimport { Driver } from './entities/drivers.entity';\nimport * as bcrypt from 'bcrypt'\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class DriverService {\n  constructor(\n    @InjectModel(Driver.name) private readonly driverModel: Model,\n    private jwtService: JwtService) {}\n\n    findAll(/* pagination: PaginationDto */) {\n/*       const{ limit , offset } = pagination\n      const page = offset - 1 */\n      return this.driverModel.find()/* .limit(limit).skip(page * limit) */\n    }\n  \n    async findOne(id: string) {     \n       \n      try {\n        const driver = await this.driverModel.findOne({ _id: id }).exec();\n        \n        if (!driver) {\n          throw new NotFoundException(`Driver #${id} not found`);\n        }\n        return driver;\n      } catch (error) {\n        return error\n        \n      }    \n    }\n  \n  async create(createDriverDto: CreateDriverDto) {\n      const salt = await bcrypt.genSalt(10);\n      const hashPassword = await bcrypt.hash(createDriverDto.password, salt)\n      const user = await this.driverModel.findOne({ username: createDriverDto.username })\n\n      if (user) {\n        throw new HttpException('username already exist!', HttpStatus.CONFLICT)\n      }\n      const data = {\n        ...createDriverDto,\n        password: hashPassword\n\n      }\n      const customer = new this.driverModel(data);\n      return customer.save();\n    }\n  \n    async update(id: string, updateDriverDto: UpdateDriverDto) {\n      try {\n        const driver = await this.driverModel.findOneAndUpdate({ _id: id }, { $set: updateDriverDto }, { new: true })\n        if(!driver) {\n        throw new HttpException('id does not exist!s', HttpStatus.NOT_FOUND)\n        }\n        return 'success'\n      } catch (e) {\n        throw new HttpException('id does not exist!', HttpStatus.NOT_FOUND)\n      }\n    }\n\n    async validateDriver(login): Promise {  \n      try {\n        const user = await this.driverModel.findOne({ username: login.username.toLocaleLowerCase() }).exec();        \n        const isMatch = await bcrypt.compare(login.password, user.password)\n        if (isMatch) {   \n          const token = await this.loginWithCredentials(user)          \n          return { id: user['_id'], status:'ok', ...token}\n        }\n        throw new HttpException('username or password not exist!',HttpStatus.UNAUTHORIZED)\n      } catch (err){\n        throw new HttpException('username or password not exist!',HttpStatus.UNAUTHORIZED)       \n      }\n    }\n  \n    async remove(id: string) {\n      const product = await this.findOne(id)\n      return product.remove();\n    }\n\n    async loginWithCredentials(user: any) {\n      const payload = { username: user.username, sub: user.id };                \n      return {\n          access_token: this.jwtService.sign(payload),\n      };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Expense.html":{"url":"classes/Expense.html","title":"class - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense/entity/expense.enitity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                date\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense/entity/expense.enitity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense/entity/expense.enitity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense/entity/expense.enitity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose'\n@Schema()\nexport class Expense  extends Document{\n    @Prop({default : new Date()})\n    date:Date\n\n    @Prop()\n    name:string\n\n    @Prop()\n    cost:number\n\n}\nexport const ExpenseSchema = SchemaFactory.createForClass(Expense)\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExpenseController.html":{"url":"controllers/ExpenseController.html","title":"controller - ExpenseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExpenseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense/expense.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                expense\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createExpenseDto: CreateExpenseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/expense/expense.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExpenseDto\n                                    \n                                                CreateExpenseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/expense/expense.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/expense/expense.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/expense/expense.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateExpenseDto: UpdateExpenseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/expense/expense.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExpenseDto\n                                    \n                                                UpdateExpenseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { UpdateExpenseDto } from './dto/update-expense.dto';\nimport { CreateExpenseDto } from './dto/create-expense.dto';\nimport { ExpenseService } from './expense.service';\nimport { Body, Controller, Delete, Get, Injectable, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { CreateOrderDto } from 'src/order/dto/create-order.dto';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\n\n@UseGuards(JwtAuthGuard)\n@Controller('expense')\nexport class ExpenseController {\n    constructor(private readonly expenseService:ExpenseService){}\n\n    @Get()\n    findAll(/*@Query() pagination: PaginationDto*/) {\n      return this.expenseService.findAll(/* pagination */);\n    }\n  \n    @Get(':id')\n    findOne(@Param('id') id: string) {\n      return this.expenseService.findOne(id)\n    }\n \n  \n    @Post(\"add\")\n    create(@Body() createExpenseDto: CreateExpenseDto) {\n      return this.expenseService.create(createExpenseDto);\n    }\n  \n    @Patch(':id')\n    update(@Param('id') id: string, @Body() updateExpenseDto: UpdateExpenseDto) {   \n    return this.expenseService.update(id, updateExpenseDto);\n    }\n  \n    @Delete(':id')\n    remove(@Param('id') id: string) {\n      return this.expenseService.remove(id);  \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpenseModule.html":{"url":"modules/ExpenseModule.html","title":"module - ExpenseModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpenseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExpenseModule\n\n\n\ncluster_ExpenseModule_providers\n\n\n\ncluster_ExpenseModule_exports\n\n\n\n\nExpenseService \n\nExpenseService \n\n\n\nExpenseModule\n\nExpenseModule\n\nExpenseService  -->\n\nExpenseModule->ExpenseService \n\n\n\n\n\nExpenseService\n\nExpenseService\n\nExpenseModule -->\n\nExpenseService->ExpenseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expense/expense.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpenseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExpenseController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExpenseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ExpenseService } from './expense.service';\nimport { ExpenseController } from './expense.controller';\nimport { Expense, ExpenseSchema } from './entity/expense.enitity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Module } from '@nestjs/common';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n    imports:[MongooseModule.forFeature([\n        {\n          name: Expense.name,\n          schema: ExpenseSchema\n        }]\n    )],\n    controllers:[ExpenseController],\n    providers:[ExpenseService, JwtStrategy],\n    exports:[ExpenseService]\n})\nexport class ExpenseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense/expense.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/expense/expense.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createExpenseDto: CreateExpenseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/expense/expense.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExpenseDto\n                                    \n                                                CreateExpenseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/expense/expense.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/expense/expense.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/expense/expense.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateExpenseDto: UpdateExpenseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/expense/expense.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExpenseDto\n                                    \n                                                UpdateExpenseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateExpenseDto } from './dto/update-expense.dto';\nimport { CreateExpenseDto } from './dto/create-expense.dto';\nimport { Expense } from './entity/expense.enitity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport {Model} from 'mongoose'\n@Injectable()\nexport class ExpenseService {\nconstructor(\n    @InjectModel(Expense.name)\n    private readonly expenseModel:Model\n){}\n\n    async findAll(/* pagination: PaginationDto */) {\n        const expensList = await this.expenseModel.find()/* .limit(limit).skip(page * limit) */\n        return expensList\n      }\n      async findOne(id: string) {\n        try {\n          const expense = await this.expenseModel.findOne({ _id: id }).exec();\n          if (!expense) {\n            throw new NotFoundException(`Expense #${id} not found`);\n          }\n          return expense\n        } catch (error) {\n          throw new NotFoundException(`Expense #${id} not found`);\n  \n        }   \n      }\n\n      async create(createExpenseDto: CreateExpenseDto) {\n        const expense = await this.expenseModel.create(createExpenseDto)\n        return expense.save();\n      }\n    \n      async update(id: string, updateExpenseDto: UpdateExpenseDto) { \n        await this.findOne(id)     \n        await this.expenseModel\n        .findOneAndUpdate({ _id: id }, { $set: updateExpenseDto }, { new: true })\n        .exec();\n        }\n\n      async remove(id: string) {\n        await this.findOne(id)\n        const expense = await this.expenseModel.findOne({ _id: id }).exec();\n        return expense.remove();\n      }\n  \n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IncomeStatementController.html":{"url":"controllers/IncomeStatementController.html","title":"controller - IncomeStatementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IncomeStatementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/income-statement/income-statement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                incomeStatement\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(startDate: string, endDate: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/income-statement/income-statement.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { IncomeStatementService } from './income-statement.service';\nimport { Controller, Get, NotFoundException, Query, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\n\n@UseGuards(JwtAuthGuard)\n@Controller('incomeStatement')\nexport class IncomeStatementController {\nconstructor(private readonly incomeStatementService:IncomeStatementService){}\n\n    @Get()\n    async findAll(@Query('startDate') startDate: string,@Query('endDate') endDate: string){\n        try {\n            return this.incomeStatementService.findAll(startDate,endDate)\n        } catch (error) {\n            throw new NotFoundException(`No Income Statement Record on ${startDate}  - ${endDate}`);\n          }\n        \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncomeStatementModule.html":{"url":"modules/IncomeStatementModule.html","title":"module - IncomeStatementModule","body":"\n                   \n\n\n\n\n    Modules\n    IncomeStatementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IncomeStatementModule\n\n\n\ncluster_IncomeStatementModule_exports\n\n\n\ncluster_IncomeStatementModule_providers\n\n\n\n\nIncomeStatementService \n\nIncomeStatementService \n\n\n\nIncomeStatementModule\n\nIncomeStatementModule\n\nIncomeStatementService  -->\n\nIncomeStatementModule->IncomeStatementService \n\n\n\n\n\nIncomeStatementService\n\nIncomeStatementService\n\nIncomeStatementModule -->\n\nIncomeStatementService->IncomeStatementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/income-statement/income-statement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IncomeStatementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IncomeStatementController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IncomeStatementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IncomeStatementService } from './income-statement.service';\nimport { IncomeStatementController } from './income-statement.controller';\nimport { Order, OrderSchema } from './../order/entities/order.entity';\nimport { Purchase, PurchaseSchema } from './../purchase/entity/purchase.enity';\nimport { Expense, ExpenseSchema } from './../expense/entity/expense.enitity';\nimport { Product, ProductSchema } from './../product/entity/product.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Module } from '@nestjs/common';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n    imports:[\n        MongooseModule.forFeature([\n            {\n                name:Product.name,\n                schema:ProductSchema\n            },\n            {\n                name:Expense.name,\n                schema:ExpenseSchema\n            },\n            {\n                name: Purchase.name,\n                schema: PurchaseSchema\n            },\n            {\n                name: Order.name,\n                schema: OrderSchema\n            }\n        ])\n    ],\n  controllers:[IncomeStatementController],\n  providers:[IncomeStatementService, JwtStrategy],\n  exports:[IncomeStatementService]\n})\nexport class IncomeStatementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IncomeStatementService.html":{"url":"injectables/IncomeStatementService.html","title":"injectable - IncomeStatementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IncomeStatementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/income-statement/income-statement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(purchaseModel: Model, orderModel: Model, expenseModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/income-statement/income-statement.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        purchaseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/income-statement/income-statement.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '02/02/2022'\n                                    \n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '03/23/2022'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Articles } from './../purchase/dto/articles.dto';\nimport { Expense } from './../expense/entity/expense.enitity';\nimport { Order } from './../order/entities/order.entity';\nimport { Purchase } from './../purchase/entity/purchase.enity';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class IncomeStatementService {\n    constructor(\n        @InjectModel(Purchase.name)\n        private readonly purchaseModel: Model,\n        @InjectModel(Order.name)\n        private readonly orderModel: Model,\n        @InjectModel(Expense.name)\n        private readonly expenseModel: Model\n        ){}\n\n        async  findAll(startDate:string= '02/02/2022',endDate:string = '03/23/2022'){\n\n            \n            const orderList =  await this.orderModel.find({\n                date: {\n                  $gte:startDate,\n                  $lt:endDate\n              },\n              status:'Success'\n              })\n              const purchaseList =  await this.purchaseModel.find({\n                dateOfPurchase: {\n                  $gte:startDate,\n                  $lt:endDate\n              },\n              })\n              const expenseList =  await this.expenseModel.find({\n                date: {\n                  $gte:startDate,\n                  $lt:endDate\n              },\n              })\n          \n          \n        //       const customerOrder = []\n        // for (const order of orderList) {\n        // const articles = order.articles\n       \n        // for (const productList of articles) {\n        //   const prodId = productList.productId\n        //   const purchase = await this.purchaseModel.findOne({dateOfPurchase: {\n        //     $gte:startDate,\n        //     $lt:endDate\n        // },productId: prodId})\n        //   console.log(prodId,purchase);\n          \n        // }\n        // const customer = await this.purchaseModel.findOne({_id: customerId})\n        // const data = {\n        //   order,\n        //   customer\n        // }\n        //  customerOrder.push(data)    \n      // }\n\n                  //order\n           const order =orderList.map(x=>{\n            return {\n\n              total:x.articles.map(articles=> articles.quantity * articles.sellingPrice).reduce((x,y)=>x+y),\n              date:x.date,\n              articles:x.articles\n            }\n           })\n           let totalOrder = 0\n           if(order.length !==0){\n            totalOrder= order.map(x=>x.total).reduce((x,y)=>x+y)\n           }\n              //purchase \n           const purchase =purchaseList.map(x=>{\n            return {\n            articles:x.articles,\n              total:x.articles.map(articles=> articles.quantity * articles.unitCost).reduce((x,y)=>x+y),\n              date:x.dateOfPurchase\n            }\n           })\n           let totalPurchase = 0\n           if(purchase.length !==0){\n            totalPurchase = purchase.map(x=>x.total).reduce((x,y)=>x+y)\n           }\n\n        \n            let totalExpense = 0\n            if(expenseList.length !==0){\n              totalExpense = expenseList.map(x=>x.cost).reduce((x,y)=>x+y)\n            }\n              return   {\n                purchase:purchase,\n                order:order,\n                expense:expenseList,\n               totalExpense,\n                totalPurchase,\n                totalOrder\n              }\n        }\n     \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  // canActivate(context: ExecutionContext) {\n  //   const res = context.switchToHttp().getResponse()\n    \n  //   return super.canActivate(context);\n  // }\n\n  // handleRequest(err, user, info) {\n  //   // You can throw an exception based on either \"info\" or \"err\" arguments\n  //   if (err || !user) {\n  //     console.log('s');\n      \n  //     throw err || new UnauthorizedException();\n  //   }\n  //   return user;\n  // }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard-1.html":{"url":"injectables/JwtAuthGuard-1.html","title":"injectable - JwtAuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard-2.html":{"url":"injectables/JwtAuthGuard-2.html","title":"injectable - JwtAuthGuard-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard-3.html":{"url":"injectables/JwtAuthGuard-3.html","title":"injectable - JwtAuthGuard-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/customer/auth/strategy/jwt.strategy.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/auth/strategy/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwtConstants } from '../../../auth0/constants';\n\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwtConstants.secret\n        })\n    }\n\n    async validate(payload: any) {\n        return {userId: payload.sub, username: payload.username}\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy-1.html":{"url":"classes/JwtStrategy-1.html","title":"class - JwtStrategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/delivery/auth/strategy/jwt.strategy.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/auth/strategy/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwtConstants } from '../../../auth0/constants';\n\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwtConstants.secret\n        })\n    }\n\n    async validate(payload: any) {\n        return {userId: payload.sub, username: payload.username}\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy-2.html":{"url":"classes/JwtStrategy-2.html","title":"class - JwtStrategy-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/driver/auth/strategy/jwt.strategy.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/auth/strategy/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwtConstants } from '../../../auth0/constants';\n\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwtConstants.secret\n        })\n    }\n\n    async validate(payload: any) {\n        return {userId: payload.sub, username: payload.username}\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy-3.html":{"url":"classes/JwtStrategy-3.html","title":"class - JwtStrategy-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/manager/auth/strategy/jwt.strategy.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/auth/strategy/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwtConstants } from '../../../auth0/constants';\n\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwtConstants.secret\n        })\n    }\n\n    async validate(payload: any) {\n        return {userId: payload.sub, username: payload.username}\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard-1.html":{"url":"injectables/LocalAuthGuard-1.html","title":"injectable - LocalAuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard-2.html":{"url":"injectables/LocalAuthGuard-2.html","title":"injectable - LocalAuthGuard-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driverService: DriverService)\n                    \n                \n                        \n                            \n                                Defined in src/driver/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driverService\n                                                  \n                                                        \n                                                                        DriverService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username)\n                \n            \n\n\n            \n                \n                    Defined in src/driver/auth/strategy/local.strategy.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { DriverService } from '../../driver.service'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy, 'driver') {\n  constructor(private readonly driverService: DriverService) {\n    super();\n  }\n  async validate (username): Promise {\n    \n    const driver = await this.driverService.validateDriver(username);    \n    if (!driver) {\n      return { errorMsg:'Wrong username or password' }\n    }\n    \n    return { data: driver };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCustomerDto.html":{"url":"classes/LoginCustomerDto.html","title":"class - LoginCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/login-cutomer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/login-cutomer.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/login-cutomer.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class LoginCustomerDto {\n    \n  @IsString()\n  username: string;\n\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDriveDto.html":{"url":"classes/LoginDriveDto.html","title":"class - LoginDriveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDriveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/dto/login-driver.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/login-driver.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/driver/dto/login-driver.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class LoginDriveDto {\n    \n  @IsString()\n  username: string;\n\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginManagerDto.html":{"url":"classes/LoginManagerDto.html","title":"class - LoginManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/dto/login-manager.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/dto/login-manager.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/dto/login-manager.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class LoginManagerDto {\n    \n  @IsString()\n  username: string;\n\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/mailer/service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sendConfirmationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/customer/mailer/service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendConfirmationEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendConfirmationEmail(name, email, confirmationCode)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/mailer/service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmationCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {\n  constructor(private readonly mailerService: MailerService) {}\n\npublic sendConfirmationEmail(name, email, confirmationCode): void {  \n  this.mailerService.sendMail({\n    to: email,\n    from: 'noreply@nestjs.com',\n    subject: \"Please confirm your account\",\n    html: `Email Confirmation\n        Hello ${name}\n        Please confirm your email by clicking on the following link\n         Click here\n        `,\n      }).catch(err => console.log(err));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Manager.html":{"url":"classes/Manager.html","title":"class - Manager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Manager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/entities/manager.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/entities/manager.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/entities/manager.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/entities/manager.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/entities/manager.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/manager/entities/manager.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n/* eslint-disable prettier/prettier */\n@Schema()\nexport class Manager  extends Document {\n  \n  @Prop()\n  name: string;\n\n  @Prop()\n  contact: string;\n\n  @Prop()\n  username: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  address: string;\n}\n\nexport const ManagerSchema = SchemaFactory.createForClass(Manager)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagerController.html":{"url":"controllers/ManagerController.html","title":"controller - ManagerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/manager.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                manager\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                validateManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createManagerDto: CreateManagerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/manager/manager.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createManagerDto\n                                    \n                                                CreateManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/manager/manager.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/manager/manager.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/manager/manager.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateManagerDto: UpdateManagerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/manager/manager.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateManagerDto\n                                    \n                                                UpdateManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateManager(login, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(ManagerLocalStrategy)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/manager/manager.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // import { PaginationDto } from './../common/pagination/pagination-dto';\nimport { LoginManagerDto } from './dto/login-manager.dto';\nimport { \n  Body, \n  Controller, \n  Delete, Get, \n  Param, \n  Patch, \n  Post, \n  Query,\n  Res,\n  UseGuards} from '@nestjs/common';\nimport { CreateManagerDto } from './dto/create-manager.dto';\nimport { UpdateManagerDto } from './dto/update-manager.dto';\nimport { ManagerService } from './manager.service';\nimport { LocalAuthGuard } from './auth/guard/local-auth.guard'\nimport { Response } from 'express'\nimport { ManagerLocalStrategy } from './auth/strategy/local.strategy';\n\n@Controller('manager')\nexport class ManagerController {\n  constructor(private readonly managerService: ManagerService) {}\n\n  @Get()\n  findAll(/* @Query() pagination: PaginationDto */) {\n    return this.managerService.findAll(/* pagination */);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.managerService.findOne(id)\n  }\n\n  @Post()\n  create(@Body() createManagerDto: CreateManagerDto) {\n    return this.managerService.create(createManagerDto);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateManagerDto: UpdateManagerDto) {\n    return this.managerService.update(id, updateManagerDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.managerService.remove(id);  \n  }\n  @UseGuards(ManagerLocalStrategy)\n  @Post('/login')\n  async validateManager(@Body() login, @Res({ passthrough: true }) response: Response) { \n    const data = await this.managerService.validateManager(login)\n    let token = data.access_token\n    const CookieOptions = {\n      httpOnly: true,\n      secure: true\n    }\n    response.cookie('jwt', token,  CookieOptions)\n     \n    //  await this.managerService.validateManager(login);\n    // let manager = req.user.data\n    // let credentials = { token:token.access_token,\n    //   id: manager.id,\n    //   status: manager.status,\n    //  }  \n    return data\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagerLocalStrategy.html":{"url":"injectables/ManagerLocalStrategy.html","title":"injectable - ManagerLocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagerLocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(managerService: ManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/manager/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        managerService\n                                                  \n                                                        \n                                                                        ManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/auth/strategy/local.strategy.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { ManagerService } from '../../manager.service'\n\n@Injectable()\nexport class ManagerLocalStrategy extends PassportStrategy(Strategy, 'manager') {\n  constructor(private readonly managerService: ManagerService) {\n    super();\n  }\n  async validate (username): Promise {\n    \n    const manager = await this.managerService.validateManager(username);    \n    if (!manager) {\n      return { errorMsg:'Wrong username or password' }\n    }\n    \n    return { data: manager };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagerModule.html":{"url":"modules/ManagerModule.html","title":"module - ManagerModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagerModule\n\n\n\ncluster_ManagerModule_providers\n\n\n\ncluster_ManagerModule_exports\n\n\n\n\nJwtSecret2Service \n\nJwtSecret2Service \n\n\n\nManagerService \n\nManagerService \n\n\n\nManagerModule\n\nManagerModule\n\nJwtSecret2Service  -->\n\nManagerModule->JwtSecret2Service \n\n\n\nManagerService  -->\n\nManagerModule->ManagerService \n\n\n\n\n\nManagerLocalStrategy\n\nManagerLocalStrategy\n\nManagerModule -->\n\nManagerLocalStrategy->ManagerModule\n\n\n\n\n\nManagerService\n\nManagerService\n\nManagerModule -->\n\nManagerService->ManagerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/manager/manager.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagerLocalStrategy\n                        \n                        \n                            ManagerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtSecret2Service\n                        \n                        \n                            ManagerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwtConstants } from '../auth0/constants';\nimport { Manager, ManagerSchema } from './entities/manager.entity';\nimport { ManagerController } from './manager.controller';\nimport { ManagerService } from './manager.service';\nimport { ManagerLocalStrategy } from './auth/strategy/local.strategy'\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Manager.name,\n      schema: ManagerSchema\n    }\n  ]),\n  PassportModule,\n  JwtModule.register({\n    secret: jwtConstants.secret,\n    signOptions: { expiresIn: '1d' },\n  })\n],\n  controllers: [ManagerController],\n  providers: [ManagerService, ManagerLocalStrategy, {\n    provide: 'JwtSecret2Service',\n    useExisting: JwtService,\n  }],\n  exports: [ManagerService, 'JwtSecret2Service']\n})\nexport class ManagerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagerService.html":{"url":"injectables/ManagerService.html","title":"injectable - ManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                loginWithCredentials\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(managerModel: Model, jwtSecret2)\n                    \n                \n                        \n                            \n                                Defined in src/manager/manager.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        managerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtSecret2\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createManagerDto: CreateManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createManagerDto\n                                    \n                                                CreateManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginWithCredentials\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithCredentials(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateManagerDto: UpdateManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateManagerDto\n                                    \n                                                UpdateManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateManager(login)\n                \n            \n\n\n            \n                \n                    Defined in src/manager/manager.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\nimport { Manager } from './entities/manager.entity';\nimport { CreateManagerDto } from './dto/create-manager.dto';\nimport { UpdateManagerDto } from './dto/update-manager.dto';\nimport { LoginManagerDto } from './dto/login-manager.dto';\n\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class ManagerService {\n  constructor(\n    @InjectModel(Manager.name) private readonly managerModel: Model,\n    @Inject('JwtSecret2Service') private jwtSecret2) {}\n\n    findAll(/* pagination: PaginationDto */) {\n/*       const { limit , offset } = pagination\n      const page = offset - 1 */\n      return this.managerModel.find()/* .limit(limit).skip(page * limit) */\n    }\n  \n    async findOne(id: string) {\n      try {\n        const manager = await this.managerModel.findOne({ _id: id }).exec();\n        if (!manager) {\n          throw new NotFoundException(`Manager #${id} not found`);\n        }\n        return manager;\n      } catch (error) {\n        throw new NotFoundException(`Manager #${id} not found`);\n      }\n     \n    }\n  \n    async create(createManagerDto: CreateManagerDto) {\n      const salt = await bcrypt.genSalt(10);\n      const hashPassword = await bcrypt.hash(createManagerDto.password, salt)\n      const user = await this.managerModel.findOne({ username: createManagerDto.username }).exec();\n\n      if (user) {\n        throw new HttpException('username already exist!', HttpStatus.CONFLICT)\n      }\n      const data = {\n        ...createManagerDto,\n        password: hashPassword\n      }\n      const customer = new this.managerModel(data);\n \n      return customer.save()\n    }\n  \n    async validateManager(login): Promise {\n      \n      try {\n        const user = await this.managerModel.findOne({ username: login.username.toLocaleLowerCase() }).exec();\n        \n        const isMatch = await bcrypt.compare(login.password, user.password)\n        if (isMatch) {   \n          const token = await this.loginWithCredentials(user)          \n          return { id: user['_id'], status:'ok', ...token}\n        }\n        throw new HttpException('username or password not exist!',HttpStatus.UNAUTHORIZED)\n      } catch (err){\n        throw new HttpException('username or password not exist!',HttpStatus.UNAUTHORIZED)       \n      }\n    }\n  \n    async update(id: string, updateManagerDto: UpdateManagerDto) {\n      try {\n        const manager = await this.managerModel\n        .findOneAndUpdate({ _id: id }, { $set: updateManagerDto }, { new: true })\n        if(!manager) {\n        throw new HttpException('id does not exist!', HttpStatus.NOT_FOUND)\n        }\n        return 'success'\n      } catch (e) {\n        throw new HttpException('id does not exist!', HttpStatus.NOT_FOUND)\n      }   \n    }\n  \n    async remove(id: string) {\n      const product = await this.findOne(id)\n      return product.remove();\n    }\n    \n    async loginWithCredentials(user: any) {\n      const payload = { username: user.username, sub: user.id };                \n      return {\n          access_token: this.jwtSecret2.sign(payload),\n      };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                            \n                                customerId\n                            \n                            \n                                date\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Articles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'Pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { Articles } from \"../dto/articles-dto\";\n/* eslint-disable prettier/prettier */\n@Schema()\nexport class Order  extends Document {\n  \n  @Prop()\n  customerId: string;\n\n  @Prop({ default: 'Pending'})\n  status: string;\n\n  @Prop()\n  articles: Articles[]\n\n  @Prop({default : new Date().toLocaleDateString() })\n  date: Date\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                customerOrder\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findOrder\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerOrder\n                        \n                    \n                \n            \n            \n                \ncustomerOrder(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('customer/:userId')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOrder\n                        \n                    \n                \n            \n            \n                \nfindOrder(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/details/:id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateOrderDto: updateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                updateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // import { PaginationDto } from './../common/pagination/pagination-dto';\nimport { \n  Body, \n  Controller, \n  Delete, Get, \n  Param, \n  Patch, \n  Post, \n  Query,\n  Req,\n  Res,\n  UseGuards} from '@nestjs/common';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { updateOrderDto } from './dto/update-order.dto';\nimport { OrderService } from './order.service';\n\n@UseGuards(JwtAuthGuard)\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Get()\n  findAll(/*@Req() req @Query() pagination: PaginationDto*/) {\n    return this.orderService.findAll(/* pagination */);\n  }\n\n  @Get('customer/:userId')\n  customerOrder(@Param('userId') id: string) {\n    return this.orderService.customerOrder(id);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id)\n  }\n  @Get('/details/:id')\n  findOrder(@Param('id') id: string) {\n    return this.orderService.findOrder(id)\n  }\n\n\n  @Post()\n  create(@Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(createOrderDto);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateOrderDto: updateOrderDto) {   \n  return this.orderService.update(id, updateOrderDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.orderService.remove(id);  \n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Purchase, PurchaseSchema } from './../purchase/entity/purchase.enity';\nimport { Product, ProductSchema } from './../product/entity/product.entity';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Customer, CustomerSchema } from '../customer/entities/customer.entity';\nimport { Order, OrderSchema } from './entities/order.entity';\nimport { OrderController } from './order.controller';\nimport { OrderService } from './order.service';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Order.name,\n      schema: OrderSchema\n    }\n  ]),MongooseModule.forFeature([\n    {\n      name: Product.name,\n      schema: ProductSchema\n    }\n  ]),MongooseModule.forFeature([\n    {\n      name: Customer.name,\n      schema: CustomerSchema\n    }\n  ]) ,\n  MongooseModule.forFeature([\n    {\n      name: Purchase.name,\n      schema: PurchaseSchema\n    }\n  ]) ],\n  controllers: [OrderController],\n  providers: [OrderService, JwtStrategy],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                customerOrder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOrder\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel: Model, customerModel: Model, productModel: Model, purchaseModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        purchaseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        customerOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    customerOrder(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrder(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateOrderDto: updateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                updateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Purchase } from './../purchase/entity/purchase.enity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\nimport { Order } from './entities/order.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Customer } from '../customer/entities/customer.entity';\nimport { updateOrderDto } from './dto/update-order.dto';\nimport { Product } from '../product/entity/product.entity';\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderModel: Model ,\n    @InjectModel(Customer.name) private readonly customerModel: Model ,\n    @InjectModel(Product.name) private readonly productModel: Model ,\n    @InjectModel(Purchase.name) private readonly purchaseModel: Model ,\n    \n    ) {}\n\n    async findAll(/* pagination: PaginationDto */) {\n\n      const orderList = await this.orderModel.find()/* .limit(limit).skip(page * limit) */\n      const customerOrder = []\n      for (const order of orderList) {\n        const customerId = order.customerId\n        const customer = await this.customerModel.findOne({_id: customerId})\n        const data = {\n          order,\n          customer\n        }\n         customerOrder.push(data)    \n      }\n      return customerOrder\n    }\n    \n    async customerOrder(id: string) {\n      const customerOrder = await this.orderModel.find({ customerId: id }).exec()\n      let arr = []\n      for (let product in customerOrder ) {\n        let data = {\n           articles: customerOrder[product].articles,\n           status:customerOrder[product].status \n        }\n        arr.push(data)\n      }\n      let orderList = []\n\n      for (let x in arr){\n        if (arr[x].articles.length != 1) {\n          for (let y in arr[x].articles) {\n            const product = await this.productModel.find({ _id: arr[x].articles[y].productId })\n            let merge = Object.assign(arr[x].articles[y],{ name:product[0].name,image:product[0].image,status:arr[x].status}) \n            orderList.push(merge)\n          }\n        } else {\n           const product = await this.productModel.find({ _id: arr[x].articles[0].productId })\n            let merge = Object.assign(arr[x].articles[0],{name:product[0].name,image:product[0].image,status:arr[x].status});\n            orderList.push(merge);               \n        }    \n      }\n       return orderList  \n    }\n    \n  \n    async findOne(id: string) {\n      try {\n        const order = await this.orderModel.findOne({ _id: id }).exec();\n        if (!order) {\n          throw new NotFoundException(`Order #${id} not found`);\n        }\n        return order\n      } catch (error) {\n        throw new NotFoundException(`Order #${id} not found`);\n\n      }   \n    }\n\n    async findOrder(id: string) {\n      try {\n        const order = await this.findOne(id)\n        if (!order) {\n          throw new NotFoundException(`Order #${id} not found`);\n        }\n        const product = []\n        for (let key in order.articles) {\n          const productId = order.articles[key].productId\n          const products = await this.productModel.findOne({ _id: productId }).exec();\n          const data = {\n            name: products.name,\n            image:products.image\n          }\n          const newObj = Object.assign(order.articles[key],data); \n          product.push(newObj)\n        }\n        const customerId = order.customerId\n        const customer = await this.customerModel.findOne({_id: customerId})\n\n        return {\n          _id:order._id,\n          date:order.date,\n          articles:order.articles,\n          name:customer.name,\n          address:customer.address,\n          contact:customer.contact,\n          status:order.status\n        }\n      } catch (error) {\n        throw new NotFoundException(`Order #${id} not found`);\n\n      }\n    }\n    async create(createOrderDto: CreateOrderDto) {\n      const order = await this.orderModel.create(createOrderDto)\n      return order.save();\n    }\n  \n    async update(id: string, updateOrderDto: updateOrderDto) {      \n      await this.orderModel\n      .findOneAndUpdate({ _id: id }, { $set: updateOrderDto }, { new: true })\n      .exec();\n      }\n\n      async remove(id: string) {\n      const order = await this.orderModel.findOne({ _id: id }).exec();\n      return order.remove();\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entity/product.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                sellingPrice\n                            \n                            \n                                storeId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entity/product.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entity/product.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entity/product.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entity/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellingPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entity/product.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entity/product.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n@Schema()\nexport class Product extends Document{\n    @Prop()\n    name:string\n\n    @Prop()\n    storeId:string\n\n    @Prop()\n    category:string\n\n    @Prop()\n    description:string\n\n    @Prop()\n    image:string\n\n    @Prop()\n    sellingPrice:number\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product)\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { UpdateProductDto } from './dto/update-product-dto';\n\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { ProductService } from './product.service';\nimport { Body, Controller, Get, Param, Post, Patch, Delete, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\n\n@UseGuards(JwtAuthGuard)\n@Controller('product')\nexport class ProductController {\n    constructor(private readonly  productService:ProductService){}\n\n    @Get()\n    findAll(){\n        return this.productService.findAll()\n    }\n    @Get(':id')\n    findOne(@Param('id') id: string){\n        return this.productService.findOne(id)\n    }\n    @Post('add')\n    create(@Body() createProductDto:CreateProductDto,@Body('name') name:string){\n        return this.productService.create(name,createProductDto)\n    }\n    @Patch(':id')\n    update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n        return this.productService.update(id, updateProductDto);\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.productService.remove(id);\n    }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Store, StoreSchema } from './../store/entity/store.entity';\nimport { Product, ProductSchema } from './entity/product.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductService } from './product.service';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n  imports:[MongooseModule.forFeature([{\n    name: Product.name,\n    schema: ProductSchema\n  },\n  {\n    name: Store.name,\n    schema: StoreSchema\n  }\n])],\n  controllers: [ProductController],\n  providers: [ProductService, JwtStrategy],\n  exports:[ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model, storeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateProductDto } from './dto/update-product-dto';\nimport { Store } from './../store/entity/store.entity';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { Product } from './entity/product.entity';\nimport { Injectable, NotFoundException, HttpException, HttpStatus } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class ProductService {\n    constructor(\n        @InjectModel(Product.name)\n        private readonly productModel: Model,\n        @InjectModel(Store.name)\n        private readonly storeModel: Model\n    ){}\n\n  async  findAll(){\n      const productList = await this.productModel.find()/* .limit(limit).skip(page * limit) */\n      const storeProduct = []\n      for (const product of productList) {\n        const storeId = product.storeId\n        const store = await this.storeModel.findOne({_id: storeId})\n        const data = {\n          _id: product._id,\n          sellingPrice: product.sellingPrice,\n          image: product.image,\n          storeId: product.storeId,\n          name: product.name,\n          store: store.name,\n          category: product.category,\n          description:product.description\n        }\n        storeProduct.push(data)    \n      }\n      return storeProduct\n    }\n\n   async findOne(id: string){\n      try {\n        const product = await this.productModel.findOne({_id : id}).exec() \n        \n        if(!product){\n            throw new NotFoundException(`Product #${id} not found`)\n        }\n\n        return product\n      } catch (error) {\n        throw new NotFoundException(`Product #${id} not found`)\n      }\n       \n   }\n\n   async create(name: string, createProductDto: CreateProductDto) {\n    const product = new this.productModel(createProductDto);\n    const isExisting = await this.productModel.findOne({ name: name }).exec()\n\n    if (isExisting) {\n      throw new HttpException('product already exist!', HttpStatus.CONFLICT)\n    }\n    return product.save();\n  }\n\n   async update(id:string, updateProductDto:UpdateProductDto){\n          await this.findOne(id)\n          await this.productModel\n        .findOneAndUpdate({ _id: id }, { $set: updateProductDto }, { new: true })\n        .exec();   \n   }\n\n   async remove(id: string) {\n    const store = await this.findOne(id)\n    return store.remove();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Purchase.html":{"url":"classes/Purchase.html","title":"class - Purchase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Purchase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase/entity/purchase.enity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                            \n                                dateOfPurchase\n                            \n                            \n                                storeId\n                            \n                            \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Articles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/entity/purchase.enity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfPurchase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/entity/purchase.enity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/entity/purchase.enity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/purchase/entity/purchase.enity.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from 'mongoose'\nimport { Articles } from \"../dto/articles.dto\";\n@Schema()\nexport class Purchase extends Document{\n \n    @Prop({default: new Date()})\n    dateOfPurchase:Date\n\n    @Prop()\n    articles: Articles[]\n\n    @Prop()\n    storeId: string\n\n    @Prop()\n    totalAmount: number\n\n\n}\n\nexport const PurchaseSchema = SchemaFactory.createForClass(Purchase)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PurchaseController.html":{"url":"controllers/PurchaseController.html","title":"controller - PurchaseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PurchaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase/purchase.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                purchase\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findPuchase\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPurchaseDto: CreatePurchaseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/purchase/purchase.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPurchaseDto\n                                    \n                                                CreatePurchaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/purchase/purchase.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/purchase/purchase.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findPuchase\n                        \n                    \n                \n            \n            \n                \nfindPuchase(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list/:id')\n                \n            \n\n            \n                \n                    Defined in src/purchase/purchase.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/purchase/purchase.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, createPurchaseDto: CreatePurchaseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/purchase/purchase.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPurchaseDto\n                                    \n                                                CreatePurchaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreatePurchaseDto } from './dto/create-purchase.dto';\nimport { PurchaseService } from './purchase.service';\nimport { Body, Controller, Get, Post, Param, Patch, Delete, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\n\n@UseGuards(JwtAuthGuard)\n@Controller('purchase')\nexport class PurchaseController {\n    constructor(private readonly purchaseService:PurchaseService){}\n\n    @Get()\n    findAll(){\n        return this.purchaseService.findAll()\n    }\n    @Get(':id')\n    findOne(@Param('id') id:string){\n        return this.purchaseService.findOne(id)\n    }\n    @Get('list/:id')\n    findPuchase(@Param('id') id:string){\n        return this.purchaseService.findPuchase(id)\n    }\n    @Post('add')\n    create(@Body() createPurchaseDto:CreatePurchaseDto){\n        return this.purchaseService.create(createPurchaseDto)\n    }\n    @Patch(':id')\n    update(@Param('id') id:string,@Body() createPurchaseDto:CreatePurchaseDto){\n        return this.purchaseService.update(id,createPurchaseDto)\n    }\n    @Delete(':id')\n    remove(@Param('id') id:string){\n        return this.purchaseService.remove(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PurchaseModule.html":{"url":"modules/PurchaseModule.html","title":"module - PurchaseModule","body":"\n                   \n\n\n\n\n    Modules\n    PurchaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PurchaseModule\n\n\n\ncluster_PurchaseModule_exports\n\n\n\ncluster_PurchaseModule_providers\n\n\n\n\nPurchaseService \n\nPurchaseService \n\n\n\nPurchaseModule\n\nPurchaseModule\n\nPurchaseService  -->\n\nPurchaseModule->PurchaseService \n\n\n\n\n\nPurchaseService\n\nPurchaseService\n\nPurchaseModule -->\n\nPurchaseService->PurchaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/purchase/purchase.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PurchaseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PurchaseController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PurchaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Product,ProductSchema } from './../product/entity/product.entity';\nimport { Store, StoreSchema } from './../store/entity/store.entity';\nimport { Purchase, PurchaseSchema } from './entity/purchase.enity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PurchaseController } from './purchase.controller';\nimport { Module } from '@nestjs/common';\nimport { PurchaseService } from './purchase.service';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n  imports:[MongooseModule.forFeature([\n    {\n      name:Purchase.name,\n      schema:PurchaseSchema\n    },\n    {\n      name: Store.name,\n      schema: StoreSchema\n    },\n    {\n      name: Product.name,\n      schema: ProductSchema\n    }\n  ])],\n  controllers:[PurchaseController],\n  providers: [PurchaseService, JwtStrategy],\n  exports: [PurchaseService]\n})\nexport class PurchaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PurchaseService.html":{"url":"injectables/PurchaseService.html","title":"injectable - PurchaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PurchaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase/purchase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPuchase\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(purchaseModel: Model, storeModel: Model, productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/purchase/purchase.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        purchaseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPurchaseDto: CreatePurchaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/purchase/purchase.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPurchaseDto\n                                    \n                                                CreatePurchaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/purchase/purchase.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/purchase/purchase.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findPuchase\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPuchase(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/purchase/purchase.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/purchase/purchase.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePurchaseDto: UpdatePurchaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/purchase/purchase.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePurchaseDto\n                                    \n                                                UpdatePurchaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Product } from './../product/entity/product.entity';\nimport { Articles } from './dto/articles.dto';\nimport { Store } from './../store/entity/store.entity';\nimport { UpdatePurchaseDto } from './dto/update-purchase.dto';\nimport { CreatePurchaseDto } from './dto/create-purchase.dto';\nimport { Purchase } from './entity/purchase.enity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class PurchaseService {\n    constructor(\n        @InjectModel(Purchase.name)\n        private readonly purchaseModel: Model,\n        @InjectModel(Store.name)\n        private readonly storeModel: Model,\n        @InjectModel(Product.name)\n        private readonly productModel: Model\n    ){}\n\n   async findAll(){\n        const purchaseList = await this.purchaseModel.find()/* .limit(limit).skip(page * limit) */\n        const storePurchase = []\n        const purchaseArticles = []\n        for (const purchase of purchaseList) {\n          const storeId = purchase.storeId\n          const store = await this.storeModel.findOne({_id: storeId})\n          const data = {\n            _id:purchase._id,\n            articles:purchaseArticles,\n            dateOfPurchase: purchase.dateOfPurchase,\n            storeId: purchase.storeId,\n            store: store.name,\n            totalAmount:purchase.totalAmount\n\n          }\n          storePurchase.push(data)    \n        }\n        return storePurchase\n    }\n\n    async findOne(id: string){\n        try {\n          const purchase = await this.purchaseModel.findOne({_id : id}).exec() \n          if(!purchase){\n              throw new NotFoundException(`Purchase #${id} not found`)\n          }\n  \n          return purchase\n        } catch (error) {\n          throw new NotFoundException(`Purchase #${id} not found`)\n        }\n         \n     }\n  \n    create(createPurchaseDto:CreatePurchaseDto){\n     try {\n         return new this.purchaseModel(createPurchaseDto).save()\n     } catch (error) {\n         console.log(error);\n         \n     }\n    }\n    async update(id:string, updatePurchaseDto:UpdatePurchaseDto){\n      await this.findOne(id)\n      await this.purchaseModel\n      .findOneAndUpdate({ _id: id }, { $set: updatePurchaseDto }, { new: true })\n      .exec();\n      \n    }\n \n    async remove(id: string) {\n     const purchase = await this.findOne(id)\n     return purchase.remove();\n   }\n\n\n   async findPuchase(id: string){\n    try {\n      const purchase =  await this.findOne(id)\n      if(!purchase){\n          throw new NotFoundException(`Purchase #${id} not found`)\n      }\n      const purchaseArticles = []\n      for (const articles of purchase.articles) {\n        const productId = articles.productId\n        console.log(productId);\n        \n        const product = await this.productModel.findOne({_id: productId})\n        const article = {\n          productId: articles.productId,\n          unitCost: articles.unitCost,\n          quantity: articles.quantity,\n          name: product.name,\n          category: product.category,\n          image: product.image\n\n        }\n        purchaseArticles.push(article)\n      } \n      const storeId = purchase.storeId\n      const store = await this.storeModel.findOne({_id: storeId}) \n      const purchases = {\n        _id: purchase._id,\n        dateOfPurchase: purchase.dateOfPurchase,\n        storeId:purchase.storeId,\n        articles: purchaseArticles,\n        store:store.name,\n        totalAmount:purchase.totalAmount\n      }\n      console.log(purchases);\n      return purchases\n    } catch (error) {\n      throw new NotFoundException(`Purchase #${id} not found`)\n    }\n     \n }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SaleController.html":{"url":"controllers/SaleController.html","title":"controller - SaleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SaleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sale/sale.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sale\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findDailySale\n                            \n                            \n                                    Async\n                                findMonthSale\n                            \n                            \n                                    Async\n                                findProductSale\n                            \n                            \n                                    Async\n                                findYearlySale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDailySale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDailySale(startDate: string, endDate: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('daily')\n                \n            \n\n            \n                \n                    Defined in src/sale/sale.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMonthSale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMonthSale(startDate: string, endDate: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('monthly')\n                \n            \n\n            \n                \n                    Defined in src/sale/sale.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductSale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductSale(startDate: string, endDate: string, q: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('product')\n                \n            \n\n            \n                \n                    Defined in src/sale/sale.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    q\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findYearlySale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findYearlySale(startDate: string, endDate: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('yearly')\n                \n            \n\n            \n                \n                    Defined in src/sale/sale.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SaleService } from './sale.service';\nimport { Controller, Get, Query, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\n\n@UseGuards(JwtAuthGuard)\n@Controller('sale')\nexport class SaleController {\n    constructor(private readonly saleService:SaleService){}\n\n    @Get(\"daily\")\n    async findDailySale(@Query('startDate') startDate: string,@Query('endDate') endDate: string){\n        return this.saleService.findDailySale(startDate,endDate)\n    }\n\n    @Get(\"monthly\")\n    async findMonthSale(@Query('startDate') startDate: string,@Query('endDate') endDate: string){\n        return this.saleService.findMonthSale(startDate,endDate)\n    }\n\n    \n    @Get(\"yearly\")\n    async findYearlySale(@Query('startDate') startDate: string,@Query('endDate') endDate: string){\n        return this.saleService.findYearlySale(startDate,endDate)\n    }\n    \n    @Get(\"product\")\n    async findProductSale(@Query('startDate') startDate: string,@Query('endDate') endDate: string,@Query() q:any){\n        return this.saleService.findProductSale(startDate,endDate)\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SaleModule.html":{"url":"modules/SaleModule.html","title":"module - SaleModule","body":"\n                   \n\n\n\n\n    Modules\n    SaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SaleModule\n\n\n\ncluster_SaleModule_providers\n\n\n\ncluster_SaleModule_exports\n\n\n\n\nSaleService \n\nSaleService \n\n\n\nSaleModule\n\nSaleModule\n\nSaleService  -->\n\nSaleModule->SaleService \n\n\n\n\n\nSaleService\n\nSaleService\n\nSaleModule -->\n\nSaleService->SaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sale/sale.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SaleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SaleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Product,ProductSchema } from './../product/entity/product.entity';\nimport { SaleController } from './sale.controller';\nimport { SaleService } from './sale.service';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Order, OrderSchema } from './../order/entities/order.entity';\n\nimport { Purchase, PurchaseSchema } from './../purchase/entity/purchase.enity';\n\n@Module({\n   imports: [\n          MongooseModule.forFeature([\n            {\n                name:Product.name,\n                schema:ProductSchema\n            },\n            {\n                name: Purchase.name,\n                schema: PurchaseSchema\n            },\n            {\n                name: Order.name,\n                schema: OrderSchema\n            }\n        ])\n    ],\n    providers:[SaleService],\n    controllers:[SaleController],\n    exports:[SaleService]\n})\nexport class SaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaleService.html":{"url":"injectables/SaleService.html","title":"injectable - SaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sale/sale.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findDailySale\n                            \n                            \n                                    Async\n                                findMonthSale\n                            \n                            \n                                    Async\n                                findProductSale\n                            \n                            \n                                    Async\n                                findYearlySale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel: Model, productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/sale/sale.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDailySale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDailySale(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sale/sale.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '02/02/2022'\n                                    \n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '03/23/2022'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMonthSale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMonthSale(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sale/sale.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '02/02/2022'\n                                    \n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '03/23/2022'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductSale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductSale(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sale/sale.service.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '02/02/2022'\n                                    \n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '03/23/2022'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findYearlySale\n                        \n                    \n                \n            \n            \n                \n                    \n                    findYearlySale(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sale/sale.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '02/02/2022'\n                                    \n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '03/23/2022'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Order } from './../order/entities/order.entity';\nimport { Product } from './../product/entity/product.entity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\nimport { format } from 'date-fns'\n\n\n\n@Injectable()\nexport class SaleService {\n    constructor(\n        @InjectModel(Order.name)\n        private readonly orderModel: Model,\n        @InjectModel(Product.name)\n        private readonly productModel: Model\n        ){}\n\n        async  findDailySale(startDate:string= '02/02/2022',endDate:string = '03/23/2022'){\n          try {\n            const orderList =  await this.orderModel.find({\n              date: {\n                $gte:startDate,\n                $lt:endDate\n            },\n            status:'Success'\n            }).sort({date:1})\n          const sale =orderList.map(x=>{\n          return {\n\n            total:x.articles.map(articles=> articles.quantity * articles.sellingPrice).reduce((x,y)=>x+y),\n            date:format(new Date(x.date),'MM/dd/yyyy'),\n          }\n          })\n\n          return { sale }\n          } catch (error) {\n            throw new NotFoundException(`No Daily Record on ${startDate}  - ${endDate} `);\n          }\n\n          \n        }\n\n        async  findMonthSale(startDate:string= '02/02/2022',endDate:string = '03/23/2022'){\n          try {\n            const dataSet = []\n            const monthFormat=[\n              {\n                  no:'01',\n                  name:'January'\n              },\n              {\n                  no:'02',\n                  name:'February'\n              },\n              {\n                  no:'03',\n                  name:'March'\n              },\n              {\n                  no:'04',\n                  name:'April'\n              },\n              {\n                no:'05',\n                name:'May'\n              },\n              {\n                no:'06',\n                name:'June'\n              },\n              {\n                no:'07',\n                name:'July'\n              },\n              {\n                no:'08',\n                name:'August '\n              },\n              {\n                no:'09',\n                name:'September'\n              },\n              {\n                no:'10',\n                name:'October'\n              },\n              {\n                no:'11',\n                name:'November'\n              },\n              {\n                no:'12',\n                name:'December'\n              }\n              ]\n            const orderList =  await this.orderModel.find({\n              date: {\n                      $gte:startDate,\n                      $lt:endDate\n                    },\n                  status:'Success'\n               }).sort({date:1})\n              const sale =orderList.map(x=>{\n                return {\n  \n                  total:x.articles.map(articles=> articles.quantity * articles.sellingPrice).reduce((x,y)=>x+y),\n                  date:format(new Date(x.date),'MM/dd/yyyy'),\n                }\n              })\n              const month=sale.map(list =>{\n                  const date=list.date.split('').splice(0,2).join('')\n                  const total = list.total\n                  return{\n                  date ,\n                  total\n              }     \n                  })\n                  monthFormat.map(x=>{\n                      if(month.some(item => item.date === x.no)){\n                          const total = month.filter(y=>{\n                              if(y.date === x.no){\n                                  return y.total\n                              }\n                          })\n                          const totalAmount = total.map(x=>x.total).reduce((x,y)=>x+y)\n                          dataSet.push({date:x.name,total:totalAmount })\n                      }\n                  })\n             \n              return dataSet\n          }  catch (error) {\n            throw new NotFoundException(`No Monthly Record on ${startDate}  - ${endDate}`);\n          }\n        \n        }\n\n        async  findYearlySale(startDate:string= '02/02/2022',endDate:string = '03/23/2022'){\n          try {\n            const dataSet = []\n      \n            const orderList =  await this.orderModel.find({\n              date: {\n                      $gte:startDate,\n                      $lt:endDate\n                    },\n                  status:'Success'\n               }).sort({date:1})\n              const sale =orderList.map(x=>{\n                return {\n                  total:x.articles.map(articles=> articles.quantity * articles.sellingPrice).reduce((x,y)=>x+y),\n                  date:format(new Date(x.date),'MM/dd/yyyy'),\n                }\n              })\n              const yearList = new Set()\n              const year=sale.map(list =>{\n                  const date=list.date.split('').splice(6,10).join('')\n                  const total = list.total\n                  yearList.add(date)\n                  return{\n                  date ,\n                  total\n              }     \n                  })\n                  for (let item of yearList) {\n                    const total = year.filter(x =>{\n                      if(x.date === item){\n                         return x.total\n                        }\n                    })\n                    const totalAmount = total.map(x=>x.total).reduce((x,y)=>x+y)\n                    dataSet.push({date:item,total:totalAmount})\n                  }\n              return dataSet\n          }  catch (error) {\n            throw new NotFoundException(`No Yearly Record on ${startDate}  - ${endDate}`);\n          }\n       \n        }\n        async findProductSale(startDate:string= '02/02/2022',endDate:string = '03/23/2022'){\n          try {\n            const orderList =  await this.orderModel.find({\n              date: {\n                $gte:startDate,\n                $lt:endDate\n            },\n            status:'Success'\n            }).sort({date:1})\n\n         \n            const productOrder= []\n            const orderArticles=[]\n            const dataSet = []\n            const productNameList = new Set()\n            for (const order of orderList) {\n              for (const articles of order.articles) {\n              const productId = articles.productId\n              const product = await this.productModel.findOne({_id: productId})\n              productNameList.add(product.name)\n              orderArticles.push({\n                productId:articles.productId,\n                prodName: product.name,\n                quantity:articles.quantity,\n                sellingPrice:articles.sellingPrice,\n                total:articles.quantity * articles.sellingPrice\n              })\n              } \n              productOrder.push({\n                date:order.date,\n                articles:orderArticles\n              })\n                \n            }\n            for (let item of productNameList) {\n              const total = orderArticles.filter(x =>{\n                if(x.prodName === item){\n                   return x.total\n                  }\n              })\n              const totalAmount = total.map(x=>x.total).reduce((x,y)=>x+y)\n              dataSet.push({prod:item,total:totalAmount})\n            }\n    \n            return dataSet\n          }  catch (error) {\n            throw new NotFoundException(`No Product Record on ${startDate}  - ${endDate}`);\n          }\n        \n   \n        }\n          \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Store.html":{"url":"classes/Store.html","title":"class - Store","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/entity/store.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                date\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/entity/store.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/entity/store.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/entity/store.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/entity/store.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/entity/store.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\n@Schema()\nexport class Store  extends Document {\n  \n  @Prop()\n  name: string\n\n  @Prop()\n  contact: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  image: string\n\n  @Prop({default: new Date()})\n  date: Date\n}\n\nexport const StoreSchema = SchemaFactory.createForClass(Store)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StoreController.html":{"url":"controllers/StoreController.html","title":"controller - StoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/store.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                store\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createStoreDto: CreateStoreDto, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/store/store.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStoreDto\n                                    \n                                                CreateStoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/store/store.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/store/store.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/store/store.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateStoreDto: UpdateStoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/store/store.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStoreDto\n                                    \n                                                UpdateStoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { JwtAuthGuard } from '../manager/auth/guard/jwt-auth.guard';\nimport { UpdateStoreDto } from './dto/update-store.dto';\nimport { CreateStoreDto } from './dto/create-store.dto';\nimport { StoreService } from './store.service';\nimport { Body, Controller, Get, Param, Post, Delete, Patch, UseGuards } from '@nestjs/common';\n\n\n@UseGuards(JwtAuthGuard)\n@Controller('store')\nexport class StoreController {\n    constructor(private readonly storeService:StoreService){}\n\n    @Get()\n    findAll(){\n        return this.storeService.findAll()\n    }\n    @Get(':id')\n    findOne(@Param('id') id:string){\n        console.log(id);\n        \n        return this.storeService.findOne(id)\n    }\n    @Post('add')\n    create(@Body() createStoreDto:CreateStoreDto, @Body('name') name: string){\n        return this.storeService.create(name,createStoreDto)\n    }\n    \n    @Patch(':id')\n    update(@Param('id') id: string, @Body() updateStoreDto: UpdateStoreDto) {\n        return this.storeService.update(id, updateStoreDto);\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.storeService.remove(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreModule\n\n\n\ncluster_StoreModule_exports\n\n\n\ncluster_StoreModule_providers\n\n\n\n\nStoreService \n\nStoreService \n\n\n\nStoreModule\n\nStoreModule\n\nStoreService  -->\n\nStoreModule->StoreService \n\n\n\n\n\nStoreService\n\nStoreService\n\nStoreModule -->\n\nStoreService->StoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StoreController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { StoreSchema,Store } from './entity/store.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { StoreController } from './store.controller';\nimport { Module } from '@nestjs/common';\nimport { StoreService } from './store.service';\nimport { JwtStrategy } from '../manager/auth/strategy/jwt.strategy';\n\n@Module({\n  imports:[MongooseModule.forFeature([{\n    name:Store.name,\n    schema:StoreSchema\n  }])],\n  controllers:[StoreController],\n  providers: [StoreService, JwtStrategy],\n  exports: [StoreService]\n})\nexport class StoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreService.html":{"url":"injectables/StoreService.html","title":"injectable - StoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/store/store.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, createStoreDto: CreateStoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/store/store.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createStoreDto\n                                    \n                                                CreateStoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/store/store.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/store/store.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/store/store.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateStoreDto: UpdateStoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/store/store.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStoreDto\n                                    \n                                                UpdateStoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateStoreDto } from './dto/update-store.dto';\nimport { CreateStoreDto } from './dto/create-store.dto';\nimport { Store } from './entity/store.entity';\nimport { HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class StoreService {\n    constructor(\n        @InjectModel(Store.name)\n        private readonly storeModel:Model\n    ){}\n    findAll(){\n        return this.storeModel.find()\n    }\n    async findOne(id: string) {\n        try{\n            const store = await this.storeModel.findOne({ _id: id}).exec();\n            if (!store) {\n              throw new NotFoundException(`Store #${id} not found`);\n            }\n            return store;\n        }\n        catch(err){\n          throw new NotFoundException(`Store #${id} not found`);\n        }\n      }\n    \n      async create(name: string, createStoreDto: CreateStoreDto) {\n\n        const store = new this.storeModel(createStoreDto);\n        const isExisting = await this.storeModel.findOne({ name: name }).exec()\n    \n        if (isExisting) {\n          throw new HttpException('Store already exist!', HttpStatus.CONFLICT)\n        }\n        return store.save();\n      }\n    \n      async update(id: string, updateStoreDto: UpdateStoreDto) {\n         await this.findOne(id)\n         await this.storeModel\n         .findOneAndUpdate({ _id: id }, { $set: updateStoreDto }, { new: true })\n         .exec();\n      }\n    \n      async remove(id: string) {\n        const store = await this.findOne(id)\n        return store.remove();\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/update-customer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCustomerDto } from './create-customer.dto';\n\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDriverDto.html":{"url":"classes/UpdateDriverDto.html","title":"class - UpdateDriverDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDriverDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driver/dto/update-driver.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateDriverDto } from \"./create-driver.dto\";\n\nexport class UpdateDriverDto extends PartialType(CreateDriverDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExpenseDto.html":{"url":"classes/UpdateExpenseDto.html","title":"class - UpdateExpenseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExpenseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense/dto/update-expense.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateExpenseDto } from './create-expense.dto';\nimport { PartialType } from '@nestjs/mapped-types';\nexport class UpdateExpenseDto extends PartialType(CreateExpenseDto){}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateManagerDto.html":{"url":"classes/UpdateManagerDto.html","title":"class - UpdateManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/manager/dto/update-manager.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateManagerDto } from './create-manager.dto';\n\nexport class UpdateManagerDto extends PartialType(CreateManagerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product-dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateProductDto } from './create-product.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePurchaseDto.html":{"url":"classes/UpdatePurchaseDto.html","title":"class - UpdatePurchaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePurchaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/purchase/dto/update-purchase.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreatePurchaseDto } from './create-purchase.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdatePurchaseDto extends PartialType(CreatePurchaseDto){}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStoreDto.html":{"url":"classes/UpdateStoreDto.html","title":"class - UpdateStoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/dto/update-store.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateStoreDto } from './create-store.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdateStoreDto extends PartialType(CreateStoreDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploadController.html":{"url":"controllers/UploadController.html","title":"controller - UploadController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/upload.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                upload\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n            \n                \ndisplay(res, image)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':name')\n                \n            \n\n            \n                \n                    Defined in src/upload/upload.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/upload/upload.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { UploadService } from './upload.service';\nimport { Controller, Get, Post, Res, UploadedFile, UseInterceptors, Param } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\n\n@Controller('upload')\nexport class UploadController {\n    constructor(\n        private readonly uploadService:UploadService\n    ){}\n    @Get(':name')\n    display(@Res() res,@Param() image){\n        return this.uploadService.show(res,image)\n    }\n    @Post()\n    @UseInterceptors(FileInterceptor('file',{\n        storage: diskStorage({\n          destination: './public/uploads',\n            filename: (req, file, cb) => {\n              cb(null, `${Date.now()}${extname(file.originalname)}`);\n      },\n        }),\n      }))\n    uploadFile(@UploadedFile() file: Express.Multer.File){\n        return this.uploadService.upload(file)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadModule.html":{"url":"modules/UploadModule.html","title":"module - UploadModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_providers\n\n\n\n\nUploadService\n\nUploadService\n\n\n\nUploadModule\n\nUploadModule\n\nUploadModule -->\n\nUploadService->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/upload/upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploadController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadController } from './upload.controller';\nimport { UploadService } from './upload.service';\n\n@Module({\n  controllers: [UploadController],\n  providers: [UploadService]\n})\nexport class UploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(response, image)\n                \n            \n\n\n            \n                \n                    Defined in src/upload/upload.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(file)\n                \n            \n\n\n            \n                \n                    Defined in src/upload/upload.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { join } from 'path';\n\n@Injectable()\nexport class UploadService {\n    upload(file){\n        return file.filename\n    }\n    show(response,image){\n        return response.sendFile(join(process.cwd(), `/public/uploads/${image.name}`))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth0/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/auth/guard/local-auth.guard.ts\n            \n            injectable\n            CustomerLocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/auth/strategy/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customer/auth/strategy/local.strategy.ts\n            \n            injectable\n            CustomerLocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/customer/dto/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/customer/dto/login-cutomer.dto.ts\n            \n            class\n            LoginCustomerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customer/dto/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/entities/customer.entity.ts\n            \n            class\n            Customer\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/customer/entities/customer.entity.ts\n            \n            variable\n            CustomerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/mailer/service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customer/utils/brcrypt.ts\n            \n            function\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/utils/brcrypt.ts\n            \n            function\n            encodePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery/auth/strategy/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/delivery/delivery.controller.ts\n            \n            controller\n            DeliveryController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/delivery/delivery.service.ts\n            \n            injectable\n            DeliveryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/delivery/entities/delivery.entity.ts\n            \n            class\n            Delivery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/delivery/entities/delivery.entity.ts\n            \n            variable\n            DeliverySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/driver/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/driver/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/driver/auth/strategy/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/driver/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/driver/driver.controller.ts\n            \n            controller\n            DriverController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/driver/driver.service.ts\n            \n            injectable\n            DriverService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/driver/dto/create-driver.dto.ts\n            \n            class\n            CreateDriverDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/driver/dto/login-driver.dto.ts\n            \n            class\n            LoginDriveDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/driver/dto/update-driver.dto.ts\n            \n            class\n            UpdateDriverDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/driver/entities/drivers.entity.ts\n            \n            class\n            Driver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/driver/entities/drivers.entity.ts\n            \n            variable\n            DriverrSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/driver/utils/brcrypt.ts\n            \n            function\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/driver/utils/brcrypt.ts\n            \n            function\n            encodePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense/dto/create-expense.dto.ts\n            \n            class\n            CreateExpenseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/expense/dto/update-expense.dto.ts\n            \n            class\n            UpdateExpenseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense/entity/expense.enitity.ts\n            \n            class\n            Expense\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/expense/entity/expense.enitity.ts\n            \n            variable\n            ExpenseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense/expense.controller.ts\n            \n            controller\n            ExpenseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/expense/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/income-statement/income-statement.controller.ts\n            \n            controller\n            IncomeStatementController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/income-statement/income-statement.service.ts\n            \n            injectable\n            IncomeStatementService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/manager/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/manager/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/manager/auth/strategy/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/manager/auth/strategy/local.strategy.ts\n            \n            injectable\n            ManagerLocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/manager/dto/create-manager.dto.ts\n            \n            class\n            CreateManagerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/manager/dto/login-manager.dto.ts\n            \n            class\n            LoginManagerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/manager/dto/update-manager.dto.ts\n            \n            class\n            UpdateManagerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/manager/entities/manager.entity.ts\n            \n            class\n            Manager\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/manager/entities/manager.entity.ts\n            \n            variable\n            ManagerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/manager/manager.controller.ts\n            \n            controller\n            ManagerController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/manager/manager.service.ts\n            \n            injectable\n            ManagerService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/manager/utils/brcrypt.ts\n            \n            function\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/manager/utils/brcrypt.ts\n            \n            function\n            encodePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/articles-dto.ts\n            \n            class\n            Articles\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            updateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/dto/update-product-dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entity/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/entity/product.entity.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/purchase/dto/articles.dto.ts\n            \n            class\n            Articles\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/purchase/dto/create-purchase.dto.ts\n            \n            class\n            CreatePurchaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/purchase/dto/update-purchase.dto.ts\n            \n            class\n            UpdatePurchaseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/purchase/entity/purchase.enity.ts\n            \n            class\n            Purchase\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/purchase/entity/purchase.enity.ts\n            \n            variable\n            PurchaseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/purchase/purchase.controller.ts\n            \n            controller\n            PurchaseController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/purchase/purchase.service.ts\n            \n            injectable\n            PurchaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/sale/sale.controller.ts\n            \n            controller\n            SaleController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sale/sale.service.ts\n            \n            injectable\n            SaleService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/store/dto/create-store.dto.ts\n            \n            class\n            CreateStoreDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/store/dto/update-store.dto.ts\n            \n            class\n            UpdateStoreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/entity/store.entity.ts\n            \n            class\n            Store\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/store/entity/store.entity.ts\n            \n            variable\n            StoreSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/store.controller.ts\n            \n            controller\n            StoreController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/store/store.service.ts\n            \n            injectable\n            StoreService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/upload/upload.controller.ts\n            \n            controller\n            UploadController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/upload/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.6.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/platform-fastify : ^8.4.2\n        \n            assert : ^2.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            date-fns : ^2.28.0\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.3\n        \n            fastify-cookie : ^5.6.0\n        \n            handlebars : ^4.7.7\n        \n            mongoose : ^6.2.6\n        \n            nestjs-url-generator : ^1.0.1\n        \n            nodemailer : ^6.7.3\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            comparePasswords   (src/.../brcrypt.ts)\n                        \n                        \n                            comparePasswords   (src/.../brcrypt.ts)\n                        \n                        \n                            comparePasswords   (src/.../brcrypt.ts)\n                        \n                        \n                            encodePassword   (src/.../brcrypt.ts)\n                        \n                        \n                            encodePassword   (src/.../brcrypt.ts)\n                        \n                        \n                            encodePassword   (src/.../brcrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/customer/utils/brcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \ncomparePasswords(rawPassword: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodePassword\n                        \n                    \n                \n            \n            \n                \nencodePassword(rawPassword: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/driver/utils/brcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \ncomparePasswords(rawPassword: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodePassword\n                        \n                    \n                \n            \n            \n                \nencodePassword(rawPassword: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/manager/utils/brcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \ncomparePasswords(rawPassword: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodePassword\n                        \n                    \n                \n            \n            \n                \nencodePassword(rawPassword: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DriverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpenseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncomeStatementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PurchaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_exports\n\n\n\ncluster_DeliveryModule_providers\n\n\n\ncluster_DriverModule\n\n\n\ncluster_DriverModule_exports\n\n\n\ncluster_DriverModule_providers\n\n\n\ncluster_ExpenseModule\n\n\n\ncluster_ExpenseModule_exports\n\n\n\ncluster_ExpenseModule_providers\n\n\n\ncluster_IncomeStatementModule\n\n\n\ncluster_IncomeStatementModule_exports\n\n\n\ncluster_IncomeStatementModule_providers\n\n\n\ncluster_ManagerModule\n\n\n\ncluster_ManagerModule_exports\n\n\n\ncluster_ManagerModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_PurchaseModule\n\n\n\ncluster_PurchaseModule_exports\n\n\n\ncluster_PurchaseModule_providers\n\n\n\ncluster_SaleModule\n\n\n\ncluster_SaleModule_exports\n\n\n\ncluster_SaleModule_providers\n\n\n\ncluster_StoreModule\n\n\n\ncluster_StoreModule_exports\n\n\n\ncluster_StoreModule_providers\n\n\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_providers\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nJwtSecret1Service \n\nJwtSecret1Service \n\nJwtSecret1Service  -->\n\nCustomerModule->JwtSecret1Service \n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nDeliveryService \n\nDeliveryService \n\nDeliveryService  -->\n\nDeliveryModule->DeliveryService \n\n\n\n\n\nDriverModule\n\nDriverModule\n\nAppModule -->\n\nDriverModule->AppModule\n\n\n\n\n\nDriverService \n\nDriverService \n\nDriverService  -->\n\nDriverModule->DriverService \n\n\n\n\n\nExpenseModule\n\nExpenseModule\n\nAppModule -->\n\nExpenseModule->AppModule\n\n\n\n\n\nExpenseService \n\nExpenseService \n\nExpenseService  -->\n\nExpenseModule->ExpenseService \n\n\n\n\n\nIncomeStatementModule\n\nIncomeStatementModule\n\nAppModule -->\n\nIncomeStatementModule->AppModule\n\n\n\n\n\nIncomeStatementService \n\nIncomeStatementService \n\nIncomeStatementService  -->\n\nIncomeStatementModule->IncomeStatementService \n\n\n\n\n\nManagerModule\n\nManagerModule\n\nAppModule -->\n\nManagerModule->AppModule\n\n\n\n\n\nJwtSecret2Service \n\nJwtSecret2Service \n\nJwtSecret2Service  -->\n\nManagerModule->JwtSecret2Service \n\n\n\n\n\nManagerService \n\nManagerService \n\nManagerService  -->\n\nManagerModule->ManagerService \n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nPurchaseModule\n\nPurchaseModule\n\nAppModule -->\n\nPurchaseModule->AppModule\n\n\n\n\n\nPurchaseService \n\nPurchaseService \n\nPurchaseService  -->\n\nPurchaseModule->PurchaseService \n\n\n\n\n\nSaleModule\n\nSaleModule\n\nAppModule -->\n\nSaleModule->AppModule\n\n\n\n\n\nSaleService \n\nSaleService \n\nSaleService  -->\n\nSaleModule->SaleService \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\nStoreService \n\nStoreService \n\nStoreService  -->\n\nStoreModule->StoreService \n\n\n\n\n\nUploadModule\n\nUploadModule\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCustomerLocalStrategy\n\nCustomerLocalStrategy\n\nCustomerModule -->\n\nCustomerLocalStrategy->CustomerModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nMailService\n\nMailService\n\nCustomerModule -->\n\nMailService->CustomerModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\n\n\nDriverService\n\nDriverService\n\nDriverModule -->\n\nDriverService->DriverModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nDriverModule -->\n\nLocalStrategy->DriverModule\n\n\n\n\n\nExpenseService\n\nExpenseService\n\nExpenseModule -->\n\nExpenseService->ExpenseModule\n\n\n\n\n\nIncomeStatementService\n\nIncomeStatementService\n\nIncomeStatementModule -->\n\nIncomeStatementService->IncomeStatementModule\n\n\n\n\n\nManagerLocalStrategy\n\nManagerLocalStrategy\n\nManagerModule -->\n\nManagerLocalStrategy->ManagerModule\n\n\n\n\n\nManagerService\n\nManagerService\n\nManagerModule -->\n\nManagerService->ManagerModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nPurchaseService\n\nPurchaseService\n\nPurchaseModule -->\n\nPurchaseService->PurchaseModule\n\n\n\n\n\nSaleService\n\nSaleService\n\nSaleModule -->\n\nSaleService->SaleModule\n\n\n\n\n\nStoreService\n\nStoreService\n\nStoreModule -->\n\nStoreService->StoreModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nUploadModule -->\n\nUploadService->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/updateOrderDto.html":{"url":"classes/updateOrderDto.html","title":"class - updateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  updateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateOrderDto } from './create-order.dto' \nexport class updateOrderDto extends PartialType (CreateOrderDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CustomerSchema   (src/.../customer.entity.ts)\n                        \n                        \n                            DeliverySchema   (src/.../delivery.entity.ts)\n                        \n                        \n                            DriverrSchema   (src/.../drivers.entity.ts)\n                        \n                        \n                            ExpenseSchema   (src/.../expense.enitity.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            ManagerSchema   (src/.../manager.entity.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.entity.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.entity.ts)\n                        \n                        \n                            PurchaseSchema   (src/.../purchase.enity.ts)\n                        \n                        \n                            StoreSchema   (src/.../store.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/customer/entities/customer.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Customer)\n                    \n                \n\n\n        \n    \n\n    src/delivery/entities/delivery.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeliverySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Delivery)\n                    \n                \n\n\n        \n    \n\n    src/driver/entities/drivers.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DriverrSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Driver)\n                    \n                \n\n\n        \n    \n\n    src/expense/entity/expense.enitity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExpenseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Expense)\n                    \n                \n\n\n        \n    \n\n    src/auth0/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'secretKey',\n}\n                    \n                \n\n\n        \n    \n\n    src/manager/entities/manager.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ManagerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Manager)\n                    \n                \n\n\n        \n    \n\n    src/order/entities/order.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/product/entity/product.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/purchase/entity/purchase.enity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PurchaseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Purchase)\n                    \n                \n\n\n        \n    \n\n    src/store/entity/store.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StoreSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Store)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
